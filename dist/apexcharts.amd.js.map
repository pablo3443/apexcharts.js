{"version":3,"sources":["webpack://ApexCharts/webpack/universalModuleDefinition","webpack://ApexCharts/./src/utils/Utils.js","webpack://ApexCharts/./src/modules/Animations.js","webpack://ApexCharts/./src/modules/Filters.js","webpack://ApexCharts/./src/modules/Graphics.js","webpack://ApexCharts/./src/modules/annotations/Helpers.js","webpack://ApexCharts/./src/modules/annotations/XAxisAnnotations.js","webpack://ApexCharts/./src/modules/CoreUtils.js","webpack://ApexCharts/./src/modules/annotations/YAxisAnnotations.js","webpack://ApexCharts/./src/modules/annotations/PointsAnnotations.js","webpack://ApexCharts/./src/modules/settings/Options.js","webpack://ApexCharts/./src/modules/annotations/Annotations.js","webpack://ApexCharts/./src/modules/Fill.js","webpack://ApexCharts/./src/modules/Markers.js","webpack://ApexCharts/./src/charts/Scatter.js","webpack://ApexCharts/./src/modules/DataLabels.js","webpack://ApexCharts/./src/charts/common/bar/DataLabels.js","webpack://ApexCharts/./src/modules/Series.js","webpack://ApexCharts/./src/charts/common/bar/Helpers.js","webpack://ApexCharts/./src/charts/Bar.js","webpack://ApexCharts/./src/utils/DateTime.js","webpack://ApexCharts/./src/charts/RangeBar.js","webpack://ApexCharts/./src/modules/settings/Defaults.js","webpack://ApexCharts/./src/modules/settings/Config.js","webpack://ApexCharts/./src/modules/settings/Globals.js","webpack://ApexCharts/./src/modules/Base.js","webpack://ApexCharts/./src/modules/Data.js","webpack://ApexCharts/./src/modules/Formatters.js","webpack://ApexCharts/./src/modules/axes/AxesUtils.js","webpack://ApexCharts/./src/modules/Exports.js","webpack://ApexCharts/./src/modules/axes/XAxis.js","webpack://ApexCharts/./src/modules/axes/Grid.js","webpack://ApexCharts/./src/modules/Scales.js","webpack://ApexCharts/./src/modules/Range.js","webpack://ApexCharts/./src/modules/axes/YAxis.js","webpack://ApexCharts/./src/modules/Events.js","webpack://ApexCharts/./src/modules/helpers/Localization.js","webpack://ApexCharts/./src/modules/axes/Axes.js","webpack://ApexCharts/./src/modules/Crosshairs.js","webpack://ApexCharts/./src/modules/Responsive.js","webpack://ApexCharts/./src/modules/Theme.js","webpack://ApexCharts/./src/modules/TitleSubtitle.js","webpack://ApexCharts/./src/modules/dimensions/Helpers.js","webpack://ApexCharts/./src/modules/dimensions/XAxis.js","webpack://ApexCharts/./src/modules/dimensions/YAxis.js","webpack://ApexCharts/./src/modules/dimensions/Grid.js","webpack://ApexCharts/./src/modules/dimensions/Dimensions.js","webpack://ApexCharts/./src/modules/legend/Helpers.js","webpack://ApexCharts/./src/modules/legend/Legend.js","webpack://ApexCharts/./src/modules/Toolbar.js","webpack://ApexCharts/./src/modules/ZoomPanSelection.js","webpack://ApexCharts/./src/modules/tooltip/Utils.js","webpack://ApexCharts/./src/modules/tooltip/Labels.js","webpack://ApexCharts/./src/modules/tooltip/Position.js","webpack://ApexCharts/./src/modules/tooltip/Marker.js","webpack://ApexCharts/./src/modules/tooltip/Intersect.js","webpack://ApexCharts/./src/modules/tooltip/AxesTooltip.js","webpack://ApexCharts/./src/modules/tooltip/Tooltip.js","webpack://ApexCharts/./src/charts/BarStacked.js","webpack://ApexCharts/./src/charts/BoxCandleStick.js","webpack://ApexCharts/./src/charts/common/treemap/Helpers.js","webpack://ApexCharts/./src/charts/HeatMap.js","webpack://ApexCharts/./src/charts/common/circle/Helpers.js","webpack://ApexCharts/./src/charts/Pie.js","webpack://ApexCharts/./src/charts/Radar.js","webpack://ApexCharts/./src/charts/Radial.js","webpack://ApexCharts/./src/charts/Gantt.js","webpack://ApexCharts/./src/charts/common/line/Helpers.js","webpack://ApexCharts/./src/charts/Line.js","webpack://ApexCharts/./src/charts/Treemap.js","webpack://ApexCharts/./src/modules/TimeScale.js","webpack://ApexCharts/./src/modules/Core.js","webpack://ApexCharts/./src/modules/helpers/UpdateHelpers.js","webpack://ApexCharts/./src/modules/helpers/InitCtxVariables.js","webpack://ApexCharts/./src/modules/helpers/Destroy.js","webpack://ApexCharts/./src/apexcharts.js","webpack://ApexCharts/./src/libs/Treemap-squared.js","webpack://ApexCharts/./node_modules/css-loader/dist/runtime/api.js","webpack://ApexCharts/./node_modules/svg.draggable.js/dist/svg.draggable.js","webpack://ApexCharts/./node_modules/svg.filter.js/dist/svg.filter.js","webpack://ApexCharts/./node_modules/svg.js/dist/svg.js","webpack://ApexCharts/./node_modules/svg.pathmorphing.js/dist/svg.pathmorphing.js","webpack://ApexCharts/./node_modules/svg.resize.js/dist/svg.resize.js","webpack://ApexCharts/./node_modules/svg.select.js/dist/svg.select.js","webpack://ApexCharts/./src/utils/DetectElementResize.js","webpack://ApexCharts/./src/assets/apexcharts.css","webpack://ApexCharts/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://ApexCharts/./src/assets/apexcharts.css?cfaf","webpack://ApexCharts/./src/assets/ico-home.svg","webpack://ApexCharts/./src/assets/ico-menu.svg","webpack://ApexCharts/./src/assets/ico-minus.svg","webpack://ApexCharts/./src/assets/ico-pan-hand.svg","webpack://ApexCharts/./src/assets/ico-plus.svg","webpack://ApexCharts/./src/assets/ico-select.svg","webpack://ApexCharts/./src/assets/ico-zoom-in.svg","webpack://ApexCharts/webpack/bootstrap","webpack://ApexCharts/webpack/startup","webpack://ApexCharts/webpack/runtime/compat get default export","webpack://ApexCharts/webpack/runtime/define property getters","webpack://ApexCharts/webpack/runtime/hasOwnProperty shorthand","webpack://ApexCharts/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","fn","me","apply","arguments","item","Array","isArray","list","i","array","length","target","source","Object","assign","TypeError","output","index","nextKey","hasOwnProperty","this","isObject","keys","forEach","key","extend","arrToExtend","resultArr","extendedArr","map","push","Utils","month","prototype","toString","call","cloneResult","clone","prop","x","Math","log","LN10","pow","floor","log10","base","val","parseFloat","random","substring","data","String","split","z","sign","str","replace","mag","Number","el","computedStyle","getComputedStyle","elementHeight","clientHeight","elementWidth","clientWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","element","rect","getBoundingClientRect","top","right","bottom","left","width","height","y","arr","reduce","a","b","aa","bb","hex","opacity","h","match","RegExp","parseInt","join","rgba","rgb","slice","color","test","size","dataPointsLen","dotsArray","angle","PI","curPos","sin","cos","centerX","centerY","radius","angleInDegrees","angleInRadians","escapeWith","newStr","old_index","new_index","k","undefined","splice","s","cls","parentElement","classList","contains","styles","style","value","isNaN","n","navigator","userAgent","toLowerCase","indexOf","window","appVersion","ua","msie","rv","edge","string","percent","f","t","p","R","G","B","round","isColorHex","shadeHexColor","shadeRGBColor","Animations","ctx","w","setEasingFunctions","easing","globals","config","chart","animations","pos","from","to","speed","attr","animate","cb","r","afterAll","cx","cy","params","realIndex","j","fill","pathFrom","pathTo","delay","delayFactor","animateGradually","enabled","dynamicAnimation","dataChanged","type","morphSVG","comboCharts","delayedElements","d","remove","animationEnded","showDelayedElements","events","animationEnd","disableAnimationForCorrupPath","path","gridHeight","shouldAnimate","plot","series","maxValsInArrayIndex","animationCompleted","unfilter","SVG","Filter","states","normal","filter","applyFilter","dropShadow","node","attrs","intensity","add","shadowAttr","addShadow","componentTransfer","slope","intercept","filterer","setAttribute","_scaleFilterSize","addNormalFilter","addLightenFilter","addDarkenFilter","blur","shadowBlur","flood","composite","sourceAlpha","offset","gaussianBlur","merge","blend","noUserSpaceOnUse","dataPointIndex","selectedDataPoints","activeFilter","active","setAttributes","x1","y1","x2","y2","lineColor","dashArray","strokeWidth","line","dom","Paper","stroke","strokeColor","strokeDashArray","rx","ry","polygonString","polygon","c","circle","fillOpacity","strokeOpacity","classes","strokeLinecap","lineCap","class","g","group","hORv","axisRotation","largeArcFlag","sweepFlag","relative","coord","arc","animationDelay","initialSpeed","dataChangeSpeed","className","shouldClipToGrid","bindEventsOnPaths","drawShadow","filters","Filters","anim","initialAnim","dynamicAnim","resized","strokeDashArrayOpt","drawPath","cuid","getDefaultFilter","enabledOnSeries","shadow","addEventListener","pathMouseEnter","bind","pathMouseLeave","pathMouseDown","defaultAnimateOpts","animatePathsGradually","pattern","gfrom","gto","opacityFrom","opacityTo","stops","colorStops","stop1","stop2","stop3","stop4","radial","gradient","stop","at","offx","gridWidth","offy","gradientUnits","fx","fy","elText","text","textAnchor","fontSize","fontFamily","fontWeight","foreColor","cssClass","isPlainText","tspan","newLine","plain","opts","pSize","elPoint","shape","pRadius","nSize","drawRect","pointFillColor","pointFillOpacity","pointStrokeColor","pointStrokeWidth","pointStrokeOpacity","drawCircle","e","getAttribute","dataPointMouseEnter","seriesIndex","fireEvent","hover","isTouchDevice","hoverFilter","dataPointMouseLeave","selected","allowMultipleDataPointsSelection","elPaths","select","members","elCircles","deSelect","els","dataPointSelection","getBBox","transform","useBBox","virtualText","drawText","bbox","textObj","textString","getComputedTextLength","textContent","getSubStringLength","Helpers","annoCtx","anno","annoIndex","label","orientation","xAnno","baseEl","querySelector","xAnnoCoord","position","annoRotatingCenter","graphics","rotateAroundCenter","annoEl","trim","elGridRect","coords","pleft","padding","pright","ptop","pbottom","elRect","barPadForNumericAxis","borderRadius","background","borderWidth","borderColor","id","annoLabel","parent","parentNode","addBackgroundToAnno","insertBefore","annotations","xaxis","yaxis","points","rX","convertedCatToNumeric","categoryLabels","catIndex","labels","xLabel","XAnnotations","invertAxis","min","minY","minX","max","maxY","maxX","range","yRange","xRange","inversedReversedAxis","dataFormatXNumeric","helpers","getStringX","drawLine","offsetX","offsetY","appendChild","temp","fillColor","textY","textRects","getTextRects","rel","setOrientations","elg","addXaxisAnnotation","comboBarCount","comboCount","configInstance","options","extendYAxis","extendYAxisAnnotations","extendXAxisAnnotations","extendPointAnnotations","total","stackedSeriesTotals","acc","cur","every","catLabels","li","formatter","markers","m","largestSize","seriesTotals","ser","seriesX","seriesPercent","invertedYRatio","xRatio","initialXRatio","invertedXRatio","gl","yRatio","zRatio","baseLineY","baseLineInvertedY","baseLineX","isMultipleYAxis","minYArr","abs","maxYArr","zRange","maxZ","minZ","initialMaxX","initialMinX","MIN_VALUE","hasNegs","seriesLog","logarithmic","getLogVal","invalidLogScale","yIndex","yLogRatio","logYRange","MAX_VALUE","si","v","YAnnotations","_getY1Y2","_getYAxisAnnotationWidth","textX","yP","yPos","yAxisIndex","CoreUtils","reversed","addYaxisAnnotation","PointAnnotations","pointY","console","warn","annoY","duplicateSeriesName","countDuplicateSeriesName","serieName","seriesName","actualSerieIndex","marker","optsPoints","point","drawMarker","customSVG","innerHTML","image","imgWidth","imgHeight","addImage","appendTo","addPointAnnotation","Options","yAxis","show","showAlways","showForNullSeries","opposite","tickAmount","forceNiceScale","floating","decimalsInFloat","minWidth","maxWidth","align","rotate","colors","axisBorder","axisTicks","title","tooltip","crosshairs","pointAnnotation","yAxisAnnotation","xAxisAnnotation","backgroundColor","texts","images","shapes","locales","en","defaultLocale","beforeMount","mounted","updated","click","mouseMove","mouseLeave","legendClick","markerClick","selection","beforeZoom","beforeResetZoom","zoomed","scrolled","brushScrolled","parentHeightOffset","redrawOnParentResize","redrawOnWindowResize","sparkline","brush","autoScaleYaxis","stacked","stackType","toolbar","tools","download","zoom","zoomin","zoomout","pan","reset","customIcons","export","csv","filename","columnDelimiter","headerCategory","headerValue","dateFormatter","timestamp","Date","toDateString","png","svg","autoSelected","zoomedArea","plotOptions","area","fillTo","bar","horizontal","columnWidth","barHeight","distributed","rangeBarOverlap","rangeBarGroupRows","ranges","backgroundBarColors","backgroundBarOpacity","backgroundBarRadius","dataLabels","maxItems","hideOverflowingLabels","bubble","minBubbleRadius","maxBubbleRadius","candlestick","upward","downward","wick","useFillColor","boxPlot","upper","lower","heatmap","enableShades","shadeIntensity","reverseNegativeShade","useFillColorAsStroke","colorScale","inverse","treemap","radialBar","inverseOrder","startAngle","endAngle","hollow","margin","imageWidth","imageHeight","imageOffsetX","imageOffsetY","imageClipped","track","name","pie","customScale","expandOnClick","minAngleToShowLabel","donut","polarArea","rings","spokes","connectorColors","radar","polygons","strokeColors","shade","gradientToColors","inverseColors","src","forecastDataPoints","count","grid","lines","row","column","legend","showForSingleSeries","showForZeroSeries","horizontalAlign","tooltipHoverFormatter","customLegendItems","useSeriesColors","fillColors","customHTML","onClick","itemMargin","vertical","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","discrete","onDblClick","showNullDataPoints","sizeOffset","noData","verticalAlign","responsive","subtitle","curve","shared","followCursor","intersect","custom","fillSeriesColor","theme","onDatasetHover","format","items","display","fixed","categories","overwriteCategories","rotateAlways","hideOverlappingLabels","minHeight","maxHeight","showDuplicates","datetimeUTC","datetimeFormatter","year","day","hour","minute","second","tickPlacement","colorFrom","colorTo","mode","palette","monochrome","shadeTo","Annotations","Graphics","isBarHorizontal","xAxisAnnotations","XAxisAnnotations","yAxisAnnotations","YAxisAnnotations","pointsAnnotations","PointsAnnotations","xDivision","dataPoints","axisCharts","yAnnotations","drawYAxisAnnotations","xAnnotations","drawXAxisAnnotations","pointAnnotations","drawPointAnnotations","annoArray","annoElArray","elGraphical","annotationsBackground","addText","textRect","img","move","pushToMemory","context","addAnnotationExternal","contextMethod","childNodes","axesAnno","axesAnnoLabel","memory","methodsToExec","method","annos","querySelectorAll","firstChild","removeChild","cnf","svgW","svgH","fillImg","elPattern","document","createElementNS","SVGNS","patternID","patternUnits","elImage","setAttributeNS","xlink","preserveAspectRatio","elDefs","seriesNumber","pathFill","patternFill","gradientFill","getSeriesIndex","getFillColors","seriesColors","fillType","getFillType","defaultColor","handlePatternFill","handleGradientFill","imgSrc","clippedImgArea","solid","patternStrokeWidth","patternLineColor","drawPattern","gradientTo","utils","gradientFrom","shadeColor","gToColor","drawGradient","Markers","pointsPos","alwaysDrawMarker","elPointsWrap","q","PointClasses","shouldMarkerDraw","getMarkerConfig","setSelectionFilter","addEvents","pointsArray","pStyle","getMarkerStyle","pointShape","pointStrokeDashArray","passive","Scatter","elSeries","elPointsMain","elParent","shouldDraw","finishRadius","Infinity","seriesZ","drawPoint","Fill","markerConfig","pathFillCircle","fillPath","animateMarker","setTimeout","prevX","prevY","prevR","prevPathJ","previousPaths","cs","collapsedSeries","animateCircle","alwaysDrawDataLabel","drawnextLabel","dataLabelsRects","len","lastDrawnIndex","lastDrawnDataLabelsIndexes","lastDataLabelRect","dataLabelsConfig","elDataLabelsWrap","getText","scatter","centerTextInBubbleCoords","centerTextInBubble","plotDataLabelsText","offsetCorrection","correctedLabels","dataLabelsCorrection","dataLabelColor","offX","offY","dataLabelText","textShadow","bCnf","paddingH","paddingV","elDataLabels","addBackgroundToDataLabel","elDataLabelsNodes","nextSibling","BarDataLabels","barCtx","barWidth","barYPosition","visibleSeries","renderedPath","bcx","bcy","isXNumeric","dataLabelsPos","dataLabelsX","dataLabelsY","barDataLabelsConfig","barOptions","isTimelineBar","yLabel","yLabelFormatters","isHorizontal","calculateBarsDataLabelsPosition","calculateColumnsDataLabelsPosition","drawCalculatedDataLabels","dataPointsDividedWidth","valIsNegative","newY","isReversed","dataPointsDividedHeight","newX","DataLabels","isSeriesNotCollapsed","collapsedSeriesIndices","modifiedDataLabelsConfig","Series","legendInactiveClass","getElementsByClassName","targetElement","getSeriesByName","isHidden","iterateOnAllCollapsedSeries","ancillaryCollapsedSeries","isSeriesHidden","legendHelpers","shouldUpdateChart","shouldResetZoom","shouldResetCollapsed","initialSeries","ancillaryCollapsedSeriesIndices","emptyCollapsedSeries","updateHelpers","revertDefaultAxisMinMax","_updateSeries","allSeriesEls","seriesCnt","seriesEl","dataLabelEl","se","allHeatMapElements","activeInactive","action","removeInactiveClassFromHoveredRange","ignoreBars","order","activeIndex","activeSeriesIndex","hasBars","pushPaths","seriesEls","paths","dArr","hasAttribute","chartType","handlePrevBubbleScatterPaths","heatTreeSeries","getAttr","allSeriesCollapsed","noDataOpts","svgWidth","svgHeight","titleText","sl","equalLen","filteredSerX","filteredSeriesX","allSeriesHasEqualX","totalItems","seriesLen","visibleI","visibleItems","zeroSerieses","radiusOnSeriesNumber","checkZeroSeries","yDivision","zeroH","zeroW","padHorizontal","minXDiff","yaxisIndex","isNullValue","getActiveConfigSeriesIndex","bcolor","barXPosition","shapeOpts","newPath","getRoundedBars","getPreviousPath","pathWithRadius","yArrj","yArrjF","yArrjVal","xArrj","xArrjF","xArrjVal","quadraticCurve","zs","zsj","zeroPositionForNull","xForVal","yForVal","goals","seriesGoals","goal","getXForValue","getYForValue","goalX","goalY","lineGroup","xyRatios","seriesRangeBarTimeline","barHelpers","BarHelpers","coreUtils","getLogSeries","getLogYRatios","initVariables","ret","bc","seriesNames","addCollapsedClassToSeries","initPositions","initialPositions","elGoalsMarkers","getStrokeWidth","pathsParams","indexes","drawBarPaths","drawColumnPaths","barGoalLine","drawGoalLine","getPathFillColor","renderSeries","seriesXvalues","seriesYvalues","lineFill","renderPaths","strokeLineCap","forecast","handleBarDataLabels","getBarpaths","barBackground","getGoalValues","sxI","getColumnPaths","pp","gpp","months31","months30","daysCntOfYear","date","parseDate","dateStr","parse","toISOString","substr","getTime","toUTCString","parsed","getTimeStamp","locale","utc","MMMM","months","MMM","shortMonths","dddd","days","ddd","shortDays","ii","getUTCFullYear","getFullYear","M","getUTCMonth","getMonth","getUTCDate","getDate","H","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","T","charAt","tz","getTimezoneOffset","K","tzMin","getUTCDay","getDay","tsMin","tsMax","minD","formatDate","maxD","minMillisecond","maxMillisecond","minSecond","maxSecond","minMinute","maxMinute","minHour","maxHour","minDate","maxDate","minMonth","maxMonth","minYear","maxYear","subtract","determineDaysOfMonths","isLeapYear","dayOfYear","rangeBarOptions","rangeBar","seriesRangeStart","seriesRangeEnd","srty","positions","detectOverlappingBars","drawRangeBarPaths","drawRangeColumnPaths","overlaps","rangeName","labelX","rowIndex","overlappedIndex","findIndex","tx","getRangeValue","start","end","ylabel","yLbFormatter","yLbTitleFormatter","isFinite","startVal","endVal","datetimeObj","DateTime","Bar","Defaults","defaults","_getBoxTooltip","rangeCtx","RangeBar","getTooltipValues","buildCustomTooltipHTML","handleTimelineTooltip","handleRangeColumnTooltip","existingDataLabelFormatter","yaxe","toFixed","cats","defaultFormatter","o","seriesCandleO","seriesCandleH","seriesCandleM","l","seriesCandleL","seriesCandleC","Config","responsiveOverride","extendAnnotations","init","newDefaults","chartDefaults","stacked100","checkForDarkTheme","Apex","checkForCatToNumericXAxis","mergedWithDefaultConfig","handleUserInputErrors","unsupportedZoom","notNumericXAxis","convertCatToNumeric","constructor","isLogY","newYaxis","Error","Globals","timescaleLabels","noLabelsProvided","resizeTimer","selectionResizeTimer","xaxisLabelsCount","skipLastTimelinelabel","skipFirstTimelinelabel","isDataXYZ","isMultiLineX","yAxisScale","xAxisScale","xAxisTicksPositions","yLabelsCoords","yTitleCoords","xTickAmount","chartID","clicked","clientX","clientY","radarPolygons","msMaxTouchPoints","isDirty","isExecCalled","initialConfig","lastXAxis","lastYAxis","columnSeries","risingSeries","capturedSeriesIndex","capturedDataPointIndex","goldenPadding","ignoreYAxisIndexes","yAxisSameScaleIndices","radialSize","zoomEnabled","panEnabled","selectionEnabled","mousedown","lastClientPosition","visibleXRange","yValueDecimal","hasNullValues","rotateXLabels","defaultLabels","xLabelFormatter","xaxisTooltipFormatter","ttKeyFormatter","ttVal","ttZFormatter","LINE_HEIGHT_RATIO","xAxisLabelsHeight","xAxisLabelsWidth","yAxisLabelsWidth","scaleX","scaleY","translateX","translateY","translateYAxisX","yAxisWidths","translateXAxisY","translateXAxisX","globalVars","initGlobalVars","Base","Data","twoDSeries","threeDSeries","twoDSeriesX","isFormatXY","isFormat2DArray","sr","isBoxPlot","ts","dt","activeI","isXString","isXArr","isXDate","isValidDate","isRangeColumn","isRangeData","fallbackToCategory","handleRangeDataFormat","rangeUniques","sarr","sarri","arri","sri","range1y1","range1y2","range2y1","ohlc","handleCandleStickBoxDataFormat","rangeStart","rangeEnd","uniqueKeys","thing","err","uI","serO","serH","serM","serL","serC","xlabels","handleDates","error","handleRangeData","isMultiFormat","handleFormat2DArray","handleFormatXY","handleCandleStickBoxData","singleArray","srt","elem","convertCatToNumericXaxis","_generateExternalLabels","labelArr","gls","glsi","excludeCollapsedSeriesInYAxis","core","resetGlobals","isMultipleY","parseDataAxisCharts","parseDataNonAxisCharts","getLargestSeries","setNullSeriesToZeroValues","getSeriesTotals","getStackedSeriesTotals","getPercentSeries","handleExternalLabelsData","getCategoryLabels","collapsed","tooltipKeyFormat","defaultGeneralFormatter","legendFormatter","diff","xyCharts","defaultYFormatter","result","longest","niceMax","niceMin","AxesUtils","drawnLabels","rawLabel","xlbFormatter","customFormatter","isBold","xFormat","Formatters","xLabelFormat","determineHighestUnit","unit","highestUnit","allowDuplicatesInTimeScale","timeScale","labelsLen","ticks","drawnLabelsRects","prev","reverse","isSeriesNull","yColors","pushExtraColors","labelsDivider","elYaxis","tY","elTick","scale","getAttributeNS","svgData","nXmlnsSeen","svgString","svgNode","cloneNode","scaleSvgNode","XMLSerializer","serializeToString","fixSvgStringForIe11","xcrosshairs","ycrosshairs","zoomSelectionRects","cleanup","getSvgString","svgBlob","Blob","URL","createObjectURL","Promise","resolve","canvas","createElement","elWrap","canvasBg","getContext","fillStyle","fillRect","canvg","Canvg","fromString","ignoreClear","ignoreDimensions","blob","msToBlob","svgUrl","encodeURIComponent","Image","crossOrigin","onload","drawImage","imgURI","toDataURL","triggerDownload","dataURI","then","msSaveOrOpenBlob","lineDelimiter","columns","rows","dataFormat","axesUtils","getCat","cat","lbFormatter","activeSeries","getLabel","sI","sname","num","ci","pop","handleAxisRowsColumns","encodeURI","href","ext","downloadLink","body","XAxis","xaxisLabels","isCategoryBarHorizontal","xaxisFontSize","xaxisFontFamily","xaxisForeColors","xaxisBorderWidth","xaxisBorderHeight","colWidth","elXaxis","elXaxisTexts","xPos","offsetYCorrection","checkLabelBasedOnTickamount","checkForOverflowingLabels","xAxisHeight","elTooltipTitle","elXaxisTitle","elXAxisTitleText","elHorzLine","colHeight","elYaxisTexts","ylabels","getYAxisForeColor","multiY","elLabel","labelRotatingCenter","elVerticalLine","drawYAxisTicks","appendToElement","xCount","xCountForCategoryCharts","x1Count","xAxis","xAxisTexts","yAxisTextsInversed","xAxisTextsInversed","xat","textRotatingCenter","tSpan","placeTextWithEllipsis","firstLabelPosX","lastLabelPosX","link","elGrid","elgrid","renderGrid","drawGridArea","strokeSize","strokeMaxSize","elGridRectMask","elGridRectMarkerMask","elForecastMask","elNonForecastMask","barWidthLeft","barWidthRight","getLargestMarkerSize","markerSize","elGridRectMarker","defs","_drawGridLine","drawXaxisTicks","isHorzLine","xC","_drawGridLines","elgridLinesV","datetimeLines","categoryLines","tA","elgridLinesH","hide","yTickAmount","_drawXYLines","_drawInvertedXYLines","drawGridBands","xAxisTickWidth","_drawGridBandRect","xc","Range","yMin","yMax","NO_MIN_MAX_PROVIDED","_adjustTicksForSmallRange","linearScale","tiks","tempStep","magPow","magMsd","stepSize","lb","ub","ceil","valuesDivider","step","logs","newTicks","formattedVal","logarithmicScale","noMinMaxProvided","niceScale","concat","scalesIndices","similarIndex","alreadyExists","setYScaleForIndex","sameScaleInMultipleAxes","similarIndices","sj","sortedIndices","sort","indices","stringIndices","ind","JSON","stringify","sameScaleMinYArr","sameScaleMaxYArr","minYValue","yi","sameScaleMin","valueOf","sameScaleMax","sc","isStacked","firstXIndex","xi","initialMin","initialMax","stackedSer","serie","firstValue","yI","valMin","valMax","wS","wSI","scales","Scales","setYRange","setXRange","setZRange","startingIndex","lowestY","highestY","seriesMin","seriesMax","lowestYInAllSeries","minYMaxYArr","getMinYMaxY","minYMaxY","_setStackedMinMax","setMultipleYScales","getInitialMinXMaxX","catScale","setXScale","_handleSingleDataPoint","_getMinXDiff","newMinX","setUTCDate","newMaxX","sX","xDiff","stackedPoss","stackedNegs","poss","negs","YAxis","axisFontFamily","xAxisoffX","yaxisStyle","yaxisFontSize","yaxisFontFamily","yaxisFontWeight","isYAxisHidden","checkForReversedLabels","firstLabel","xPad","firstabelRotatingCenter","elYaxisTitle","elYAxisTitleText","tl","inversedYAxisTitleText","inversedYAxisBorder","lineCorrection","yAxisOpposite","yAxisLabelsCoord","yAxisTitleCoord","elYAxisLabelsWrap","yAxisTitle","xPaddingForYAxisTitle","titleRotatingCenter","oppositeAxisCount","padd","yaxisLabelCoords","xLeft","xRight","leftOffsetX","rightOffsetX","multipleYs","shouldNotDrawAxis","axisWidth","yAxisInner","yAxisTexts","lI","Events","documentEvent","handler","args","evs","clickableArea","chartClass","eventList","event","which","capture","setupBrushHandler","elMenu","touches","Localization","localeName","selectedLocale","Axes","drawGanttYAxis","drawGanttXAxis","drawYaxisInversed","drawXaxisInversed","drawXaxis","drawYaxis","crosshairGradient","crosshairShadow","shadowLeft","shadowTop","shadowColor","shadowOpacity","xcrosshairsFill","crosshairsWidth","crosshair","ycrosshairsHidden","Responsive","res","breakpoint","iterateResponsiveOptions","newOptions","largestBreakpoint","innerWidth","screen","overrideResponsiveOptions","newConfig","Theme","isColorFn","isHeatmapDistributed","isBarDistributed","setDefaultColors","predefined","monoArr","glsCnt","mainColor","part","gsl","newColor","defaultColors","colorSeries","TitleSubtitle","drawTitleSubtitle","tsConfig","dCtx","elLegendWrap","lgRect","valArr","maxArrs","xl","idx","maxArrLen","DimXAxis","getxAxisTimeScaleLabelsCoords","lgWidthForSideLegends","dimHelpers","getLargestStringFromMultiArr","xLabelrect","xArrLabelrect","yAxisWidth","gridPad","getRotatedTextRects","overlappingXLabels","xaxisLabelCoords","xtype","lbWidth","isBarOpposite","xPadLeft","xPadRight","isCollapsed","firstimescaleLabel","lastLabelPosition","yAxisWidthRight","firstLabelPosition","yAxisWidthLeft","lgRightRectWidth","rightPad","padYAxe","DimYAxis","labelPad","yS","yAxisMinWidth","minV","longestStr","barYaxisLabels","rotateStr","arrLabelrect","padForLabelTitle","isHiddenYAxis","yLabelCoord","yTitleCoord","DimGrid","hasBar","gridShrinkOffset","isSparkline","titleCoords","getTitleSubtitleCoords","subtitleCoords","Dimensions","dimYAxis","dimXAxis","dimGrid","Grid","getLegendsRect","setDimensionsForAxisCharts","setDimensionsForNonAxisCharts","gridPadFortitleSubtitle","gridPadForColumnsInNumericAxis","getyAxisLabelsCoords","getyAxisTitleCoords","getTotalYAxisWidth","getxAxisLabelsCoords","xtitleCoords","getxAxisTitleCoords","conditionalChecksForAxisCoords","xAxisWidth","additionalPaddingXLabels","legendTopBottom","setGridXPosForDualYAxis","setYAxisXPosition","minYAxisWidth","maxYAxisWidth","lgCtx","stylesheet","rules","createTextNode","currLegendsWrapRect","currLegendsWrapWidth","clwh","clww","elLegendForeign","elForeign","getLegendStyles","csi","riseCollapsedSeries","hideSeries","printDataLabelsInner","fire","shouldNotHideYAxis","baseVal","removeIndexOfRising","seriesChildren","_getSeriesBasedOnCollapsedState","seriesIndices","onLegendClick","onLegendHovered","isBarsDistributed","drawLegends","getElementsByTagName","appendToForeignObject","legendAlignHorizontal","legendAlignVertical","legendNames","fillcolor","isLegendInversed","elMarker","mOffsetX","mOffsetY","mHeight","mWidth","mBorderWidth","mBorderColor","mBorderRadius","mStyle","setProperty","elLegend","elLegendText","textColor","getSeriesTotalByIndex","seriesHaveSameValues","legendRect","dim","titleH","subtitleH","hw","lRect","getLegendBBox","dimensions","titleRect","subtitleRect","setLegendWrapXY","hoverOverLegend","highlightRangeInSeries","toggleSeriesOnHover","Toolbar","ev","selectedClass","localeValues","createDiv","elToolbarWrap","elZoom","elZoomIn","elZoomOut","elPan","elSelection","elZoomReset","elMenuIcon","elCustomIcons","toolbarControls","appendZoomControl","ico","tool","icon","icoZoomIn","icoZoomOut","zoomSelectionCtrls","icoZoom","icoSelect","icoPan","icoReset","icoMenu","menu","_createHamburgerMenu","addToolbarEventListeners","elMenuItems","menuItems","exportToSVG","exportToPNG","exportToCSV","handleZoomReset","toggleZoomSelection","handleZoomIn","handleZoomOut","togglePanning","toggleMenu","handleDownload","getSyncedCharts","ch","toggleOtherControls","enabledType","el2","getToolbarIconsReference","newMinXMaxX","_getNewMinXMaxX","disableZoomIn","zoomUpdateOptions","disableZoomOut","shouldFloor","beforeZoomRange","getBeforeZoomRange","autoScaleY","_updateOptions","zoomCallback","newRange","exprt","Exports","exportToPng","resetZoomRange","ZoomPanSelection","dragged","startX","endX","dragX","startY","endY","dragY","moveDirection","zoomRect","selectionRect","gridRect","slDraggableRect","draggable","on","selectionDragging","preselectedSelection","hoverArea","svgMouseEvents","off","zoomtype","shiftKey","shiftWasPressed","enableZoomPanFromToolbar","tc","changedTouches","gridRectDim","panDragging","selectionDrawing","selectionDrawn","delayedPanScrolled","hideSelectionRect","makeSelectionRectDraggable","rectDim","selectize","pointSize","pointType","resize","constraint","drawSelectionRect","scalingAttrs","inversedX","inversedY","selectionWidth","selectionHeight","selRect","timerInterval","getSelAttr","draggedProps","clearTimeout","xyAxis","tempX","tempY","xLowestValue","xHighestValue","yHighestValue","yLowestValue","deltaX","deltaY","panScrolled","updateScrolledChart","tooltipContext","ttCtx","hoverWidth","hoverHeight","xDivisor","yDivisor","seriesBound","hoverX","hoverY","jHorz","seriesYValArr","capturedSeries","closest","seriesXValArr","seriesXVal","seriesYVal","Utilities","closestInMultiArray","closestInArray","Xarrays","Yarrays","currIndex","getFirstActiveXArray","currY","currX","diffX","diffY","arrY","arrIndex","innerKey","newdiffY","newdiffX","newdiff","firstActiveSeriesIndex","xarr","curr","xSameForAllSeriesJArr","sameLen","allbars","markersWraps","getElMarkers","getElBars","hoverSize","state","allTooltipSeriesGroups","Labels","tooltipUtil","ttItems","handleCustomTooltip","toggleActiveInactiveSeries","values","getValuesToPrint","printLabels","tooltipEl","getElTooltip","tooltipRect","ttWidth","ttHeight","goalVals","hasGoalValues","gi","xVal","zVal","xAxisTTVal","pColor","inverset","getFormatters","getSeriesName","tIndex","getValBySeriesIndex","DOMHandling","ttItemsChildren","children","showTooltipTitle","tooltipTitle","blxaxisTooltip","xaxisTooltipText","ttYLabel","ttYVal","ttGLabel","ttGVal","createGoalsHtml","gLabels","gVals","toggleAllTooltipSeriesGroups","firstTooltipSeriesGroup","customFormatterOpts","zFormatter","bufferXVal","Position","getElXCrosshairs","xcrosshairsWidth","moveXAxisTooltip","xaxisTooltip","xaxisOffY","yaxisTTEls","ycrosshairsHiddenRectY1","yAxisTTHeight","pointR","getElGrid","allPoints","resetPointsSize","enlargeCurrentPoint","moveDynamicPointOnHover","pointsArr","getHoverMarkerSize","serType","moveXCrosshairs","fixedTooltip","moveTooltip","getAllMarkers","pointArr","pcy","tcy","barLen","jBar","bw","bh","Marker","tooltipPosition","elsSeries","pointsMain","elPointOptions","elPointsG","newPointSize","col","newSize","oldPointSize","lastChild","opt","tooltipLabels","drawSeriesTexts","showOnIntersect","bx","barXY","getBarTooltipXY","cl","barRect","isBottom","tooltipCssClass","renderTo","isRight","yaxisOffX","samescales","ssi","yaxisTooltip","yaxisTooltipText","yaxisTooltips","moveYCrosshairs","moveYAxisTooltip","Tooltip","tConfig","Intersect","axesTooltip","AxesTooltip","isBarShared","drawXaxisTooltip","drawYaxisTooltip","setXCrosshairWidth","handleYCrosshair","getXAxisTicksPositions","drawDynamicPoints","ttItemsCnt","legendLabels","createTTElements","addSVGEvents","gTxt","gYZ","gValText","txtLabel","txtValue","commonBar","chartWithmarkers","tooltipY","tooltipX","seriesHoverParams","addPathsEventListeners","addDatapointEventsListeners","seriesAll","lineAreaPoints","extendedOpts","seriesHover","chartGroups","getGroupedCharts","newOpts","seriesHoverByContext","chartCtx","drawFixedTooltipRect","axisChartsTooltips","nonAxisChartsTooltips","handleMouseOut","isStickyTooltip","hasYAxisTooltip","handleStickyTooltip","markerXY","handleHeatTreeTooltip","handleBarTooltip","hasMarkers","handleMarkerTooltip","yt","drawYaxisTooltipText","defaultText","decodeURIComponent","capj","getNearestValues","handleStickyCapturedSeries","isXoverlap","create","isInitialSeriesSameLen","allPaths","deactivateHoverFilter","bars","legendName","lsIndex","enlargePoints","moveDynamicPointsOnHover","barSeriesHeight","getBarsHeight","moveStickyTooltipOverBars","moveMarkers","prevYF","prevXF","prevYVal","prevXVal","xArrValues","yArrValues","commonPathOpts","drawStackedBarPaths","drawStackedColumnPaths","prevBarW","bXP","seriesVal","prevBarH","bYP","prevYValue","candlestickOptions","boxOptions","drawBoxPaths","pi","isPositive","colorPos","colorNeg","getOHLCValue","l1","l2","TreemapHelpers","negRange","chartOpts","colorShadePercent","colorProps","determineColor","rTotal","HeatMap","rectRadius","rev","checkColorRange","heatSeries","heatColor","getShadeColor","heatColorProps","addListeners","animateHeatMap","animateHeatColor","formattedText","calculateDataLabels","unshift","divisor","animateRect","CircularChartsHelpers","yaxisConfig","animBeginArr","animDur","donutDataLabels","lineColorArr","defaultSize","fullAngle","initialAngle","donutSize","sliceLabels","sliceSizes","prevSectorAngleArr","sectorAngleArr","drawPolarElements","previousAngle","prevTotal","scaleSize","halfW","halfH","elG","drawArcs","renderInnerDataLabels","hollowSize","prevStartAngle","prevEndAngle","elPieArc","getChangedPath","elPath","labelPosition","dur","animatePaths","animateStartingPos","shouldSetPrevPaths","pieClicked","elPieLabelWrap","elPieLabel","revertDataLabelsInner","prevAngle","fromStartAngle","toStartAngle","animateArc","currAngle","fromAngle","getPiePath","during","isTrack","allEls","pieSlice","origPath","startDeg","startRadians","endDeg","endRadians","startInner","endInner","largeArc","pathBeginning","gCircles","gYAxis","yScale","yTexts","circleSize","drawYAxisTexts","drawSpokes","showTotal","labelColor","valueColor","labelFontSize","labelFontFamily","labelFontWeight","valOffset","elValue","labelsConfig","isTotal","printInnerLabels","dataLabelsGroup","spokeConfig","angleDivision","sliceOut","slices","selectSlice","makeSliceOut","printLabel","isLog","maxValue","minValue","dataRadiusOfPercent","dataRadius","angleArr","yaxisLabelsTextsPos","allSeries","disAngle","dataPointsPos","elDataPointsMain","yaxisLabels","longestSeries","dv","getDataPointsPos","createPaths","defaultRenderedPathOptions","linePathsTo","renderedLinePath","linePathsFrom","renderedAreaPath","areaPathsFrom","areaPathsTo","drawPolygons","xaxisTexts","drawXAxisTexts","elS","yaxisTexts","layers","radiusSizes","layerDis","polygonStrings","radiusSize","drawPolygon","yText","xaxisLabelsConfig","elXAxisWrap","polygonPos","textPos","getTextPos","origin","linePathTo","areaPathTo","polygonSize","dataRadiusArr","dataPointsPosArray","curPointPos","totalAngle","trackStartAngle","trackEndAngle","radialDataLabels","colorArr","elTracks","drawTracks","angleRatio","elHollow","elRadialBarTrack","trackConfig","hollowFillID","hollowRadius","drawHollowImage","drawHollow","shown","reverseLoop","elRadialBarArc","dataValue","randID","hollowFillImg","loaded","loader","Pie","lineCtx","gSeries","ptX","ptY","xPT1st","categoryAxisCorrection","pathFromLine","pathFromArea","appendPathFrom","lineYPosition","prevSeriesY","zeroY","isPointsChart","pointsChart","noNegatives","lineHelpers","ptype","sameValueSeriesFix","_initSerieVariables","pY","pX","determineFirstPrevY","pathsFrom","_calculatePathsFrom","_iterateOverDataPoints","linePaths","areaPaths","_handlePaths","areaBottomY","linePath","areaPath","checkPreviousPaths","forecastCutoff","linePathCommonOpts","renderedForecastPath","iterations","isNull","pii","cpi","prevIndex","calculatePoints","calculatedPaths","_createPaths","handleNullDataPoints","_handleMarkersAndLabels","draw","plotChartMarkers","drawDataLabel","numericOrCatX","TreemapChart","TreemapSquared","generate","elDataLabelWrap","fromRect","toRect","animateTreemap","getFontSize","rotateToFitLabel","coordinates","arearoot","averagelabelsize","totalLabelLength","countLabels","timeScaleArray","daysDiff","determineInterval","timeIntervals","getTimeUnitsfromTimestamp","daysWidthOnXAxis","hoursWidthOnXAxis","minutesWidthOnXAxis","secondsWidthOnXAxis","numberOfHours","numberOfMinutes","numberOfSeconds","MINUTES_IN_DAY","numberOfDays","numberOfMonths","numberOfYears","firstVal","currentMillisecond","currentSecond","currentMinute","currentHour","currentMonthDate","currentDate","currentMonth","currentYear","tickInterval","generateYearScale","generateMonthScale","generateDayScale","generateHourScale","generateMinuteScale","generateSecondScale","adjustedMonthInTimeScaleArray","defaultReturn","modulo","shouldNotSkipUnit","shouldNotPrint","filteredTimeScale","inverted","reformattedTimescaleArray","formatDates","removedOverlappingTS","removeOverlappingTS","plotCoords","hoursDiff","minutesDiff","firstTickValue","firstTickPosition","remainingDays","determineRemainingDaysOfYear","determineDaysOfYear","yrCounter","_getYear","monthVal","changeMonth","dateVal","changeDate","remainingMins","raw","createRawDateString","dateToFormat","parseDateWithTimezone","customFormat","dtFormatter","dateString","constantLabelWidth","equalLabelLengthFlag","filteredArray","prevLabelWidth","prevPos","Core","ct","Doc","setSVGDimensions","elAnnotations","lineSeries","areaSeries","scatterSeries","bubbleSeries","candlestickSeries","boxplotSeries","st","Line","boxCandlestick","BoxCandleStick","Radial","gantt","Gantt","Radar","elGraph","barStacked","BarStacked","scatterLine","bubbleLine","Treemap","elDim","widthUnit","heightUnit","elParentDim","legendHeight","Legend","chartInnerDimensions","elRadialRect","newHeight","resetxyValues","globalObj","Crosshairs","drawXCrosshairs","drawYCrosshairs","TimeScale","formattedTimeScale","calculateTimeScaleTicks","recalcDimensionsBasedOnFormat","getCalculatedRatios","targetChart","targets","ApexCharts","getChartByID","brushSource","updateSourceChart","multipleYaxis","UpdateHelpers","redraw","updateSyncedCharts","overwriteInitialConfig","charts","getPreviousPaths","update","newSeries","existingSeries","overwriteInitialSeries","_extendSeries","getLastYAxis","InitCtxVariables","publicMethods","axes","localization","formatters","titleSubtitle","zoomPanSelection","Destroy","isUpdating","destroy","clearDomElements","each","removeClass","ungroup","clear","elSVG","removeEventListener","domEls","killSVG","initModules","windowResizeHandler","_windowResizeHandler","parentResizeHandler","_parentResizeCallback","chartId","_chartInstances","render","reject","setLocale","addResizeListener","graphData","mount","checkResponsiveConfig","setupElements","combo","allSeriesAreEmpty","handleNoData","setupEventHandlers","parseData","setGlobalMarkerSize","setLabelFormatters","hasAllSeriesEqualX","coreCalculations","heatmapLabelFormatters","xySettings","createGridMask","plotChartType","bringForward","dataLabelsBackground","shiftGraphPosition","elInner","drawAxis","drawGrid","drawImageAnnos","drawTextAnnos","xAxisLabelCorrections","setYAxisTextAlignments","yAxisTitleRotate","drawAxesAnnotations","drawTooltip","createToolbar","resizeNonAxisCharts","removeResizeListener","resetSeries","forceXAxisUpdate","forceYAxisUpdate","clearPreviousPaths","updateThemeOptions","newSerie","newData","allCharts","toggleSeries","showSeries","addXaxisAnnotationExternal","addYaxisAnnotationExternal","addPointAnnotationExternal","clearAnnotations","removeAnnotation","getSeriesTotalsXRange","toggleDataPointSelection","setCurrentLocaleValues","_windowResize","Container","xoffset","yoffset","shortestEdge","getCoordinates","subxoffset","subyoffset","areawidth","sumArray","areaheight","cutArea","newcontainer","newwidth","newheight","treemapSingledimensional","rawtreemap","flattreemap","flattenTreemap","squarify","normalizeddata","multiplier","normalize","currentrow","container","stack","nextdatapoint","nextnode","newrow","calculateRatio","improvesRatio","sum","sumMultidimensionalArray","treemapMultidimensional","mergedtreemap","mergeddata","results","useSourceMap","content","sourceMap","base64","cssMapping","btoa","sourceMapping","unescape","sourceURLs","sources","sourceRoot","cssWithMappingToString","modules","mediaQuery","DragHandler","remember","_this","transformPoint","matrixTransform","box","Nested","rbox","Use","buttons","defaultPrevented","preventDefault","stopPropagation","createSVGPoint","getScreenCTM","anchorOffset","Text","startPoints","drag","gx","gy","snapToGrid","matrix","Element","dragHandler","invent","inherit","Parent","backgroundAlpha","autoSetIn","put","in1","in2","BlendEffect","colorMatrix","ColorMatrixEffect","convolveMatrix","ConvolveMatrixEffect","components","ComponentTransferEffect","operator","CompositeEffect","FloodEffect","OffsetEffect","ImageEffect","MergeEffect","GaussianBlurEffect","morphology","MorphologyEffect","diffuseLighting","surfaceScale","diffuseConstant","kernelUnitLength","DiffuseLightingEffect","displacementMap","xChannelSelector","yChannelSelector","DisplacementMapEffect","specularLighting","specularExponent","SpecularLightingEffect","tile","TileEffect","turbulence","baseFrequency","numOctaves","seed","stitchTiles","TurbulenceEffect","Defs","block","doc","Effect","in","effect","get","ParentEffect","chainingEffects","ChildEffect","effects","normaliseMatrix","sqrt","kernelMatrix","dx","dy","listString","parentEffects","Set","that","MergeNode","compontents","toUpperCase","childEffects","distantLight","azimuth","elevation","pointLight","spotLight","pointsAtX","pointsAtY","pointsAtZ","mergeNode","foreach","sepiatone","supported","parser","prepare","ns","xmlns","svgjs","createSVGRect","did","eid","capitalize","methods","initializer","construct","adopt","instance","nodeName","SVGElement","Gradient","namespace","setData","documentElement","nested","poly","polyline","native","regex","numberAndUnit","reference","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","dots","il","radians","degrees","filterSVGElements","nodes","Color","exec","toHex","compToHex","toRgb","brightness","morph","destination","isColor","fallback","lastValue","lastDestination","settle","seen","array_clone","PointArray","toLine","pathHandlers","p0","L","V","C","S","Q","Z","A","mlhvqtcsa","jl","PathArray","arrayToString","equalCommands","pathArray","sourceArray","destinationArray","paramCnt","pathRegReplace","Point","toJSON","plus","number","minus","times","divide","_stroke","_event","_events","center","proportionalSize","writeDataToDom","assignNewId","after","removeElement","addTo","putIn","inside","visible","hasClass","addClass","toggleClass","matches","parents","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","well","removeAttribute","is","obj","MorphObj","Situation","reversing","duration","finish","ease","loop","loops","once","FX","_target","situations","situation","paused","lastPos","absPos","_speed","queue","timeToAbsPos","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","requestAnimationFrame","cancelAnimationFrame","startCurrent","initAnimations","shift","dequeue","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","atStart","isAbsPos","durDivSpd","pause","last","play","progress","easeIt","wrapper","detail","_callStart","eased","duringAll","ignoreTime","absPosInt","lastLoop","Boolean","eachAt","Matrix","multiply","undo","extract","isEased","real","leading","viewbox","ViewBox","Stop","Box","fullBox","xMin","xMax","BBox","Exception","topParent","Shape","clientLeft","clientTop","tbox","RBox","addOffset","pageXOffset","pageYOffset","screenCTM","arrayToMatrix","abcdef","px","deltaTransformPoint","py","skewX","atan2","transformedX","transformedY","skewY","rotation","parseMatrix","translate","around","flip","skew","tan","createSVGMatrix","float32String","ctm","getCTM","attributes","nodeValue","rebuild","ensureCentre","Rotate","Scale","Skew","Translate","untransform","kv","toParent","pCtm","toDoc","Transformation","inversed","_undo","cssText","camelCase","has","first","deep","hasChildNodes","_defs","depth","flatten","view","we","he","wm","hm","reg","offsetWidth","offsetHeight","listenerId","listener","binding","bag","_svgjsListenerId","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","getElementById","version","spof","siblings","next","previous","forward","backward","front","back","before","Mask","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","Pattern","Bare","words","Symbol","symbol","file","use","Rect","Circle","Ellipse","ellipse","Polyline","Polygon","_array","morphArray","Path","load","url","_loaded","ratio","_error","_rebuild","_build","oy","nodeType","newLined","build","textPath","blankLineOffset","Tspan","TextPath","linkTo","ref","sugar","prefix","comp","extension","dmove","getTotalLength","pointAt","getPointAtLength","font","elements","set","forget","_memory","idFromReference","query","CustomEventPoly","bubbles","createEvent","initCustomEvent","lastTime","vendors","callback","currTime","timeToCall","handleBlock","startArr","startOffsetM","startOffsetNextM","destArr","destOffsetM","destOffsetNextM","startArrTemp","destArrTemp","posStart","posDest","simplyfy","toBeziere","setPosAndReflection","dest","reflection","retVal","primedCoord","lambda","mat","cSquare","O","OA","OB","tetaStart","tetaEnd","deltaTeta","nbSectors","arcSegPoints","sinAngle","cosAngle","pt","xAxisRotation","acos","arcToBeziere","findNextM","ResizeHandler","parameters","lastUpdateCall","_extractPosition","txPt","pointCoords","calc","snap","checkAspectRatio","current","sAngle","pAngle","snapToAngle","done","flag","pointCoordsY","constraintToBox","orgX","orgY","isReverse","saveAspectRatio","updatedSnap","aspectRatio","newW","newH","newAspectRatio","SelectHandler","pointSelection","isSelected","rectSelection","pointsList","lt","rt","rb","pointCoord","setting","object","isPointCentered","settings","pointsLists","option","pointsExclude","deepSelect","selectPoints","selectRect","observe","drawPoints","getPointArray","curriedEvent","returnValue","pageX","pageY","classPoints","updatePointSelection","updateRectSelection","rotationPoint","getMoseDownFunc","eventName","classRect","pointElement","MutationObserver","observerInst","disconnect","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","scrollListener","__resizeRAF__","cancelFrame","requestFrame","__resizeLast__","checkTriggers","__resizeListeners__","raf","cancel","mozRequestAnimationFrame","webkitRequestAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","animation","animationstartevent","domPrefixes","startEvents","elm","animationName","___CSS_LOADER_API_IMPORT___","memo","getTarget","styleTarget","HTMLIFrameElement","contentDocument","head","stylesInDom","modulesToDom","moduleId","css","media","addStyle","insertStyleElement","nonce","insert","textStore","replaceText","replacement","applyToSingletonTag","styleSheet","cssNode","applyToTag","singleton","singletonCounter","styleIndex","removeStyleElement","newObj","all","atob","newList","api","__esModule","default","exported","locals","__webpack_module_cache__","__webpack_require__","__webpack_modules__","getter","definition","defineProperty","enumerable","toStringTag"],"mappings":"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","file":"apexcharts.amd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ApexCharts\"] = factory();\n\telse\n\t\troot[\"ApexCharts\"] = factory();\n})(self, function() {\nreturn ","/*\n ** Generic functions which are not dependent on ApexCharts\n */\n\nclass Utils {\n  static bind(fn, me) {\n    return function() {\n      return fn.apply(me, arguments)\n    }\n  }\n\n  static isObject(item) {\n    return (\n      item && typeof item === 'object' && !Array.isArray(item) && item != null\n    )\n  }\n\n  static listToArray(list) {\n    let i,\n      array = []\n    for (i = 0; i < list.length; i++) {\n      array[i] = list[i]\n    }\n    return array\n  }\n\n  // to extend defaults with user options\n  // credit: http://stackoverflow.com/questions/27936772/deep-object-merging-in-es6-es7#answer-34749873\n  static extend(target, source) {\n    if (typeof Object.assign !== 'function') {\n      ;(function() {\n        Object.assign = function(target) {\n          'use strict'\n          // We must check against these specific cases.\n          if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object')\n          }\n\n          let output = Object(target)\n          for (let index = 1; index < arguments.length; index++) {\n            let source = arguments[index]\n            if (source !== undefined && source !== null) {\n              for (let nextKey in source) {\n                if (source.hasOwnProperty(nextKey)) {\n                  output[nextKey] = source[nextKey]\n                }\n              }\n            }\n          }\n          return output\n        }\n      })()\n    }\n\n    let output = Object.assign({}, target)\n    if (this.isObject(target) && this.isObject(source)) {\n      Object.keys(source).forEach((key) => {\n        if (this.isObject(source[key])) {\n          if (!(key in target)) {\n            Object.assign(output, {\n              [key]: source[key]\n            })\n          } else {\n            output[key] = this.extend(target[key], source[key])\n          }\n        } else {\n          Object.assign(output, {\n            [key]: source[key]\n          })\n        }\n      })\n    }\n    return output\n  }\n\n  static extendArray(arrToExtend, resultArr) {\n    let extendedArr = []\n    arrToExtend.map((item) => {\n      extendedArr.push(Utils.extend(resultArr, item))\n    })\n    arrToExtend = extendedArr\n    return arrToExtend\n  }\n\n  // If month counter exceeds 12, it starts again from 1\n  static monthMod(month) {\n    return month % 12\n  }\n\n  static clone(source) {\n    if (Object.prototype.toString.call(source) === '[object Array]') {\n      let cloneResult = []\n      for (let i = 0; i < source.length; i++) {\n        cloneResult[i] = this.clone(source[i])\n      }\n      return cloneResult\n    } else if (Object.prototype.toString.call(source) === '[object Null]') {\n      // fixes an issue where null values were converted to {}\n      return null\n    } else if (Object.prototype.toString.call(source) === '[object Date]') {\n      return source\n    } else if (typeof source === 'object') {\n      let cloneResult = {}\n      for (let prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          cloneResult[prop] = this.clone(source[prop])\n        }\n      }\n      return cloneResult\n    } else {\n      return source\n    }\n  }\n\n  static log10(x) {\n    return Math.log(x) / Math.LN10\n  }\n\n  static roundToBase10(x) {\n    return Math.pow(10, Math.floor(Math.log10(x)))\n  }\n\n  static roundToBase(x, base) {\n    return Math.pow(base, Math.floor(Math.log(x) / Math.log(base)))\n  }\n\n  static parseNumber(val) {\n    if (val === null) return val\n    return parseFloat(val)\n  }\n\n  static randomId() {\n    return (Math.random() + 1).toString(36).substring(4)\n  }\n\n  static noExponents(val) {\n    let data = String(val).split(/[eE]/)\n    if (data.length === 1) return data[0]\n\n    let z = '',\n      sign = val < 0 ? '-' : '',\n      str = data[0].replace('.', ''),\n      mag = Number(data[1]) + 1\n\n    if (mag < 0) {\n      z = sign + '0.'\n      while (mag++) z += '0'\n      return z + str.replace(/^-/, '')\n    }\n    mag -= str.length\n    while (mag--) z += '0'\n    return str + z\n  }\n\n  static getDimensions(el) {\n    const computedStyle = getComputedStyle(el, null)\n\n    let elementHeight = el.clientHeight\n    let elementWidth = el.clientWidth\n    elementHeight -=\n      parseFloat(computedStyle.paddingTop) +\n      parseFloat(computedStyle.paddingBottom)\n    elementWidth -=\n      parseFloat(computedStyle.paddingLeft) +\n      parseFloat(computedStyle.paddingRight)\n\n    return [elementWidth, elementHeight]\n  }\n\n  static getBoundingClientRect(element) {\n    const rect = element.getBoundingClientRect()\n    return {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: element.clientWidth,\n      height: element.clientHeight,\n      x: rect.left,\n      y: rect.top\n    }\n  }\n\n  static getLargestStringFromArr(arr) {\n    return arr.reduce((a, b) => {\n      if (Array.isArray(b)) {\n        b = b.reduce((aa, bb) => (aa.length > bb.length ? aa : bb))\n      }\n      return a.length > b.length ? a : b\n    }, 0)\n  }\n\n  // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb#answer-12342275\n  static hexToRgba(hex = '#999999', opacity = 0.6) {\n    if (hex.substring(0, 1) !== '#') {\n      hex = '#999999'\n    }\n\n    let h = hex.replace('#', '')\n    h = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'))\n\n    for (let i = 0; i < h.length; i++) {\n      h[i] = parseInt(h[i].length === 1 ? h[i] + h[i] : h[i], 16)\n    }\n\n    if (typeof opacity !== 'undefined') h.push(opacity)\n\n    return 'rgba(' + h.join(',') + ')'\n  }\n\n  static getOpacityFromRGBA(rgba) {\n    return parseFloat(rgba.replace(/^.*,(.+)\\)/, '$1'))\n  }\n\n  static rgb2hex(rgb) {\n    rgb = rgb.match(\n      /^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i\n    )\n    return rgb && rgb.length === 4\n      ? '#' +\n          ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) +\n          ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) +\n          ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2)\n      : ''\n  }\n\n  shadeRGBColor(percent, color) {\n    let f = color.split(','),\n      t = percent < 0 ? 0 : 255,\n      p = percent < 0 ? percent * -1 : percent,\n      R = parseInt(f[0].slice(4), 10),\n      G = parseInt(f[1], 10),\n      B = parseInt(f[2], 10)\n    return (\n      'rgb(' +\n      (Math.round((t - R) * p) + R) +\n      ',' +\n      (Math.round((t - G) * p) + G) +\n      ',' +\n      (Math.round((t - B) * p) + B) +\n      ')'\n    )\n  }\n\n  shadeHexColor(percent, color) {\n    let f = parseInt(color.slice(1), 16),\n      t = percent < 0 ? 0 : 255,\n      p = percent < 0 ? percent * -1 : percent,\n      R = f >> 16,\n      G = (f >> 8) & 0x00ff,\n      B = f & 0x0000ff\n    return (\n      '#' +\n      (\n        0x1000000 +\n        (Math.round((t - R) * p) + R) * 0x10000 +\n        (Math.round((t - G) * p) + G) * 0x100 +\n        (Math.round((t - B) * p) + B)\n      )\n        .toString(16)\n        .slice(1)\n    )\n  }\n\n  // beautiful color shading blending code\n  // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n  shadeColor(p, color) {\n    if (Utils.isColorHex(color)) {\n      return this.shadeHexColor(p, color)\n    } else {\n      return this.shadeRGBColor(p, color)\n    }\n  }\n\n  static isColorHex(color) {\n    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(color)\n  }\n\n  static getPolygonPos(size, dataPointsLen) {\n    let dotsArray = []\n    let angle = (Math.PI * 2) / dataPointsLen\n    for (let i = 0; i < dataPointsLen; i++) {\n      let curPos = {}\n      curPos.x = size * Math.sin(i * angle)\n      curPos.y = -size * Math.cos(i * angle)\n      dotsArray.push(curPos)\n    }\n    return dotsArray\n  }\n\n  static polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    let angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0\n\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    }\n  }\n\n  static escapeString(str, escapeWith = 'x') {\n    let newStr = str.toString().slice()\n    newStr = newStr.replace(\n      /[` ~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]/gi,\n      escapeWith\n    )\n    return newStr\n  }\n\n  static negToZero(val) {\n    return val < 0 ? 0 : val\n  }\n\n  static moveIndexInArray(arr, old_index, new_index) {\n    if (new_index >= arr.length) {\n      let k = new_index - arr.length + 1\n      while (k--) {\n        arr.push(undefined)\n      }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0])\n    return arr\n  }\n\n  static extractNumber(s) {\n    return parseFloat(s.replace(/[^\\d.]*/g, ''))\n  }\n\n  static findAncestor(el, cls) {\n    while ((el = el.parentElement) && !el.classList.contains(cls));\n    return el\n  }\n\n  static setELstyles(el, styles) {\n    for (let key in styles) {\n      if (styles.hasOwnProperty(key)) {\n        el.style.key = styles[key]\n      }\n    }\n  }\n\n  static isNumber(value) {\n    return (\n      !isNaN(value) &&\n      parseFloat(Number(value)) === value &&\n      !isNaN(parseInt(value, 10))\n    )\n  }\n\n  static isFloat(n) {\n    return Number(n) === n && n % 1 !== 0\n  }\n\n  static isSafari() {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  }\n\n  static isFirefox() {\n    return navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n  }\n\n  static isIE11() {\n    if (\n      window.navigator.userAgent.indexOf('MSIE') !== -1 ||\n      window.navigator.appVersion.indexOf('Trident/') > -1\n    ) {\n      return true\n    }\n  }\n\n  static isIE() {\n    let ua = window.navigator.userAgent\n\n    let msie = ua.indexOf('MSIE ')\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10)\n    }\n\n    let trident = ua.indexOf('Trident/')\n    if (trident > 0) {\n      // IE 11 => return version number\n      let rv = ua.indexOf('rv:')\n      return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10)\n    }\n\n    let edge = ua.indexOf('Edge/')\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10)\n    }\n\n    // other browser\n    return false\n  }\n\n  /**\n   * Sanitize dangerous characters in the string to prevent Cross-Site Scripting\n   * @param {string}\n   * string - String to sanitize\n   */\n  static sanitizeDom(string) {\n    return String(string)\n      .replace(/\\&/g, '&amp;')\n      .replace(/\\</g, '&lt;')\n      .replace(/\\>/g, '&gt;')\n      .replace(/\\\"/g, '&quot;')\n  }\n}\n\nexport default Utils\n","import Utils from '../utils/Utils'\n\n/**\n * ApexCharts Animation Class.\n *\n * @module Animations\n **/\n\nexport default class Animations {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.setEasingFunctions()\n  }\n\n  setEasingFunctions() {\n    let easing\n\n    if (this.w.globals.easing) return\n\n    const userDefinedEasing = this.w.config.chart.animations.easing\n\n    switch (userDefinedEasing) {\n      case 'linear': {\n        easing = '-'\n        break\n      }\n      case 'easein': {\n        easing = '<'\n        break\n      }\n      case 'easeout': {\n        easing = '>'\n        break\n      }\n      case 'easeinout': {\n        easing = '<>'\n        break\n      }\n      case 'swing': {\n        easing = (pos) => {\n          let s = 1.70158\n          let ret = (pos -= 1) * pos * ((s + 1) * pos + s) + 1\n          return ret\n        }\n        break\n      }\n      case 'bounce': {\n        easing = (pos) => {\n          let ret = ''\n          if (pos < 1 / 2.75) {\n            ret = 7.5625 * pos * pos\n          } else if (pos < 2 / 2.75) {\n            ret = 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75\n          } else if (pos < 2.5 / 2.75) {\n            ret = 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375\n          } else {\n            ret = 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375\n          }\n          return ret\n        }\n        break\n      }\n      case 'elastic': {\n        easing = (pos) => {\n          if (pos === !!pos) return pos\n          return (\n            Math.pow(2, -10 * pos) *\n              Math.sin(((pos - 0.075) * (2 * Math.PI)) / 0.3) +\n            1\n          )\n        }\n        break\n      }\n\n      default: {\n        easing = '<>'\n      }\n    }\n\n    this.w.globals.easing = easing\n  }\n\n  animateLine(el, from, to, speed) {\n    el.attr(from)\n      .animate(speed)\n      .attr(to)\n  }\n\n  /*\n   ** Animate radius of a circle element\n   */\n  animateMarker(el, from, to, speed, easing, cb) {\n    if (!from) from = 0\n\n    el.attr({\n      r: from,\n      width: from,\n      height: from\n    })\n      .animate(speed, easing)\n      .attr({\n        r: to,\n        width: to.width,\n        height: to.height\n      })\n      .afterAll(() => {\n        cb()\n      })\n  }\n\n  /*\n   ** Animate radius and position of a circle element\n   */\n  animateCircle(el, from, to, speed, easing) {\n    el.attr({\n      r: from.r,\n      cx: from.cx,\n      cy: from.cy\n    })\n      .animate(speed, easing)\n      .attr({\n        r: to.r,\n        cx: to.cx,\n        cy: to.cy\n      })\n  }\n\n  /*\n   ** Animate rect properties\n   */\n  animateRect(el, from, to, speed, fn) {\n    el.attr(from)\n      .animate(speed)\n      .attr(to)\n      .afterAll(() => fn())\n  }\n\n  animatePathsGradually(params) {\n    let { el, realIndex, j, fill, pathFrom, pathTo, speed, delay } = params\n\n    let me = this\n    let w = this.w\n\n    let delayFactor = 0\n\n    if (w.config.chart.animations.animateGradually.enabled) {\n      delayFactor = w.config.chart.animations.animateGradually.delay\n    }\n\n    if (\n      w.config.chart.animations.dynamicAnimation.enabled &&\n      w.globals.dataChanged &&\n      w.config.chart.type !== 'bar'\n    ) {\n      // disabled due to this bug - https://github.com/apexcharts/vue-apexcharts/issues/75\n      delayFactor = 0\n    }\n    me.morphSVG(\n      el,\n      realIndex,\n      j,\n      w.config.chart.type === 'line' && !w.globals.comboCharts\n        ? 'stroke'\n        : fill,\n      pathFrom,\n      pathTo,\n      speed,\n      delay * delayFactor\n    )\n  }\n\n  showDelayedElements() {\n    this.w.globals.delayedElements.forEach((d) => {\n      const ele = d.el\n      ele.classList.remove('apexcharts-element-hidden')\n    })\n  }\n\n  animationCompleted(el) {\n    const w = this.w\n    if (w.globals.animationEnded) return\n\n    w.globals.animationEnded = true\n    this.showDelayedElements()\n\n    if (typeof w.config.chart.events.animationEnd === 'function') {\n      w.config.chart.events.animationEnd(this.ctx, { el, w })\n    }\n  }\n\n  // SVG.js animation for morphing one path to another\n  morphSVG(el, realIndex, j, fill, pathFrom, pathTo, speed, delay) {\n    let w = this.w\n\n    if (!pathFrom) {\n      pathFrom = el.attr('pathFrom')\n    }\n\n    if (!pathTo) {\n      pathTo = el.attr('pathTo')\n    }\n\n    const disableAnimationForCorrupPath = (path) => {\n      if (w.config.chart.type === 'radar') {\n        // radar chart drops the path to bottom and hence a corrup path looks ugly\n        // therefore, disable animation for such a case\n        speed = 1\n      }\n      return `M 0 ${w.globals.gridHeight}`\n    }\n\n    if (\n      !pathFrom ||\n      pathFrom.indexOf('undefined') > -1 ||\n      pathFrom.indexOf('NaN') > -1\n    ) {\n      pathFrom = disableAnimationForCorrupPath()\n    }\n\n    if (\n      !pathTo ||\n      pathTo.indexOf('undefined') > -1 ||\n      pathTo.indexOf('NaN') > -1\n    ) {\n      pathTo = disableAnimationForCorrupPath()\n    }\n    if (!w.globals.shouldAnimate) {\n      speed = 1\n    }\n\n    el.plot(pathFrom)\n      .animate(1, w.globals.easing, delay)\n      .plot(pathFrom)\n      .animate(speed, w.globals.easing, delay)\n      .plot(pathTo)\n      .afterAll(() => {\n        // a flag to indicate that the original mount function can return true now as animation finished here\n\n        if (Utils.isNumber(j)) {\n          if (\n            j === w.globals.series[w.globals.maxValsInArrayIndex].length - 2 &&\n            w.globals.shouldAnimate\n          ) {\n            this.animationCompleted(el)\n          }\n        } else if (fill !== 'none' && w.globals.shouldAnimate) {\n          if (\n            (!w.globals.comboCharts &&\n              realIndex === w.globals.series.length - 1) ||\n            w.globals.comboCharts\n          ) {\n            this.animationCompleted(el)\n          }\n        }\n\n        this.showDelayedElements()\n      })\n  }\n}\n","import Utils from './../utils/Utils'\n\n/**\n * ApexCharts Filters Class for setting hover/active states on the paths.\n *\n * @module Formatters\n **/\nclass Filters {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  // create a re-usable filter which can be appended other filter effects and applied to multiple elements\n  getDefaultFilter(el, i) {\n    const w = this.w\n    el.unfilter(true)\n\n    let filter = new window.SVG.Filter()\n    filter.size('120%', '180%', '-5%', '-40%')\n\n    if (w.config.states.normal.filter !== 'none') {\n      this.applyFilter(\n        el,\n        i,\n        w.config.states.normal.filter.type,\n        w.config.states.normal.filter.value\n      )\n    } else {\n      if (w.config.chart.dropShadow.enabled) {\n        this.dropShadow(el, w.config.chart.dropShadow, i)\n      }\n    }\n  }\n\n  addNormalFilter(el, i) {\n    const w = this.w\n\n    // revert shadow if it was there\n    // but, ignore marker as marker don't have dropshadow yet\n    if (\n      w.config.chart.dropShadow.enabled &&\n      !el.node.classList.contains('apexcharts-marker')\n    ) {\n      this.dropShadow(el, w.config.chart.dropShadow, i)\n    }\n  }\n\n  // appends dropShadow to the filter object which can be chained with other filter effects\n  addLightenFilter(el, i, attrs) {\n    const w = this.w\n    const { intensity } = attrs\n\n    el.unfilter(true)\n\n    let filter = new window.SVG.Filter()\n\n    el.filter((add) => {\n      const shadowAttr = w.config.chart.dropShadow\n      if (shadowAttr.enabled) {\n        filter = this.addShadow(add, i, shadowAttr)\n      } else {\n        filter = add\n      }\n      filter.componentTransfer({\n        rgb: { type: 'linear', slope: 1.5, intercept: intensity }\n      })\n    })\n    el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse')\n\n    this._scaleFilterSize(el.filterer.node)\n  }\n\n  // appends dropShadow to the filter object which can be chained with other filter effects\n  addDarkenFilter(el, i, attrs) {\n    const w = this.w\n    const { intensity } = attrs\n\n    el.unfilter(true)\n\n    let filter = new window.SVG.Filter()\n\n    el.filter((add) => {\n      const shadowAttr = w.config.chart.dropShadow\n      if (shadowAttr.enabled) {\n        filter = this.addShadow(add, i, shadowAttr)\n      } else {\n        filter = add\n      }\n      filter.componentTransfer({\n        rgb: { type: 'linear', slope: intensity }\n      })\n    })\n    el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse')\n    this._scaleFilterSize(el.filterer.node)\n  }\n\n  applyFilter(el, i, filter, intensity = 0.5) {\n    switch (filter) {\n      case 'none': {\n        this.addNormalFilter(el, i)\n        break\n      }\n      case 'lighten': {\n        this.addLightenFilter(el, i, {\n          intensity\n        })\n        break\n      }\n      case 'darken': {\n        this.addDarkenFilter(el, i, {\n          intensity\n        })\n        break\n      }\n      default:\n        // do nothing\n        break\n    }\n  }\n\n  // appends dropShadow to the filter object which can be chained with other filter effects\n  addShadow(add, i, attrs) {\n    const { blur, top, left, color, opacity } = attrs\n\n    let shadowBlur = add\n      .flood(Array.isArray(color) ? color[i] : color, opacity)\n      .composite(add.sourceAlpha, 'in')\n      .offset(left, top)\n      .gaussianBlur(blur)\n      .merge(add.source)\n    return add.blend(add.source, shadowBlur)\n  }\n\n  // directly adds dropShadow to the element and returns the same element.\n  // the only way it is different from the addShadow() function is that addShadow is chainable to other filters, while this function discards all filters and add dropShadow\n  dropShadow(el, attrs, i = 0) {\n    let { top, left, blur, color, opacity, noUserSpaceOnUse } = attrs\n    const w = this.w\n\n    el.unfilter(true)\n\n    if (Utils.isIE() && w.config.chart.type === 'radialBar') {\n      // in radialbar charts, dropshadow is clipping actual drawing in IE\n      return el\n    }\n\n    color = Array.isArray(color) ? color[i] : color\n\n    el.filter((add) => {\n      let shadowBlur = null\n      if (Utils.isSafari() || Utils.isFirefox() || Utils.isIE()) {\n        // safari/firefox/IE have some alternative way to use this filter\n        shadowBlur = add\n          .flood(color, opacity)\n          .composite(add.sourceAlpha, 'in')\n          .offset(left, top)\n          .gaussianBlur(blur)\n      } else {\n        shadowBlur = add\n          .flood(color, opacity)\n          .composite(add.sourceAlpha, 'in')\n          .offset(left, top)\n          .gaussianBlur(blur)\n          .merge(add.source)\n      }\n\n      add.blend(add.source, shadowBlur)\n    })\n\n    if (!noUserSpaceOnUse) {\n      el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse')\n    }\n\n    this._scaleFilterSize(el.filterer.node)\n\n    return el\n  }\n\n  setSelectionFilter(el, realIndex, dataPointIndex) {\n    const w = this.w\n    if (typeof w.globals.selectedDataPoints[realIndex] !== 'undefined') {\n      if (\n        w.globals.selectedDataPoints[realIndex].indexOf(dataPointIndex) > -1\n      ) {\n        el.node.setAttribute('selected', true)\n        let activeFilter = w.config.states.active.filter\n        if (activeFilter !== 'none') {\n          this.applyFilter(el, realIndex, activeFilter.type, activeFilter.value)\n        }\n      }\n    }\n  }\n\n  _scaleFilterSize(el) {\n    const setAttributes = (attrs) => {\n      for (let key in attrs) {\n        if (attrs.hasOwnProperty(key)) {\n          el.setAttribute(key, attrs[key])\n        }\n      }\n    }\n    setAttributes({\n      width: '200%',\n      height: '200%',\n      x: '-50%',\n      y: '-50%'\n    })\n  }\n}\n\nexport default Filters\n","import Animations from './Animations'\nimport Filters from './Filters'\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts Graphics Class for all drawing operations.\n *\n * @module Graphics\n **/\n\nclass Graphics {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  drawLine(\n    x1,\n    y1,\n    x2,\n    y2,\n    lineColor = '#a8a8a8',\n    dashArray = 0,\n    strokeWidth = null\n  ) {\n    let w = this.w\n    let line = w.globals.dom.Paper.line().attr({\n      x1,\n      y1,\n      x2,\n      y2,\n      stroke: lineColor,\n      'stroke-dasharray': dashArray,\n      'stroke-width': strokeWidth\n    })\n\n    return line\n  }\n\n  drawRect(\n    x1 = 0,\n    y1 = 0,\n    x2 = 0,\n    y2 = 0,\n    radius = 0,\n    color = '#fefefe',\n    opacity = 1,\n    strokeWidth = null,\n    strokeColor = null,\n    strokeDashArray = 0\n  ) {\n    let w = this.w\n    let rect = w.globals.dom.Paper.rect()\n\n    rect.attr({\n      x: x1,\n      y: y1,\n      width: x2 > 0 ? x2 : 0,\n      height: y2 > 0 ? y2 : 0,\n      rx: radius,\n      ry: radius,\n      opacity,\n      'stroke-width': strokeWidth !== null ? strokeWidth : 0,\n      stroke: strokeColor !== null ? strokeColor : 'none',\n      'stroke-dasharray': strokeDashArray\n    })\n\n    // fix apexcharts.js#1410\n    rect.node.setAttribute('fill', color)\n\n    return rect\n  }\n\n  drawPolygon(\n    polygonString,\n    stroke = '#e1e1e1',\n    strokeWidth = 1,\n    fill = 'none'\n  ) {\n    const w = this.w\n    const polygon = w.globals.dom.Paper.polygon(polygonString).attr({\n      fill,\n      stroke,\n      'stroke-width': strokeWidth\n    })\n\n    return polygon\n  }\n\n  drawCircle(radius, attrs = null) {\n    const w = this.w\n\n    if (radius < 0) radius = 0\n    const c = w.globals.dom.Paper.circle(radius * 2)\n    if (attrs !== null) {\n      c.attr(attrs)\n    }\n    return c\n  }\n\n  drawPath({\n    d = '',\n    stroke = '#a8a8a8',\n    strokeWidth = 1,\n    fill,\n    fillOpacity = 1,\n    strokeOpacity = 1,\n    classes,\n    strokeLinecap = null,\n    strokeDashArray = 0\n  }) {\n    let w = this.w\n\n    if (strokeLinecap === null) {\n      strokeLinecap = w.config.stroke.lineCap\n    }\n\n    if (d.indexOf('undefined') > -1 || d.indexOf('NaN') > -1) {\n      d = `M 0 ${w.globals.gridHeight}`\n    }\n    let p = w.globals.dom.Paper.path(d).attr({\n      fill,\n      'fill-opacity': fillOpacity,\n      stroke,\n      'stroke-opacity': strokeOpacity,\n      'stroke-linecap': strokeLinecap,\n      'stroke-width': strokeWidth,\n      'stroke-dasharray': strokeDashArray,\n      class: classes\n    })\n\n    return p\n  }\n\n  group(attrs = null) {\n    const w = this.w\n    const g = w.globals.dom.Paper.group()\n\n    if (attrs !== null) {\n      g.attr(attrs)\n    }\n    return g\n  }\n\n  move(x, y) {\n    let move = ['M', x, y].join(' ')\n    return move\n  }\n\n  line(x, y, hORv = null) {\n    let line = null\n    if (hORv === null) {\n      line = ['L', x, y].join(' ')\n    } else if (hORv === 'H') {\n      line = ['H', x].join(' ')\n    } else if (hORv === 'V') {\n      line = ['V', y].join(' ')\n    }\n    return line\n  }\n\n  curve(x1, y1, x2, y2, x, y) {\n    let curve = ['C', x1, y1, x2, y2, x, y].join(' ')\n    return curve\n  }\n\n  quadraticCurve(x1, y1, x, y) {\n    let curve = ['Q', x1, y1, x, y].join(' ')\n    return curve\n  }\n\n  arc(rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y, relative = false) {\n    let coord = 'A'\n    if (relative) coord = 'a'\n\n    let arc = [coord, rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y].join(\n      ' '\n    )\n    return arc\n  }\n\n  /**\n   * @memberof Graphics\n   * @param {object}\n   *  i = series's index\n   *  realIndex = realIndex is series's actual index when it was drawn time. After several redraws, the iterating \"i\" may change in loops, but realIndex doesn't\n   *  pathFrom = existing pathFrom to animateTo\n   *  pathTo = new Path to which d attr will be animated from pathFrom to pathTo\n   *  stroke = line Color\n   *  strokeWidth = width of path Line\n   *  fill = it can be gradient, single color, pattern or image\n   *  animationDelay = how much to delay when starting animation (in milliseconds)\n   *  dataChangeSpeed = for dynamic animations, when data changes\n   *  className = class attribute to add\n   * @return {object} svg.js path object\n   **/\n  renderPaths({\n    j,\n    realIndex,\n    pathFrom,\n    pathTo,\n    stroke,\n    strokeWidth,\n    strokeLinecap,\n    fill,\n    animationDelay,\n    initialSpeed,\n    dataChangeSpeed,\n    className,\n    shouldClipToGrid = true,\n    bindEventsOnPaths = true,\n    drawShadow = true\n  }) {\n    let w = this.w\n    const filters = new Filters(this.ctx)\n    const anim = new Animations(this.ctx)\n\n    let initialAnim = this.w.config.chart.animations.enabled\n    let dynamicAnim =\n      initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled\n\n    let d\n    let shouldAnimate = !!(\n      (initialAnim && !w.globals.resized) ||\n      (dynamicAnim && w.globals.dataChanged && w.globals.shouldAnimate)\n    )\n\n    if (shouldAnimate) {\n      d = pathFrom\n    } else {\n      d = pathTo\n      w.globals.animationEnded = true\n    }\n\n    let strokeDashArrayOpt = w.config.stroke.dashArray\n    let strokeDashArray = 0\n    if (Array.isArray(strokeDashArrayOpt)) {\n      strokeDashArray = strokeDashArrayOpt[realIndex]\n    } else {\n      strokeDashArray = w.config.stroke.dashArray\n    }\n\n    let el = this.drawPath({\n      d,\n      stroke,\n      strokeWidth,\n      fill,\n      fillOpacity: 1,\n      classes: className,\n      strokeLinecap,\n      strokeDashArray\n    })\n\n    el.attr('index', realIndex)\n\n    if (shouldClipToGrid) {\n      el.attr({\n        'clip-path': `url(#gridRectMask${w.globals.cuid})`\n      })\n    }\n\n    // const defaultFilter = el.filterer\n\n    if (w.config.states.normal.filter.type !== 'none') {\n      filters.getDefaultFilter(el, realIndex)\n    } else {\n      if (w.config.chart.dropShadow.enabled && drawShadow) {\n        if (\n          !w.config.chart.dropShadow.enabledOnSeries ||\n          (w.config.chart.dropShadow.enabledOnSeries &&\n            w.config.chart.dropShadow.enabledOnSeries.indexOf(realIndex) !== -1)\n        ) {\n          const shadow = w.config.chart.dropShadow\n          filters.dropShadow(el, shadow, realIndex)\n        }\n      }\n    }\n\n    if (bindEventsOnPaths) {\n      el.node.addEventListener('mouseenter', this.pathMouseEnter.bind(this, el))\n      el.node.addEventListener('mouseleave', this.pathMouseLeave.bind(this, el))\n      el.node.addEventListener('mousedown', this.pathMouseDown.bind(this, el))\n    }\n\n    el.attr({\n      pathTo,\n      pathFrom\n    })\n\n    const defaultAnimateOpts = {\n      el,\n      j,\n      realIndex,\n      pathFrom,\n      pathTo,\n      fill,\n      strokeWidth,\n      delay: animationDelay\n    }\n\n    if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n      anim.animatePathsGradually({\n        ...defaultAnimateOpts,\n        speed: initialSpeed\n      })\n    } else {\n      if (w.globals.resized || !w.globals.dataChanged) {\n        anim.showDelayedElements()\n      }\n    }\n\n    if (w.globals.dataChanged && dynamicAnim && shouldAnimate) {\n      anim.animatePathsGradually({\n        ...defaultAnimateOpts,\n        speed: dataChangeSpeed\n      })\n    }\n\n    return el\n  }\n\n  drawPattern(\n    style,\n    width,\n    height,\n    stroke = '#a8a8a8',\n    strokeWidth = 0,\n    opacity = 1\n  ) {\n    let w = this.w\n\n    let p = w.globals.dom.Paper.pattern(width, height, (add) => {\n      if (style === 'horizontalLines') {\n        add\n          .line(0, 0, height, 0)\n          .stroke({ color: stroke, width: strokeWidth + 1 })\n      } else if (style === 'verticalLines') {\n        add\n          .line(0, 0, 0, width)\n          .stroke({ color: stroke, width: strokeWidth + 1 })\n      } else if (style === 'slantedLines') {\n        add\n          .line(0, 0, width, height)\n          .stroke({ color: stroke, width: strokeWidth })\n      } else if (style === 'squares') {\n        add\n          .rect(width, height)\n          .fill('none')\n          .stroke({ color: stroke, width: strokeWidth })\n      } else if (style === 'circles') {\n        add\n          .circle(width)\n          .fill('none')\n          .stroke({ color: stroke, width: strokeWidth })\n      }\n    })\n\n    return p\n  }\n\n  drawGradient(\n    style,\n    gfrom,\n    gto,\n    opacityFrom,\n    opacityTo,\n    size = null,\n    stops = null,\n    colorStops = null,\n    i = 0\n  ) {\n    let w = this.w\n    let g\n\n    if (gfrom.length < 9 && gfrom.indexOf('#') === 0) {\n      // if the hex contains alpha and is of 9 digit, skip the opacity\n      gfrom = Utils.hexToRgba(gfrom, opacityFrom)\n    }\n    if (gto.length < 9 && gto.indexOf('#') === 0) {\n      gto = Utils.hexToRgba(gto, opacityTo)\n    }\n\n    let stop1 = 0\n    let stop2 = 1\n    let stop3 = 1\n    let stop4 = null\n\n    if (stops !== null) {\n      stop1 = typeof stops[0] !== 'undefined' ? stops[0] / 100 : 0\n      stop2 = typeof stops[1] !== 'undefined' ? stops[1] / 100 : 1\n      stop3 = typeof stops[2] !== 'undefined' ? stops[2] / 100 : 1\n      stop4 = typeof stops[3] !== 'undefined' ? stops[3] / 100 : null\n    }\n\n    let radial = !!(\n      w.config.chart.type === 'donut' ||\n      w.config.chart.type === 'pie' ||\n      w.config.chart.type === 'polarArea' ||\n      w.config.chart.type === 'bubble'\n    )\n\n    if (colorStops === null || colorStops.length === 0) {\n      g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', (stop) => {\n        stop.at(stop1, gfrom, opacityFrom)\n        stop.at(stop2, gto, opacityTo)\n        stop.at(stop3, gto, opacityTo)\n        if (stop4 !== null) {\n          stop.at(stop4, gfrom, opacityFrom)\n        }\n      })\n    } else {\n      g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', (stop) => {\n        let gradientStops = Array.isArray(colorStops[i])\n          ? colorStops[i]\n          : colorStops\n        gradientStops.forEach((s) => {\n          stop.at(s.offset / 100, s.color, s.opacity)\n        })\n      })\n    }\n\n    if (!radial) {\n      if (style === 'vertical') {\n        g.from(0, 0).to(0, 1)\n      } else if (style === 'diagonal') {\n        g.from(0, 0).to(1, 1)\n      } else if (style === 'horizontal') {\n        g.from(0, 1).to(1, 1)\n      } else if (style === 'diagonal2') {\n        g.from(1, 0).to(0, 1)\n      }\n    } else {\n      let offx = w.globals.gridWidth / 2\n      let offy = w.globals.gridHeight / 2\n\n      if (w.config.chart.type !== 'bubble') {\n        g.attr({\n          gradientUnits: 'userSpaceOnUse',\n          cx: offx,\n          cy: offy,\n          r: size\n        })\n      } else {\n        g.attr({\n          cx: 0.5,\n          cy: 0.5,\n          r: 0.8,\n          fx: 0.2,\n          fy: 0.2\n        })\n      }\n    }\n\n    return g\n  }\n\n  drawText({\n    x,\n    y,\n    text,\n    textAnchor,\n    fontSize,\n    fontFamily,\n    fontWeight,\n    foreColor,\n    opacity,\n    cssClass = '',\n    isPlainText = true\n  }) {\n    let w = this.w\n\n    if (typeof text === 'undefined') text = ''\n\n    if (!textAnchor) {\n      textAnchor = 'start'\n    }\n\n    if (!foreColor || !foreColor.length) {\n      foreColor = w.config.chart.foreColor\n    }\n    fontFamily = fontFamily || w.config.chart.fontFamily\n    fontWeight = fontWeight || 'regular'\n\n    let elText\n    if (Array.isArray(text)) {\n      elText = w.globals.dom.Paper.text((add) => {\n        for (let i = 0; i < text.length; i++) {\n          i === 0 ? add.tspan(text[i]) : add.tspan(text[i]).newLine()\n        }\n      })\n    } else {\n      elText = isPlainText\n        ? w.globals.dom.Paper.plain(text)\n        : w.globals.dom.Paper.text((add) => add.tspan(text))\n    }\n\n    elText.attr({\n      x,\n      y,\n      'text-anchor': textAnchor,\n      'dominant-baseline': 'auto',\n      'font-size': fontSize,\n      'font-family': fontFamily,\n      'font-weight': fontWeight,\n      fill: foreColor,\n      class: 'apexcharts-text ' + cssClass\n    })\n\n    elText.node.style.fontFamily = fontFamily\n    elText.node.style.opacity = opacity\n\n    return elText\n  }\n\n  drawMarker(x, y, opts) {\n    x = x || 0\n    let size = opts.pSize || 0\n\n    let elPoint = null\n\n    if (opts.shape === 'square' || opts.shape === 'rect') {\n      let radius = opts.pRadius === undefined ? size / 2 : opts.pRadius\n\n      if (y === null || !size) {\n        size = 0\n        radius = 0\n      }\n\n      let nSize = size * 1.2 + radius\n\n      let p = this.drawRect(nSize, nSize, nSize, nSize, radius)\n\n      p.attr({\n        x: x - nSize / 2,\n        y: y - nSize / 2,\n        cx: x,\n        cy: y,\n        class: opts.class ? opts.class : '',\n        fill: opts.pointFillColor,\n        'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n        stroke: opts.pointStrokeColor,\n        'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n        'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n      })\n\n      elPoint = p\n    } else if (opts.shape === 'circle' || !opts.shape) {\n      if (!Utils.isNumber(y)) {\n        size = 0\n        y = 0\n      }\n\n      // let nSize = size - opts.pRadius / 2 < 0 ? 0 : size - opts.pRadius / 2\n\n      elPoint = this.drawCircle(size, {\n        cx: x,\n        cy: y,\n        class: opts.class ? opts.class : '',\n        stroke: opts.pointStrokeColor,\n        fill: opts.pointFillColor,\n        'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n        'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n        'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n      })\n    }\n\n    return elPoint\n  }\n\n  pathMouseEnter(path, e) {\n    let w = this.w\n    const filters = new Filters(this.ctx)\n\n    const i = parseInt(path.node.getAttribute('index'), 10)\n    const j = parseInt(path.node.getAttribute('j'), 10)\n\n    if (typeof w.config.chart.events.dataPointMouseEnter === 'function') {\n      w.config.chart.events.dataPointMouseEnter(e, this.ctx, {\n        seriesIndex: i,\n        dataPointIndex: j,\n        w\n      })\n    }\n    this.ctx.events.fireEvent('dataPointMouseEnter', [\n      e,\n      this.ctx,\n      { seriesIndex: i, dataPointIndex: j, w }\n    ])\n\n    if (w.config.states.active.filter.type !== 'none') {\n      if (path.node.getAttribute('selected') === 'true') {\n        return\n      }\n    }\n\n    if (w.config.states.hover.filter.type !== 'none') {\n      if (\n        w.config.states.active.filter.type !== 'none' &&\n        !w.globals.isTouchDevice\n      ) {\n        let hoverFilter = w.config.states.hover.filter\n        filters.applyFilter(path, i, hoverFilter.type, hoverFilter.value)\n      }\n    }\n  }\n\n  pathMouseLeave(path, e) {\n    let w = this.w\n    const filters = new Filters(this.ctx)\n\n    const i = parseInt(path.node.getAttribute('index'), 10)\n    const j = parseInt(path.node.getAttribute('j'), 10)\n\n    if (typeof w.config.chart.events.dataPointMouseLeave === 'function') {\n      w.config.chart.events.dataPointMouseLeave(e, this.ctx, {\n        seriesIndex: i,\n        dataPointIndex: j,\n        w\n      })\n    }\n    this.ctx.events.fireEvent('dataPointMouseLeave', [\n      e,\n      this.ctx,\n      { seriesIndex: i, dataPointIndex: j, w }\n    ])\n\n    if (w.config.states.active.filter.type !== 'none') {\n      if (path.node.getAttribute('selected') === 'true') {\n        return\n      }\n    }\n\n    if (w.config.states.hover.filter.type !== 'none') {\n      filters.getDefaultFilter(path, i)\n    }\n  }\n\n  pathMouseDown(path, e) {\n    let w = this.w\n    const filters = new Filters(this.ctx)\n\n    const i = parseInt(path.node.getAttribute('index'), 10)\n    const j = parseInt(path.node.getAttribute('j'), 10)\n\n    let selected = 'false'\n    if (path.node.getAttribute('selected') === 'true') {\n      path.node.setAttribute('selected', 'false')\n\n      if (w.globals.selectedDataPoints[i].indexOf(j) > -1) {\n        let index = w.globals.selectedDataPoints[i].indexOf(j)\n        w.globals.selectedDataPoints[i].splice(index, 1)\n      }\n    } else {\n      if (\n        !w.config.states.active.allowMultipleDataPointsSelection &&\n        w.globals.selectedDataPoints.length > 0\n      ) {\n        w.globals.selectedDataPoints = []\n        const elPaths = w.globals.dom.Paper.select('.apexcharts-series path')\n          .members\n        const elCircles = w.globals.dom.Paper.select(\n          '.apexcharts-series circle, .apexcharts-series rect'\n        ).members\n\n        const deSelect = (els) => {\n          Array.prototype.forEach.call(els, (el) => {\n            el.node.setAttribute('selected', 'false')\n            filters.getDefaultFilter(el, i)\n          })\n        }\n        deSelect(elPaths)\n        deSelect(elCircles)\n      }\n\n      path.node.setAttribute('selected', 'true')\n      selected = 'true'\n\n      if (typeof w.globals.selectedDataPoints[i] === 'undefined') {\n        w.globals.selectedDataPoints[i] = []\n      }\n      w.globals.selectedDataPoints[i].push(j)\n    }\n\n    if (selected === 'true') {\n      let activeFilter = w.config.states.active.filter\n      if (activeFilter !== 'none') {\n        filters.applyFilter(path, i, activeFilter.type, activeFilter.value)\n      }\n    } else {\n      if (w.config.states.active.filter.type !== 'none') {\n        filters.getDefaultFilter(path, i)\n      }\n    }\n\n    if (typeof w.config.chart.events.dataPointSelection === 'function') {\n      w.config.chart.events.dataPointSelection(e, this.ctx, {\n        selectedDataPoints: w.globals.selectedDataPoints,\n        seriesIndex: i,\n        dataPointIndex: j,\n        w\n      })\n    }\n\n    if (e) {\n      this.ctx.events.fireEvent('dataPointSelection', [\n        e,\n        this.ctx,\n        {\n          selectedDataPoints: w.globals.selectedDataPoints,\n          seriesIndex: i,\n          dataPointIndex: j,\n          w\n        }\n      ])\n    }\n  }\n\n  rotateAroundCenter(el) {\n    let coord = el.getBBox()\n    let x = coord.x + coord.width / 2\n    let y = coord.y + coord.height / 2\n\n    return {\n      x,\n      y\n    }\n  }\n\n  static setAttrs(el, attrs) {\n    for (let key in attrs) {\n      if (attrs.hasOwnProperty(key)) {\n        el.setAttribute(key, attrs[key])\n      }\n    }\n  }\n\n  getTextRects(text, fontSize, fontFamily, transform, useBBox = true) {\n    let w = this.w\n    let virtualText = this.drawText({\n      x: -200,\n      y: -200,\n      text,\n      textAnchor: 'start',\n      fontSize,\n      fontFamily,\n      foreColor: '#fff',\n      opacity: 0\n    })\n\n    if (transform) {\n      virtualText.attr('transform', transform)\n    }\n    w.globals.dom.Paper.add(virtualText)\n\n    let rect = virtualText.bbox()\n    if (!useBBox) {\n      rect = virtualText.node.getBoundingClientRect()\n    }\n\n    virtualText.remove()\n\n    return {\n      width: rect.width,\n      height: rect.height\n    }\n  }\n\n  /**\n   * append ... to long text\n   * http://stackoverflow.com/questions/9241315/trimming-text-to-a-given-pixel-width-in-svg\n   * @memberof Graphics\n   **/\n  placeTextWithEllipsis(textObj, textString, width) {\n    if (typeof textObj.getComputedTextLength !== 'function') return\n    textObj.textContent = textString\n    if (textString.length > 0) {\n      // ellipsis is needed\n      if (textObj.getComputedTextLength() >= width / 1.1) {\n        for (let x = textString.length - 3; x > 0; x -= 3) {\n          if (textObj.getSubStringLength(0, x) <= width / 1.1) {\n            textObj.textContent = textString.substring(0, x) + '...'\n            return\n          }\n        }\n        textObj.textContent = '.' // can't place at all\n      }\n    }\n  }\n}\n\nexport default Graphics\n","export default class Helpers {\n  constructor(annoCtx) {\n    this.w = annoCtx.w\n    this.annoCtx = annoCtx\n  }\n\n  setOrientations(anno, annoIndex = null) {\n    let w = this.w\n\n    if (anno.label.orientation === 'vertical') {\n      const i = annoIndex !== null ? annoIndex : 0\n      let xAnno = w.globals.dom.baseEl.querySelector(\n        `.apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='${i}']`\n      )\n\n      if (xAnno !== null) {\n        const xAnnoCoord = xAnno.getBoundingClientRect()\n        xAnno.setAttribute(\n          'x',\n          parseFloat(xAnno.getAttribute('x')) - xAnnoCoord.height + 4\n        )\n\n        if (anno.label.position === 'top') {\n          xAnno.setAttribute(\n            'y',\n            parseFloat(xAnno.getAttribute('y')) + xAnnoCoord.width\n          )\n        } else {\n          xAnno.setAttribute(\n            'y',\n            parseFloat(xAnno.getAttribute('y')) - xAnnoCoord.width\n          )\n        }\n\n        let annoRotatingCenter = this.annoCtx.graphics.rotateAroundCenter(xAnno)\n        const x = annoRotatingCenter.x\n        const y = annoRotatingCenter.y\n\n        xAnno.setAttribute('transform', `rotate(-90 ${x} ${y})`)\n      }\n    }\n  }\n\n  addBackgroundToAnno(annoEl, anno) {\n    const w = this.w\n\n    if (\n      !annoEl ||\n      !anno.label.text ||\n      (anno.label.text && !anno.label.text.trim())\n    )\n      return null\n\n    const elGridRect = w.globals.dom.baseEl\n      .querySelector('.apexcharts-grid')\n      .getBoundingClientRect()\n\n    const coords = annoEl.getBoundingClientRect()\n\n    let pleft = anno.label.style.padding.left\n    let pright = anno.label.style.padding.right\n    let ptop = anno.label.style.padding.top\n    let pbottom = anno.label.style.padding.bottom\n\n    if (anno.label.orientation === 'vertical') {\n      ptop = anno.label.style.padding.left\n      pbottom = anno.label.style.padding.right\n      pleft = anno.label.style.padding.top\n      pright = anno.label.style.padding.bottom\n    }\n\n    const x1 = coords.left - elGridRect.left - pleft\n    const y1 = coords.top - elGridRect.top - ptop\n    const elRect = this.annoCtx.graphics.drawRect(\n      x1 - w.globals.barPadForNumericAxis,\n      y1,\n      coords.width + pleft + pright,\n      coords.height + ptop + pbottom,\n      anno.label.borderRadius,\n      anno.label.style.background,\n      1,\n      anno.label.borderWidth,\n      anno.label.borderColor,\n      0\n    )\n\n    if (anno.id) {\n      elRect.node.classList.add(anno.id)\n    }\n\n    return elRect\n  }\n\n  annotationsBackground() {\n    const w = this.w\n\n    const add = (anno, i, type) => {\n      let annoLabel = w.globals.dom.baseEl.querySelector(\n        `.apexcharts-${type}-annotations .apexcharts-${type}-annotation-label[rel='${i}']`\n      )\n\n      if (annoLabel) {\n        const parent = annoLabel.parentNode\n        const elRect = this.addBackgroundToAnno(annoLabel, anno)\n\n        if (elRect) {\n          parent.insertBefore(elRect.node, annoLabel)\n        }\n      }\n    }\n\n    w.config.annotations.xaxis.map((anno, i) => {\n      add(anno, i, 'xaxis')\n    })\n\n    w.config.annotations.yaxis.map((anno, i) => {\n      add(anno, i, 'yaxis')\n    })\n\n    w.config.annotations.points.map((anno, i) => {\n      add(anno, i, 'point')\n    })\n  }\n\n  getStringX(x) {\n    const w = this.w\n    let rX = x\n\n    if (\n      w.config.xaxis.convertedCatToNumeric &&\n      w.globals.categoryLabels.length\n    ) {\n      x = w.globals.categoryLabels.indexOf(x) + 1\n    }\n\n    let catIndex = w.globals.labels.indexOf(x)\n\n    const xLabel = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-xaxis-texts-g text:nth-child(' + (catIndex + 1) + ')'\n    )\n\n    if (xLabel) {\n      rX = parseFloat(xLabel.getAttribute('x'))\n    }\n\n    return rX\n  }\n}\n","import Utils from '../../utils/Utils'\n\nexport default class XAnnotations {\n  constructor(annoCtx) {\n    this.w = annoCtx.w\n    this.annoCtx = annoCtx\n\n    this.invertAxis = this.annoCtx.invertAxis\n  }\n\n  addXaxisAnnotation(anno, parent, index) {\n    let w = this.w\n\n    let min = this.invertAxis ? w.globals.minY : w.globals.minX\n    let max = this.invertAxis ? w.globals.maxY : w.globals.maxX\n    const range = this.invertAxis ? w.globals.yRange[0] : w.globals.xRange\n\n    let x1 = (anno.x - min) / (range / w.globals.gridWidth)\n\n    if (this.annoCtx.inversedReversedAxis) {\n      x1 = (max - anno.x) / (range / w.globals.gridWidth)\n    }\n\n    const text = anno.label.text\n\n    if (\n      (w.config.xaxis.type === 'category' ||\n        w.config.xaxis.convertedCatToNumeric) &&\n      !this.invertAxis &&\n      !w.globals.dataFormatXNumeric\n    ) {\n      x1 = this.annoCtx.helpers.getStringX(anno.x)\n    }\n\n    let strokeDashArray = anno.strokeDashArray\n\n    if (!Utils.isNumber(x1)) return\n\n    if (anno.x2 === null || typeof anno.x2 === 'undefined') {\n      let line = this.annoCtx.graphics.drawLine(\n        x1 + anno.offsetX, // x1\n        0 + anno.offsetY, // y1\n        x1 + anno.offsetX, // x2\n        w.globals.gridHeight + anno.offsetY, // y2\n        anno.borderColor, // lineColor\n        strokeDashArray, //dashArray\n        anno.borderWidth\n      )\n      parent.appendChild(line.node)\n      if (anno.id) {\n        line.node.classList.add(anno.id)\n      }\n    } else {\n      let x2 = (anno.x2 - min) / (range / w.globals.gridWidth)\n\n      if (this.annoCtx.inversedReversedAxis) {\n        x2 = (max - anno.x2) / (range / w.globals.gridWidth)\n      }\n      if (\n        (w.config.xaxis.type === 'category' ||\n          w.config.xaxis.convertedCatToNumeric) &&\n        !this.invertAxis &&\n        !w.globals.dataFormatXNumeric\n      ) {\n        x2 = this.annoCtx.helpers.getStringX(anno.x2)\n      }\n\n      if (x2 < x1) {\n        let temp = x1\n        x1 = x2\n        x2 = temp\n      }\n\n      let rect = this.annoCtx.graphics.drawRect(\n        x1 + anno.offsetX, // x1\n        0 + anno.offsetY, // y1\n        x2 - x1, // x2\n        w.globals.gridHeight + anno.offsetY, // y2\n        0, // radius\n        anno.fillColor, // color\n        anno.opacity, // opacity,\n        1, // strokeWidth\n        anno.borderColor, // strokeColor\n        strokeDashArray // stokeDashArray\n      )\n      rect.node.classList.add('apexcharts-annotation-rect')\n      rect.attr('clip-path', `url(#gridRectMask${w.globals.cuid})`)\n      parent.appendChild(rect.node)\n      if (anno.id) {\n        rect.node.classList.add(anno.id)\n      }\n    }\n    let textY = anno.label.position === 'top' ? 4 : w.globals.gridHeight\n\n    let textRects = this.annoCtx.graphics.getTextRects(\n      text,\n      parseFloat(anno.label.style.fontSize)\n    )\n\n    let elText = this.annoCtx.graphics.drawText({\n      x: x1 + anno.label.offsetX,\n      y:\n        textY +\n        anno.label.offsetY -\n        (anno.label.orientation === 'vertical'\n          ? anno.label.position === 'top'\n            ? textRects.width / 2 - 12\n            : -textRects.width / 2\n          : 0),\n      text,\n      textAnchor: anno.label.textAnchor,\n      fontSize: anno.label.style.fontSize,\n      fontFamily: anno.label.style.fontFamily,\n      fontWeight: anno.label.style.fontWeight,\n      foreColor: anno.label.style.color,\n      cssClass: `apexcharts-xaxis-annotation-label ${\n        anno.label.style.cssClass\n      } ${anno.id ? anno.id : ''}`\n    })\n\n    elText.attr({\n      rel: index\n    })\n\n    parent.appendChild(elText.node)\n\n    // after placing the annotations on svg, set any vertically placed annotations\n    this.annoCtx.helpers.setOrientations(anno, index)\n  }\n  drawXAxisAnnotations() {\n    let w = this.w\n\n    let elg = this.annoCtx.graphics.group({\n      class: 'apexcharts-xaxis-annotations'\n    })\n\n    w.config.annotations.xaxis.map((anno, index) => {\n      this.addXaxisAnnotation(anno, elg.node, index)\n    })\n\n    return elg\n  }\n}\n","/*\n ** Util functions which are dependent on ApexCharts instance\n */\n\nclass CoreUtils {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  static checkComboSeries(series) {\n    let comboCharts = false\n    let comboBarCount = 0\n    let comboCount = 0\n\n    // if user specified a type in series too, turn on comboCharts flag\n    if (series.length && typeof series[0].type !== 'undefined') {\n      series.forEach((s) => {\n        if (\n          s.type === 'bar' ||\n          s.type === 'column' ||\n          s.type === 'candlestick' ||\n          s.type === 'boxPlot'\n        ) {\n          comboBarCount++\n        }\n        if (typeof s.type !== 'undefined') {\n          comboCount++\n        }\n      })\n    }\n    if (comboCount > 1) {\n      comboCharts = true\n    }\n\n    return {\n      comboBarCount,\n      comboCharts\n    }\n  }\n\n  /**\n   * @memberof CoreUtils\n   * returns the sum of all individual values in a multiple stacked series\n   * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n   *  @return [34,36,48,13]\n   **/\n  getStackedSeriesTotals() {\n    const w = this.w\n    let total = []\n\n    if (w.globals.series.length === 0) return total\n\n    for (\n      let i = 0;\n      i < w.globals.series[w.globals.maxValsInArrayIndex].length;\n      i++\n    ) {\n      let t = 0\n      for (let j = 0; j < w.globals.series.length; j++) {\n        if (typeof w.globals.series[j][i] !== 'undefined') {\n          t += w.globals.series[j][i]\n        }\n      }\n      total.push(t)\n    }\n    w.globals.stackedSeriesTotals = total\n    return total\n  }\n\n  // get total of the all values inside all series\n  getSeriesTotalByIndex(index = null) {\n    if (index === null) {\n      // non-plot chart types - pie / donut / circle\n      return this.w.config.series.reduce((acc, cur) => acc + cur, 0)\n    } else {\n      // axis charts - supporting multiple series\n      return this.w.globals.series[index].reduce((acc, cur) => acc + cur, 0)\n    }\n  }\n\n  isSeriesNull(index = null) {\n    let r = []\n    if (index === null) {\n      // non-plot chart types - pie / donut / circle\n      r = this.w.config.series.filter((d) => d !== null)\n    } else {\n      // axis charts - supporting multiple series\n      r = this.w.config.series[index].data.filter((d) => d !== null)\n    }\n\n    return r.length === 0\n  }\n\n  seriesHaveSameValues(index) {\n    return this.w.globals.series[index].every((val, i, arr) => val === arr[0])\n  }\n\n  getCategoryLabels(labels) {\n    const w = this.w\n    let catLabels = labels.slice()\n    if (w.config.xaxis.convertedCatToNumeric) {\n      catLabels = labels.map((i, li) => {\n        return w.config.xaxis.labels.formatter(i - w.globals.minX + 1)\n      })\n    }\n    return catLabels\n  }\n  // maxValsInArrayIndex is the index of series[] which has the largest number of items\n  getLargestSeries() {\n    const w = this.w\n    w.globals.maxValsInArrayIndex = w.globals.series\n      .map((a) => a.length)\n      .indexOf(\n        Math.max.apply(\n          Math,\n          w.globals.series.map((a) => a.length)\n        )\n      )\n  }\n\n  getLargestMarkerSize() {\n    const w = this.w\n    let size = 0\n\n    w.globals.markers.size.forEach((m) => {\n      size = Math.max(size, m)\n    })\n\n    w.globals.markers.largestSize = size\n\n    return size\n  }\n\n  /**\n   * @memberof Core\n   * returns the sum of all values in a series\n   * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n   *  @return [120, 11]\n   **/\n  getSeriesTotals() {\n    const w = this.w\n\n    w.globals.seriesTotals = w.globals.series.map((ser, index) => {\n      let total = 0\n\n      if (Array.isArray(ser)) {\n        for (let j = 0; j < ser.length; j++) {\n          total += ser[j]\n        }\n      } else {\n        // for pie/donuts/gauges\n        total += ser\n      }\n\n      return total\n    })\n  }\n\n  getSeriesTotalsXRange(minX, maxX) {\n    const w = this.w\n\n    const seriesTotalsXRange = w.globals.series.map((ser, index) => {\n      let total = 0\n\n      for (let j = 0; j < ser.length; j++) {\n        if (\n          w.globals.seriesX[index][j] > minX &&\n          w.globals.seriesX[index][j] < maxX\n        ) {\n          total += ser[j]\n        }\n      }\n\n      return total\n    })\n\n    return seriesTotalsXRange\n  }\n\n  /**\n   * @memberof CoreUtils\n   * returns the percentage value of all individual values which can be used in a 100% stacked series\n   * Eg. w.globals.series = [[32, 33, 43, 12], [2, 3, 5, 1]]\n   *  @return [[94.11, 91.66, 89.58, 92.30], [5.88, 8.33, 10.41, 7.7]]\n   **/\n  getPercentSeries() {\n    const w = this.w\n\n    w.globals.seriesPercent = w.globals.series.map((ser, index) => {\n      let seriesPercent = []\n      if (Array.isArray(ser)) {\n        for (let j = 0; j < ser.length; j++) {\n          let total = w.globals.stackedSeriesTotals[j]\n          let percent = 0\n          if (total) {\n            percent = (100 * ser[j]) / total\n          }\n          seriesPercent.push(percent)\n        }\n      } else {\n        const total = w.globals.seriesTotals.reduce((acc, val) => acc + val, 0)\n        let percent = (100 * ser) / total\n        seriesPercent.push(percent)\n      }\n\n      return seriesPercent\n    })\n  }\n\n  getCalculatedRatios() {\n    let gl = this.w.globals\n\n    let yRatio = []\n    let invertedYRatio = 0\n    let xRatio = 0\n    let initialXRatio = 0\n    let invertedXRatio = 0\n    let zRatio = 0\n    let baseLineY = []\n    let baseLineInvertedY = 0.1\n    let baseLineX = 0\n\n    gl.yRange = []\n    if (gl.isMultipleYAxis) {\n      for (let i = 0; i < gl.minYArr.length; i++) {\n        gl.yRange.push(Math.abs(gl.minYArr[i] - gl.maxYArr[i]))\n        baseLineY.push(0)\n      }\n    } else {\n      gl.yRange.push(Math.abs(gl.minY - gl.maxY))\n    }\n    gl.xRange = Math.abs(gl.maxX - gl.minX)\n    gl.zRange = Math.abs(gl.maxZ - gl.minZ)\n\n    // multiple y axis\n    for (let i = 0; i < gl.yRange.length; i++) {\n      yRatio.push(gl.yRange[i] / gl.gridHeight)\n    }\n\n    xRatio = gl.xRange / gl.gridWidth\n\n    initialXRatio = Math.abs(gl.initialMaxX - gl.initialMinX) / gl.gridWidth\n\n    invertedYRatio = gl.yRange / gl.gridWidth\n    invertedXRatio = gl.xRange / gl.gridHeight\n    zRatio = (gl.zRange / gl.gridHeight) * 16\n\n    if (!zRatio) {\n      zRatio = 1\n    }\n\n    if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n      // Negative numbers present in series\n      gl.hasNegs = true\n    }\n\n    if (gl.isMultipleYAxis) {\n      baseLineY = []\n\n      // baseline variables is the 0 of the yaxis which will be needed when there are negatives\n      for (let i = 0; i < yRatio.length; i++) {\n        baseLineY.push(-gl.minYArr[i] / yRatio[i])\n      }\n    } else {\n      baseLineY.push(-gl.minY / yRatio[0])\n\n      if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n        baseLineInvertedY = -gl.minY / invertedYRatio // this is for bar chart\n        baseLineX = gl.minX / xRatio\n      }\n    }\n\n    return {\n      yRatio,\n      invertedYRatio,\n      zRatio,\n      xRatio,\n      initialXRatio,\n      invertedXRatio,\n      baseLineInvertedY,\n      baseLineY,\n      baseLineX\n    }\n  }\n\n  getLogSeries(series) {\n    const w = this.w\n\n    w.globals.seriesLog = series.map((s, i) => {\n      if (w.config.yaxis[i] && w.config.yaxis[i].logarithmic) {\n        return s.map((d) => {\n          if (d === null) return null\n\n          return this.getLogVal(d, i)\n        })\n      } else {\n        return s\n      }\n    })\n\n    return w.globals.invalidLogScale ? series : w.globals.seriesLog\n  }\n\n  getLogVal(d, yIndex) {\n    const w = this.w\n    return (\n      (Math.log(d) - Math.log(w.globals.minYArr[yIndex])) /\n      (Math.log(w.globals.maxYArr[yIndex]) -\n        Math.log(w.globals.minYArr[yIndex]))\n    )\n  }\n\n  getLogYRatios(yRatio) {\n    const w = this.w\n    const gl = this.w.globals\n\n    gl.yLogRatio = yRatio.slice()\n\n    gl.logYRange = gl.yRange.map((yRange, i) => {\n      if (w.config.yaxis[i] && this.w.config.yaxis[i].logarithmic) {\n        let maxY = -Number.MAX_VALUE\n        let minY = Number.MIN_VALUE\n        let range = 1\n        gl.seriesLog.forEach((s, si) => {\n          s.forEach((v) => {\n            if (w.config.yaxis[si] && w.config.yaxis[si].logarithmic) {\n              maxY = Math.max(v, maxY)\n              minY = Math.min(v, minY)\n            }\n          })\n        })\n\n        range = Math.pow(gl.yRange[i], Math.abs(minY - maxY) / gl.yRange[i])\n\n        gl.yLogRatio[i] = range / gl.gridHeight\n        return range\n      }\n    })\n\n    return gl.invalidLogScale ? yRatio.slice() : gl.yLogRatio\n  }\n\n  // Some config objects can be array - and we need to extend them correctly\n  static extendArrayProps(configInstance, options, w) {\n    if (options.yaxis) {\n      options = configInstance.extendYAxis(options, w)\n    }\n    if (options.annotations) {\n      if (options.annotations.yaxis) {\n        options = configInstance.extendYAxisAnnotations(options)\n      }\n      if (options.annotations.xaxis) {\n        options = configInstance.extendXAxisAnnotations(options)\n      }\n      if (options.annotations.points) {\n        options = configInstance.extendPointAnnotations(options)\n      }\n    }\n\n    return options\n  }\n}\n\nexport default CoreUtils\n","import CoreUtils from '../CoreUtils'\n\nexport default class YAnnotations {\n  constructor(annoCtx) {\n    this.w = annoCtx.w\n    this.annoCtx = annoCtx\n  }\n\n  addYaxisAnnotation(anno, parent, index) {\n    let w = this.w\n\n    let strokeDashArray = anno.strokeDashArray\n\n    let y1 = this._getY1Y2('y1', anno)\n    let y2\n\n    const text = anno.label.text\n\n    if (anno.y2 === null || typeof anno.y2 === 'undefined') {\n      let line = this.annoCtx.graphics.drawLine(\n        0 + anno.offsetX, // x1\n        y1 + anno.offsetY, // y1\n        this._getYAxisAnnotationWidth(anno), // x2\n        y1 + anno.offsetY, // y2\n        anno.borderColor, // lineColor\n        strokeDashArray, // dashArray\n        anno.borderWidth\n      )\n      parent.appendChild(line.node)\n      if (anno.id) {\n        line.node.classList.add(anno.id)\n      }\n    } else {\n      y2 = this._getY1Y2('y2', anno)\n\n      if (y2 > y1) {\n        let temp = y1\n        y1 = y2\n        y2 = temp\n      }\n\n      let rect = this.annoCtx.graphics.drawRect(\n        0 + anno.offsetX, // x1\n        y2 + anno.offsetY, // y1\n        this._getYAxisAnnotationWidth(anno), // x2\n        y1 - y2, // y2\n        0, // radius\n        anno.fillColor, // color\n        anno.opacity, // opacity,\n        1, // strokeWidth\n        anno.borderColor, // strokeColor\n        strokeDashArray // stokeDashArray\n      )\n      rect.node.classList.add('apexcharts-annotation-rect')\n      rect.attr('clip-path', `url(#gridRectMask${w.globals.cuid})`)\n\n      parent.appendChild(rect.node)\n      if (anno.id) {\n        rect.node.classList.add(anno.id)\n      }\n    }\n    let textX = anno.label.position === 'right' ? w.globals.gridWidth : 0\n\n    let elText = this.annoCtx.graphics.drawText({\n      x: textX + anno.label.offsetX,\n      y: (y2 || y1) + anno.label.offsetY - 3,\n      text,\n      textAnchor: anno.label.textAnchor,\n      fontSize: anno.label.style.fontSize,\n      fontFamily: anno.label.style.fontFamily,\n      fontWeight: anno.label.style.fontWeight,\n      foreColor: anno.label.style.color,\n      cssClass: `apexcharts-yaxis-annotation-label ${\n        anno.label.style.cssClass\n      } ${anno.id ? anno.id : ''}`\n    })\n\n    elText.attr({\n      rel: index\n    })\n\n    parent.appendChild(elText.node)\n  }\n\n  _getY1Y2(type, anno) {\n    let y = type === 'y1' ? anno.y : anno.y2\n    let yP\n\n    const w = this.w\n    if (this.annoCtx.invertAxis) {\n      let catIndex = w.globals.labels.indexOf(y)\n      if (w.config.xaxis.convertedCatToNumeric) {\n        catIndex = w.globals.categoryLabels.indexOf(y)\n      }\n      const xLabel = w.globals.dom.baseEl.querySelector(\n        '.apexcharts-yaxis-texts-g text:nth-child(' + (catIndex + 1) + ')'\n      )\n      if (xLabel) {\n        yP = parseFloat(xLabel.getAttribute('y'))\n      }\n    } else {\n      let yPos\n      if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n        const coreUtils = new CoreUtils(this.annoCtx.ctx)\n        y = coreUtils.getLogVal(y, anno.yAxisIndex)\n        yPos = y / w.globals.yLogRatio[anno.yAxisIndex]\n      } else {\n        yPos =\n          (y - w.globals.minYArr[anno.yAxisIndex]) /\n          (w.globals.yRange[anno.yAxisIndex] / w.globals.gridHeight)\n      }\n      yP = w.globals.gridHeight - yPos\n\n      if (\n        w.config.yaxis[anno.yAxisIndex] &&\n        w.config.yaxis[anno.yAxisIndex].reversed\n      ) {\n        yP = yPos\n      }\n    }\n\n    return yP\n  }\n\n  _getYAxisAnnotationWidth(anno) {\n    // issue apexcharts.js#2009\n    const w = this.w\n    let width = w.globals.gridWidth\n    if (anno.width.indexOf('%') > -1) {\n      width = (w.globals.gridWidth * parseInt(anno.width, 10)) / 100\n    } else {\n      width = parseInt(anno.width, 10)\n    }\n    return width + anno.offsetX\n  }\n\n  drawYAxisAnnotations() {\n    let w = this.w\n\n    let elg = this.annoCtx.graphics.group({\n      class: 'apexcharts-yaxis-annotations'\n    })\n\n    w.config.annotations.yaxis.map((anno, index) => {\n      this.addYaxisAnnotation(anno, elg.node, index)\n    })\n\n    return elg\n  }\n}\n","import Utils from '../../utils/Utils'\nimport CoreUtils from '../CoreUtils'\n\nexport default class PointAnnotations {\n  constructor(annoCtx) {\n    this.w = annoCtx.w\n    this.annoCtx = annoCtx\n  }\n\n  addPointAnnotation(anno, parent, index) {\n    const w = this.w\n\n    let x = 0\n    let y = 0\n    let pointY = 0\n\n    if (this.annoCtx.invertAxis) {\n      console.warn(\n        'Point annotation is not supported in horizontal bar charts.'\n      )\n    }\n\n    let annoY = parseFloat(anno.y)\n\n    if (typeof anno.x === 'string') {\n      let catIndex = w.globals.labels.indexOf(anno.x)\n\n      if (w.config.xaxis.convertedCatToNumeric) {\n        catIndex = w.globals.categoryLabels.indexOf(anno.x)\n      }\n\n      x = this.annoCtx.helpers.getStringX(anno.x)\n\n      if (anno.y === null) {\n        annoY = w.globals.series[anno.seriesIndex][catIndex]\n      }\n    } else {\n      x = (anno.x - w.globals.minX) / (w.globals.xRange / w.globals.gridWidth)\n    }\n\n    // count series assign to the same axis\n    let duplicateSeriesName = []\n    let countDuplicateSeriesName = 0\n    for (let i = 0; i <= anno.seriesIndex; i++) {\n      let serieName = w.config.yaxis[i].seriesName\n      if (serieName)\n        for (let j = i + 1; j <= anno.seriesIndex; j++) {\n          if (\n            w.config.yaxis[j].seriesName === serieName &&\n            duplicateSeriesName.indexOf(serieName) === -1\n          ) {\n            countDuplicateSeriesName++\n            duplicateSeriesName.push(serieName)\n          }\n        }\n    }\n\n    let yPos\n    if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n      const coreUtils = new CoreUtils(this.annoCtx.ctx)\n      annoY = coreUtils.getLogVal(annoY, anno.yAxisIndex)\n      yPos = annoY / w.globals.yLogRatio[anno.yAxisIndex]\n    } else {\n      // calculate the right position in array for this yAxisIndex\n      let actualSerieIndex = anno.yAxisIndex + countDuplicateSeriesName\n      yPos =\n        (annoY - w.globals.minYArr[actualSerieIndex]) /\n        (w.globals.yRange[actualSerieIndex] / w.globals.gridHeight)\n    }\n\n    y =\n      w.globals.gridHeight -\n      yPos -\n      parseFloat(anno.label.style.fontSize) -\n      anno.marker.size\n\n    pointY = w.globals.gridHeight - yPos\n\n    if (\n      w.config.yaxis[anno.yAxisIndex] &&\n      w.config.yaxis[anno.yAxisIndex].reversed\n    ) {\n      y = yPos + parseFloat(anno.label.style.fontSize) + anno.marker.size\n      pointY = yPos\n    }\n\n    if (!Utils.isNumber(x)) return\n\n    let optsPoints = {\n      pSize: anno.marker.size,\n      pointStrokeWidth: anno.marker.strokeWidth,\n      pointFillColor: anno.marker.fillColor,\n      pointStrokeColor: anno.marker.strokeColor,\n      shape: anno.marker.shape,\n      pRadius: anno.marker.radius,\n      class: `apexcharts-point-annotation-marker ${anno.marker.cssClass} ${\n        anno.id ? anno.id : ''\n      }`\n    }\n\n    let point = this.annoCtx.graphics.drawMarker(\n      x + anno.marker.offsetX,\n      pointY + anno.marker.offsetY,\n      optsPoints\n    )\n\n    parent.appendChild(point.node)\n\n    const text = anno.label.text ? anno.label.text : ''\n\n    let elText = this.annoCtx.graphics.drawText({\n      x: x + anno.label.offsetX,\n      y: y + anno.label.offsetY,\n      text,\n      textAnchor: anno.label.textAnchor,\n      fontSize: anno.label.style.fontSize,\n      fontFamily: anno.label.style.fontFamily,\n      fontWeight: anno.label.style.fontWeight,\n      foreColor: anno.label.style.color,\n      cssClass: `apexcharts-point-annotation-label ${\n        anno.label.style.cssClass\n      } ${anno.id ? anno.id : ''}`\n    })\n\n    elText.attr({\n      rel: index\n    })\n\n    parent.appendChild(elText.node)\n\n    // TODO: deprecate this as we will use custom\n    if (anno.customSVG.SVG) {\n      let g = this.annoCtx.graphics.group({\n        class:\n          'apexcharts-point-annotations-custom-svg ' + anno.customSVG.cssClass\n      })\n\n      g.attr({\n        transform: `translate(${x + anno.customSVG.offsetX}, ${y +\n          anno.customSVG.offsetY})`\n      })\n\n      g.node.innerHTML = anno.customSVG.SVG\n      parent.appendChild(g.node)\n    }\n\n    if (anno.image.path) {\n      let imgWidth = anno.image.width ? anno.image.width : 20\n      let imgHeight = anno.image.height ? anno.image.height : 20\n\n      this.annoCtx.addImage({\n        x: x + anno.image.offsetX - imgWidth / 2,\n        y: y + anno.image.offsetY - imgHeight / 2,\n        width: imgWidth,\n        height: imgHeight,\n        path: anno.image.path,\n        appendTo: '.apexcharts-point-annotations'\n      })\n    }\n  }\n\n  drawPointAnnotations() {\n    let w = this.w\n\n    let elg = this.annoCtx.graphics.group({\n      class: 'apexcharts-point-annotations'\n    })\n\n    w.config.annotations.points.map((anno, index) => {\n      this.addPointAnnotation(anno, elg.node, index)\n    })\n\n    return elg\n  }\n}\n","/**\n * ApexCharts Options for setting the initial configuration of ApexCharts\n **/\nimport en from './../../locales/en.json'\n\nexport default class Options {\n  constructor() {\n    this.yAxis = {\n      show: true,\n      showAlways: false,\n      showForNullSeries: true,\n      seriesName: undefined,\n      opposite: false,\n      reversed: false,\n      logarithmic: false,\n      tickAmount: undefined,\n      forceNiceScale: false,\n      max: undefined,\n      min: undefined,\n      floating: false,\n      decimalsInFloat: undefined,\n      labels: {\n        show: true,\n        minWidth: 0,\n        maxWidth: 160,\n        offsetX: 0,\n        offsetY: 0,\n        align: undefined,\n        rotate: 0,\n        padding: 20,\n        style: {\n          colors: [],\n          fontSize: '11px',\n          fontWeight: 400,\n          fontFamily: undefined,\n          cssClass: ''\n        },\n        formatter: undefined\n      },\n      axisBorder: {\n        show: false,\n        color: '#e0e0e0',\n        width: 1,\n        offsetX: 0,\n        offsetY: 0\n      },\n      axisTicks: {\n        show: false,\n        color: '#e0e0e0',\n        width: 6,\n        offsetX: 0,\n        offsetY: 0\n      },\n      title: {\n        text: undefined,\n        rotate: -90,\n        offsetY: 0,\n        offsetX: 0,\n        style: {\n          color: undefined,\n          fontSize: '11px',\n          fontWeight: 900,\n          fontFamily: undefined,\n          cssClass: ''\n        }\n      },\n      tooltip: {\n        enabled: false,\n        offsetX: 0\n      },\n      crosshairs: {\n        show: true,\n        position: 'front',\n        stroke: {\n          color: '#b6b6b6',\n          width: 1,\n          dashArray: 0\n        }\n      }\n    }\n\n    this.pointAnnotation = {\n      x: 0,\n      y: null,\n      yAxisIndex: 0,\n      seriesIndex: 0,\n      marker: {\n        size: 4,\n        fillColor: '#fff',\n        strokeWidth: 2,\n        strokeColor: '#333',\n        shape: 'circle',\n        offsetX: 0,\n        offsetY: 0,\n        radius: 2,\n        cssClass: ''\n      },\n      label: {\n        borderColor: '#c2c2c2',\n        borderWidth: 1,\n        borderRadius: 2,\n        text: undefined,\n        textAnchor: 'middle',\n        offsetX: 0,\n        offsetY: 0,\n        style: {\n          background: '#fff',\n          color: undefined,\n          fontSize: '11px',\n          fontFamily: undefined,\n          fontWeight: 400,\n          cssClass: '',\n          padding: {\n            left: 5,\n            right: 5,\n            top: 2,\n            bottom: 2\n          }\n        }\n      },\n      customSVG: {\n        // this will be deprecated in the next major version as it is going to be replaced with a better alternative below\n        SVG: undefined,\n        cssClass: undefined,\n        offsetX: 0,\n        offsetY: 0\n      },\n      image: {\n        path: undefined,\n        width: 20,\n        height: 20,\n        offsetX: 0,\n        offsetY: 0\n      }\n    }\n\n    this.yAxisAnnotation = {\n      y: 0,\n      y2: null,\n      strokeDashArray: 1,\n      fillColor: '#c2c2c2',\n      borderColor: '#c2c2c2',\n      borderWidth: 1,\n      opacity: 0.3,\n      offsetX: 0,\n      offsetY: 0,\n      width: '100%',\n      yAxisIndex: 0,\n      label: {\n        borderColor: '#c2c2c2',\n        borderWidth: 1,\n        borderRadius: 2,\n        text: undefined,\n        textAnchor: 'end',\n        position: 'right',\n        offsetX: 0,\n        offsetY: -3,\n        style: {\n          background: '#fff',\n          color: undefined,\n          fontSize: '11px',\n          fontFamily: undefined,\n          fontWeight: 400,\n          cssClass: '',\n          padding: {\n            left: 5,\n            right: 5,\n            top: 2,\n            bottom: 2\n          }\n        }\n      }\n    }\n\n    this.xAxisAnnotation = {\n      x: 0,\n      x2: null,\n      strokeDashArray: 1,\n      fillColor: '#c2c2c2',\n      borderColor: '#c2c2c2',\n      borderWidth: 1,\n      opacity: 0.3,\n      offsetX: 0,\n      offsetY: 0,\n      label: {\n        borderColor: '#c2c2c2',\n        borderWidth: 1,\n        borderRadius: 2,\n        text: undefined,\n        textAnchor: 'middle',\n        orientation: 'vertical',\n        position: 'top',\n        offsetX: 0,\n        offsetY: 0,\n        style: {\n          background: '#fff',\n          color: undefined,\n          fontSize: '11px',\n          fontFamily: undefined,\n          fontWeight: 400,\n          cssClass: '',\n          padding: {\n            left: 5,\n            right: 5,\n            top: 2,\n            bottom: 2\n          }\n        }\n      }\n    }\n\n    this.text = {\n      x: 0,\n      y: 0,\n      text: '',\n      textAnchor: 'start',\n      foreColor: undefined,\n      fontSize: '13px',\n      fontFamily: undefined,\n      fontWeight: 400,\n      appendTo: '.apexcharts-annotations',\n      backgroundColor: 'transparent',\n      borderColor: '#c2c2c2',\n      borderRadius: 0,\n      borderWidth: 0,\n      paddingLeft: 4,\n      paddingRight: 4,\n      paddingTop: 2,\n      paddingBottom: 2\n    }\n  }\n  init() {\n    return {\n      annotations: {\n        position: 'front',\n        yaxis: [this.yAxisAnnotation],\n        xaxis: [this.xAxisAnnotation],\n        points: [this.pointAnnotation],\n        texts: [],\n        images: [],\n        shapes: []\n      },\n      chart: {\n        animations: {\n          enabled: true,\n          easing: 'easeinout', // linear, easeout, easein, easeinout, swing, bounce, elastic\n          speed: 800,\n          animateGradually: {\n            delay: 150,\n            enabled: true\n          },\n          dynamicAnimation: {\n            enabled: true,\n            speed: 350\n          }\n        },\n        background: 'transparent',\n        locales: [en],\n        defaultLocale: 'en',\n        dropShadow: {\n          enabled: false,\n          enabledOnSeries: undefined,\n          top: 2,\n          left: 2,\n          blur: 4,\n          color: '#000',\n          opacity: 0.35\n        },\n        events: {\n          animationEnd: undefined,\n          beforeMount: undefined,\n          mounted: undefined,\n          updated: undefined,\n          click: undefined,\n          mouseMove: undefined,\n          mouseLeave: undefined,\n          legendClick: undefined,\n          markerClick: undefined,\n          selection: undefined,\n          dataPointSelection: undefined,\n          dataPointMouseEnter: undefined,\n          dataPointMouseLeave: undefined,\n          beforeZoom: undefined,\n          beforeResetZoom: undefined,\n          zoomed: undefined,\n          scrolled: undefined,\n          brushScrolled: undefined\n        },\n        foreColor: '#373d3f',\n        fontFamily: 'Helvetica, Arial, sans-serif',\n        height: 'auto',\n        parentHeightOffset: 15,\n        redrawOnParentResize: true,\n        redrawOnWindowResize: true,\n        id: undefined,\n        group: undefined,\n        offsetX: 0,\n        offsetY: 0,\n        selection: {\n          enabled: false,\n          type: 'x',\n          // selectedPoints: undefined, // default datapoints that should be selected automatically\n          fill: {\n            color: '#24292e',\n            opacity: 0.1\n          },\n          stroke: {\n            width: 1,\n            color: '#24292e',\n            opacity: 0.4,\n            dashArray: 3\n          },\n          xaxis: {\n            min: undefined,\n            max: undefined\n          },\n          yaxis: {\n            min: undefined,\n            max: undefined\n          }\n        },\n        sparkline: {\n          enabled: false\n        },\n        brush: {\n          enabled: false,\n          autoScaleYaxis: true,\n          target: undefined\n        },\n        stacked: false,\n        stackType: 'normal',\n        toolbar: {\n          show: true,\n          offsetX: 0,\n          offsetY: 0,\n          tools: {\n            download: true,\n            selection: true,\n            zoom: true,\n            zoomin: true,\n            zoomout: true,\n            pan: true,\n            reset: true,\n            customIcons: []\n          },\n          export: {\n            csv: {\n              filename: undefined,\n              columnDelimiter: ',',\n              headerCategory: 'category',\n              headerValue: 'value',\n              dateFormatter(timestamp) {\n                return new Date(timestamp).toDateString()\n              }\n            },\n            png: {\n              filename: undefined\n            },\n            svg: {\n              filename: undefined\n            }\n          },\n          autoSelected: 'zoom' // accepts -> zoom, pan, selection\n        },\n        type: 'line',\n        width: '100%',\n        zoom: {\n          enabled: true,\n          type: 'x',\n          autoScaleYaxis: false,\n          zoomedArea: {\n            fill: {\n              color: '#90CAF9',\n              opacity: 0.4\n            },\n            stroke: {\n              color: '#0D47A1',\n              opacity: 0.4,\n              width: 1\n            }\n          }\n        }\n      },\n      plotOptions: {\n        area: {\n          fillTo: 'origin'\n        },\n        bar: {\n          horizontal: false,\n          columnWidth: '70%', // should be in percent 0 - 100\n          barHeight: '70%', // should be in percent 0 - 100\n          distributed: false,\n          borderRadius: 0,\n          rangeBarOverlap: true,\n          rangeBarGroupRows: false,\n          colors: {\n            ranges: [],\n            backgroundBarColors: [],\n            backgroundBarOpacity: 1,\n            backgroundBarRadius: 0\n          },\n          dataLabels: {\n            position: 'top', // top, center, bottom\n            maxItems: 100,\n            hideOverflowingLabels: true,\n            orientation: 'horizontal'\n            // TODO: provide stackedLabels for stacked charts which gives additions of values\n          }\n        },\n        bubble: {\n          minBubbleRadius: undefined,\n          maxBubbleRadius: undefined\n        },\n        candlestick: {\n          colors: {\n            upward: '#00B746',\n            downward: '#EF403C'\n          },\n          wick: {\n            useFillColor: true\n          }\n        },\n        boxPlot: {\n          colors: {\n            upper: '#00E396',\n            lower: '#008FFB'\n          }\n        },\n        heatmap: {\n          radius: 2,\n          enableShades: true,\n          shadeIntensity: 0.5,\n          reverseNegativeShade: false,\n          distributed: false,\n          useFillColorAsStroke: false,\n          colorScale: {\n            inverse: false,\n            ranges: [],\n            min: undefined,\n            max: undefined\n          }\n        },\n        treemap: {\n          enableShades: true,\n          shadeIntensity: 0.5,\n          distributed: false,\n          reverseNegativeShade: false,\n          useFillColorAsStroke: false,\n          colorScale: {\n            inverse: false,\n            ranges: [],\n            min: undefined,\n            max: undefined\n          }\n        },\n        radialBar: {\n          inverseOrder: false,\n          startAngle: 0,\n          endAngle: 360,\n          offsetX: 0,\n          offsetY: 0,\n          hollow: {\n            margin: 5,\n            size: '50%',\n            background: 'transparent',\n            image: undefined,\n            imageWidth: 150,\n            imageHeight: 150,\n            imageOffsetX: 0,\n            imageOffsetY: 0,\n            imageClipped: true,\n            position: 'front',\n            dropShadow: {\n              enabled: false,\n              top: 0,\n              left: 0,\n              blur: 3,\n              color: '#000',\n              opacity: 0.5\n            }\n          },\n          track: {\n            show: true,\n            startAngle: undefined,\n            endAngle: undefined,\n            background: '#f2f2f2',\n            strokeWidth: '97%',\n            opacity: 1,\n            margin: 5, // margin is in pixels\n            dropShadow: {\n              enabled: false,\n              top: 0,\n              left: 0,\n              blur: 3,\n              color: '#000',\n              opacity: 0.5\n            }\n          },\n          dataLabels: {\n            show: true,\n            name: {\n              show: true,\n              fontSize: '16px',\n              fontFamily: undefined,\n              fontWeight: 600,\n              color: undefined,\n              offsetY: 0,\n              formatter(val) {\n                return val\n              }\n            },\n            value: {\n              show: true,\n              fontSize: '14px',\n              fontFamily: undefined,\n              fontWeight: 400,\n              color: undefined,\n              offsetY: 16,\n              formatter(val) {\n                return val + '%'\n              }\n            },\n            total: {\n              show: false,\n              label: 'Total',\n              fontSize: '16px',\n              fontWeight: 600,\n              fontFamily: undefined,\n              color: undefined,\n              formatter(w) {\n                return (\n                  w.globals.seriesTotals.reduce((a, b) => a + b, 0) /\n                    w.globals.series.length +\n                  '%'\n                )\n              }\n            }\n          }\n        },\n        pie: {\n          customScale: 1,\n          offsetX: 0,\n          offsetY: 0,\n          startAngle: 0,\n          endAngle: 360,\n          expandOnClick: true,\n          dataLabels: {\n            // These are the percentage values which are displayed on slice\n            offset: 0, // offset by which labels will move outside\n            minAngleToShowLabel: 10\n          },\n          donut: {\n            size: '65%',\n            background: 'transparent',\n            labels: {\n              // These are the inner labels appearing inside donut\n              show: false,\n              name: {\n                show: true,\n                fontSize: '16px',\n                fontFamily: undefined,\n                fontWeight: 600,\n                color: undefined,\n                offsetY: -10,\n                formatter(val) {\n                  return val\n                }\n              },\n              value: {\n                show: true,\n                fontSize: '20px',\n                fontFamily: undefined,\n                fontWeight: 400,\n                color: undefined,\n                offsetY: 10,\n                formatter(val) {\n                  return val\n                }\n              },\n              total: {\n                show: false,\n                showAlways: false,\n                label: 'Total',\n                fontSize: '16px',\n                fontWeight: 400,\n                fontFamily: undefined,\n                color: undefined,\n                formatter(w) {\n                  return w.globals.seriesTotals.reduce((a, b) => a + b, 0)\n                }\n              }\n            }\n          }\n        },\n        polarArea: {\n          rings: {\n            strokeWidth: 1,\n            strokeColor: '#e8e8e8'\n          },\n          spokes: {\n            strokeWidth: 1,\n            connectorColors: '#e8e8e8'\n          }\n        },\n        radar: {\n          size: undefined,\n          offsetX: 0,\n          offsetY: 0,\n          polygons: {\n            // strokeColor: '#e8e8e8', // should be deprecated in the minor version i.e 3.2\n            strokeWidth: 1,\n            strokeColors: '#e8e8e8',\n            connectorColors: '#e8e8e8',\n            fill: {\n              colors: undefined\n            }\n          }\n        }\n      },\n      colors: undefined,\n      dataLabels: {\n        enabled: true,\n        enabledOnSeries: undefined,\n        formatter(val) {\n          return val !== null ? val : ''\n        },\n        textAnchor: 'middle',\n        distributed: false,\n        offsetX: 0,\n        offsetY: 0,\n        style: {\n          fontSize: '12px',\n          fontFamily: undefined,\n          fontWeight: 600,\n          colors: undefined\n        },\n        background: {\n          enabled: true,\n          foreColor: '#fff',\n          borderRadius: 2,\n          padding: 4,\n          opacity: 0.9,\n          borderWidth: 1,\n          borderColor: '#fff',\n          dropShadow: {\n            enabled: false,\n            top: 1,\n            left: 1,\n            blur: 1,\n            color: '#000',\n            opacity: 0.45\n          }\n        },\n        dropShadow: {\n          enabled: false,\n          top: 1,\n          left: 1,\n          blur: 1,\n          color: '#000',\n          opacity: 0.45\n        }\n      },\n      fill: {\n        type: 'solid',\n        colors: undefined, // array of colors\n        opacity: 0.85,\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: undefined,\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 50, 100],\n          colorStops: []\n        },\n        image: {\n          src: [],\n          width: undefined, // optional\n          height: undefined // optional\n        },\n        pattern: {\n          style: 'squares', // String | Array of Strings\n          width: 6,\n          height: 6,\n          strokeWidth: 2\n        }\n      },\n      forecastDataPoints: {\n        count: 0,\n        fillOpacity: 0.5,\n        strokeWidth: undefined,\n        dashArray: 4\n      },\n      grid: {\n        show: true,\n        borderColor: '#e0e0e0',\n        strokeDashArray: 0,\n        position: 'back',\n        xaxis: {\n          lines: {\n            show: false\n          }\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        },\n        row: {\n          colors: undefined, // takes as array which will be repeated on rows\n          opacity: 0.5\n        },\n        column: {\n          colors: undefined, // takes an array which will be repeated on columns\n          opacity: 0.5\n        },\n        padding: {\n          top: 0,\n          right: 10,\n          bottom: 0,\n          left: 12\n        }\n      },\n      labels: [],\n      legend: {\n        show: true,\n        showForSingleSeries: false,\n        showForNullSeries: true,\n        showForZeroSeries: true,\n        floating: false,\n        position: 'bottom', // whether to position legends in 1 of 4\n        // direction - top, bottom, left, right\n        horizontalAlign: 'center', // when position top/bottom, you can specify whether to align legends left, right or center\n        inverseOrder: false,\n        fontSize: '12px',\n        fontFamily: undefined,\n        fontWeight: 400,\n        width: undefined,\n        height: undefined,\n        formatter: undefined,\n        tooltipHoverFormatter: undefined,\n        offsetX: -20,\n        offsetY: 4,\n        customLegendItems: [],\n        labels: {\n          colors: undefined,\n          useSeriesColors: false\n        },\n        markers: {\n          width: 12,\n          height: 12,\n          strokeWidth: 0,\n          fillColors: undefined,\n          strokeColor: '#fff',\n          radius: 12,\n          customHTML: undefined,\n          offsetX: 0,\n          offsetY: 0,\n          onClick: undefined\n        },\n        itemMargin: {\n          horizontal: 5,\n          vertical: 2\n        },\n        onItemClick: {\n          toggleDataSeries: true\n        },\n        onItemHover: {\n          highlightDataSeries: true\n        }\n      },\n      markers: {\n        discrete: [],\n        size: 0,\n        colors: undefined,\n        //strokeColor: '#fff', // TODO: deprecate in major version 4.0\n        strokeColors: '#fff',\n        strokeWidth: 2,\n        strokeOpacity: 0.9,\n        strokeDashArray: 0,\n        fillOpacity: 1,\n        shape: 'circle',\n        width: 8, // only applicable when shape is rect/square\n        height: 8, // only applicable when shape is rect/square\n        radius: 2,\n        offsetX: 0,\n        offsetY: 0,\n        onClick: undefined,\n        onDblClick: undefined,\n        showNullDataPoints: true,\n        hover: {\n          size: undefined,\n          sizeOffset: 3\n        }\n      },\n      noData: {\n        text: undefined,\n        align: 'center',\n        verticalAlign: 'middle',\n        offsetX: 0,\n        offsetY: 0,\n        style: {\n          color: undefined,\n          fontSize: '14px',\n          fontFamily: undefined\n        }\n      },\n      responsive: [], // breakpoints should follow ascending order 400, then 700, then 1000\n      series: undefined,\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'lighten',\n            value: 0.1\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'darken',\n            value: 0.5\n          }\n        }\n      },\n      title: {\n        text: undefined,\n        align: 'left',\n        margin: 5,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false,\n        style: {\n          fontSize: '14px',\n          fontWeight: 900,\n          fontFamily: undefined,\n          color: undefined\n        }\n      },\n      subtitle: {\n        text: undefined,\n        align: 'left',\n        margin: 5,\n        offsetX: 0,\n        offsetY: 30,\n        floating: false,\n        style: {\n          fontSize: '12px',\n          fontWeight: 400,\n          fontFamily: undefined,\n          color: undefined\n        }\n      },\n      stroke: {\n        show: true,\n        curve: 'smooth', // \"smooth\" / \"straight\" / \"stepline\"\n        lineCap: 'butt', // round, butt , square\n        width: 2,\n        colors: undefined, // array of colors\n        dashArray: 0 // single value or array of values\n      },\n      tooltip: {\n        enabled: true,\n        enabledOnSeries: undefined,\n        shared: true,\n        followCursor: false, // when disabled, the tooltip will show on top of the series instead of mouse position\n        intersect: false, // when enabled, tooltip will only show when user directly hovers over point\n        inverseOrder: false,\n        custom: undefined,\n        fillSeriesColor: false,\n        theme: 'light',\n        style: {\n          fontSize: '12px',\n          fontFamily: undefined\n        },\n        onDatasetHover: {\n          highlightDataSeries: false\n        },\n        x: {\n          // x value\n          show: true,\n          format: 'dd MMM', // dd/MM, dd MMM yy, dd MMM yyyy\n          formatter: undefined // a custom user supplied formatter function\n        },\n        y: {\n          formatter: undefined,\n          title: {\n            formatter(seriesName) {\n              return seriesName ? seriesName + ': ' : ''\n            }\n          }\n        },\n        z: {\n          formatter: undefined,\n          title: 'Size: '\n        },\n        marker: {\n          show: true,\n          fillColors: undefined\n        },\n        items: {\n          display: 'flex'\n        },\n        fixed: {\n          enabled: false,\n          position: 'topRight', // topRight, topLeft, bottomRight, bottomLeft\n          offsetX: 0,\n          offsetY: 0\n        }\n      },\n      xaxis: {\n        type: 'category',\n        categories: [],\n        convertedCatToNumeric: false, // internal property which should not be altered outside\n        offsetX: 0,\n        offsetY: 0,\n        overwriteCategories: undefined,\n        labels: {\n          show: true,\n          rotate: -45,\n          rotateAlways: false,\n          hideOverlappingLabels: true,\n          trim: false,\n          minHeight: undefined,\n          maxHeight: 120,\n          showDuplicates: true,\n          style: {\n            colors: [],\n            fontSize: '12px',\n            fontWeight: 400,\n            fontFamily: undefined,\n            cssClass: ''\n          },\n          offsetX: 0,\n          offsetY: 0,\n          format: undefined,\n          formatter: undefined, // custom formatter function which will override format\n          datetimeUTC: true,\n          datetimeFormatter: {\n            year: 'yyyy',\n            month: \"MMM 'yy\",\n            day: 'dd MMM',\n            hour: 'HH:mm',\n            minute: 'HH:mm:ss',\n            second: 'HH:mm:ss'\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: '#e0e0e0',\n          width: '100%',\n          height: 1,\n          offsetX: 0,\n          offsetY: 0\n        },\n        axisTicks: {\n          show: true,\n          color: '#e0e0e0',\n          height: 6,\n          offsetX: 0,\n          offsetY: 0\n        },\n        tickAmount: undefined,\n        tickPlacement: 'on',\n        min: undefined,\n        max: undefined,\n        range: undefined,\n        floating: false,\n        decimalsInFloat: undefined,\n        position: 'bottom',\n        title: {\n          text: undefined,\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            color: undefined,\n            fontSize: '12px',\n            fontWeight: 900,\n            fontFamily: undefined,\n            cssClass: ''\n          }\n        },\n        crosshairs: {\n          show: true,\n          width: 1, // tickWidth/barWidth or an integer\n          position: 'back',\n          opacity: 0.9,\n          stroke: {\n            color: '#b6b6b6',\n            width: 1,\n            dashArray: 3\n          },\n          fill: {\n            type: 'solid', // solid, gradient\n            color: '#B1B9C4',\n            gradient: {\n              colorFrom: '#D8E3F0',\n              colorTo: '#BED1E6',\n              stops: [0, 100],\n              opacityFrom: 0.4,\n              opacityTo: 0.5\n            }\n          },\n          dropShadow: {\n            enabled: false,\n            left: 0,\n            top: 0,\n            blur: 1,\n            opacity: 0.4\n          }\n        },\n        tooltip: {\n          enabled: true,\n          offsetY: 0,\n          formatter: undefined,\n          style: {\n            fontSize: '12px',\n            fontFamily: undefined\n          }\n        }\n      },\n      yaxis: this.yAxis,\n      theme: {\n        mode: 'light',\n        palette: 'palette1', // If defined, it will overwrite globals.colors variable\n        monochrome: {\n          // monochrome allows you to select just 1 color and fill out the rest with light/dark shade (intensity can be selected)\n          enabled: false,\n          color: '#008FFB',\n          shadeTo: 'light',\n          shadeIntensity: 0.65\n        }\n      }\n    }\n  }\n}\n","import Graphics from '../../modules/Graphics'\nimport Utils from '../../utils/Utils'\nimport Helpers from './Helpers'\nimport XAxisAnnotations from './XAxisAnnotations'\nimport YAxisAnnotations from './YAxisAnnotations'\nimport PointsAnnotations from './PointsAnnotations'\nimport Options from './../settings/Options'\n\n/**\n * ApexCharts Annotations Class for drawing lines/rects on both xaxis and yaxis.\n *\n * @module Annotations\n **/\nexport default class Annotations {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    this.graphics = new Graphics(this.ctx)\n\n    if (this.w.globals.isBarHorizontal) {\n      this.invertAxis = true\n    }\n\n    this.helpers = new Helpers(this)\n    this.xAxisAnnotations = new XAxisAnnotations(this)\n    this.yAxisAnnotations = new YAxisAnnotations(this)\n    this.pointsAnnotations = new PointsAnnotations(this)\n\n    if (this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed) {\n      this.inversedReversedAxis = true\n    }\n\n    this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints\n  }\n\n  drawAxesAnnotations() {\n    const w = this.w\n    if (w.globals.axisCharts) {\n      let yAnnotations = this.yAxisAnnotations.drawYAxisAnnotations()\n      let xAnnotations = this.xAxisAnnotations.drawXAxisAnnotations()\n      let pointAnnotations = this.pointsAnnotations.drawPointAnnotations()\n\n      const initialAnim = w.config.chart.animations.enabled\n\n      const annoArray = [yAnnotations, xAnnotations, pointAnnotations]\n      const annoElArray = [\n        xAnnotations.node,\n        yAnnotations.node,\n        pointAnnotations.node\n      ]\n      for (let i = 0; i < 3; i++) {\n        w.globals.dom.elGraphical.add(annoArray[i])\n        if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n          // fixes apexcharts/apexcharts.js#685\n          if (\n            w.config.chart.type !== 'scatter' &&\n            w.config.chart.type !== 'bubble' &&\n            w.globals.dataPoints > 1\n          ) {\n            annoElArray[i].classList.add('apexcharts-element-hidden')\n          }\n        }\n        w.globals.delayedElements.push({ el: annoElArray[i], index: 0 })\n      }\n\n      // background sizes needs to be calculated after text is drawn, so calling them last\n      this.helpers.annotationsBackground()\n    }\n  }\n\n  drawImageAnnos() {\n    const w = this.w\n\n    w.config.annotations.images.map((s, index) => {\n      this.addImage(s, index)\n    })\n  }\n\n  drawTextAnnos() {\n    const w = this.w\n\n    w.config.annotations.texts.map((t, index) => {\n      this.addText(t, index)\n    })\n  }\n\n  addXaxisAnnotation(anno, parent, index) {\n    this.xAxisAnnotations.addXaxisAnnotation(anno, parent, index)\n  }\n\n  addYaxisAnnotation(anno, parent, index) {\n    this.yAxisAnnotations.addYaxisAnnotation(anno, parent, index)\n  }\n\n  addPointAnnotation(anno, parent, index) {\n    this.pointsAnnotations.addPointAnnotation(anno, parent, index)\n  }\n\n  addText(params, index) {\n    const {\n      x,\n      y,\n      text,\n      textAnchor,\n      foreColor,\n      fontSize,\n      fontFamily,\n      fontWeight,\n      cssClass,\n      backgroundColor,\n      borderWidth,\n      strokeDashArray,\n      borderRadius,\n      borderColor,\n      appendTo = '.apexcharts-annotations',\n      paddingLeft = 4,\n      paddingRight = 4,\n      paddingBottom = 2,\n      paddingTop = 2\n    } = params\n\n    const w = this.w\n\n    let elText = this.graphics.drawText({\n      x,\n      y,\n      text,\n      textAnchor: textAnchor || 'start',\n      fontSize: fontSize || '12px',\n      fontWeight: fontWeight || 'regular',\n      fontFamily: fontFamily || w.config.chart.fontFamily,\n      foreColor: foreColor || w.config.chart.foreColor,\n      cssClass: 'apexcharts-text ' + cssClass ? cssClass : ''\n    })\n\n    const parent = w.globals.dom.baseEl.querySelector(appendTo)\n    if (parent) {\n      parent.appendChild(elText.node)\n    }\n\n    const textRect = elText.bbox()\n\n    if (text) {\n      const elRect = this.graphics.drawRect(\n        textRect.x - paddingLeft,\n        textRect.y - paddingTop,\n        textRect.width + paddingLeft + paddingRight,\n        textRect.height + paddingBottom + paddingTop,\n        borderRadius,\n        backgroundColor ? backgroundColor : 'transparent',\n        1,\n        borderWidth,\n        borderColor,\n        strokeDashArray\n      )\n\n      parent.insertBefore(elRect.node, elText.node)\n    }\n  }\n\n  addImage(params, index) {\n    const w = this.w\n\n    const {\n      path,\n      x = 0,\n      y = 0,\n      width = 20,\n      height = 20,\n      appendTo = '.apexcharts-annotations'\n    } = params\n\n    let img = w.globals.dom.Paper.image(path)\n    img.size(width, height).move(x, y)\n\n    const parent = w.globals.dom.baseEl.querySelector(appendTo)\n    if (parent) {\n      parent.appendChild(img.node)\n    }\n  }\n\n  // The addXaxisAnnotation method requires a parent class, and user calling this method externally on the chart instance may not specify parent, hence a different method\n  addXaxisAnnotationExternal(params, pushToMemory, context) {\n    this.addAnnotationExternal({\n      params,\n      pushToMemory,\n      context,\n      type: 'xaxis',\n      contextMethod: context.addXaxisAnnotation\n    })\n    return context\n  }\n\n  addYaxisAnnotationExternal(params, pushToMemory, context) {\n    this.addAnnotationExternal({\n      params,\n      pushToMemory,\n      context,\n      type: 'yaxis',\n      contextMethod: context.addYaxisAnnotation\n    })\n    return context\n  }\n\n  addPointAnnotationExternal(params, pushToMemory, context) {\n    if (typeof this.invertAxis === 'undefined') {\n      this.invertAxis = context.w.globals.isBarHorizontal\n    }\n\n    this.addAnnotationExternal({\n      params,\n      pushToMemory,\n      context,\n      type: 'point',\n      contextMethod: context.addPointAnnotation\n    })\n    return context\n  }\n\n  addAnnotationExternal({\n    params,\n    pushToMemory,\n    context,\n    type,\n    contextMethod\n  }) {\n    const me = context\n    const w = me.w\n    const parent = w.globals.dom.baseEl.querySelector(\n      `.apexcharts-${type}-annotations`\n    )\n    const index = parent.childNodes.length + 1\n\n    const options = new Options()\n    const axesAnno = Object.assign(\n      {},\n      type === 'xaxis'\n        ? options.xAxisAnnotation\n        : type === 'yaxis'\n        ? options.yAxisAnnotation\n        : options.pointAnnotation\n    )\n\n    const anno = Utils.extend(axesAnno, params)\n\n    switch (type) {\n      case 'xaxis':\n        this.addXaxisAnnotation(anno, parent, index)\n        break\n      case 'yaxis':\n        this.addYaxisAnnotation(anno, parent, index)\n        break\n      case 'point':\n        this.addPointAnnotation(anno, parent, index)\n        break\n    }\n\n    // add background\n    let axesAnnoLabel = w.globals.dom.baseEl.querySelector(\n      `.apexcharts-${type}-annotations .apexcharts-${type}-annotation-label[rel='${index}']`\n    )\n    const elRect = this.helpers.addBackgroundToAnno(axesAnnoLabel, anno)\n    if (elRect) {\n      parent.insertBefore(elRect.node, axesAnnoLabel)\n    }\n\n    if (pushToMemory) {\n      w.globals.memory.methodsToExec.push({\n        context: me,\n        id: anno.id ? anno.id : Utils.randomId(),\n        method: contextMethod,\n        label: 'addAnnotation',\n        params\n      })\n    }\n\n    return context\n  }\n\n  clearAnnotations(ctx) {\n    const w = ctx.w\n    let annos = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations'\n    )\n\n    // annotations added externally should be cleared out too\n    w.globals.memory.methodsToExec.map((m, i) => {\n      if (m.label === 'addText' || m.label === 'addAnnotation') {\n        w.globals.memory.methodsToExec.splice(i, 1)\n      }\n    })\n\n    annos = Utils.listToArray(annos)\n\n    // delete the DOM elements\n    Array.prototype.forEach.call(annos, (a) => {\n      while (a.firstChild) {\n        a.removeChild(a.firstChild)\n      }\n    })\n  }\n\n  removeAnnotation(ctx, id) {\n    const w = ctx.w\n    let annos = w.globals.dom.baseEl.querySelectorAll(`.${id}`)\n\n    if (annos) {\n      w.globals.memory.methodsToExec.map((m, i) => {\n        if (m.id === id) {\n          w.globals.memory.methodsToExec.splice(i, 1)\n        }\n      })\n\n      Array.prototype.forEach.call(annos, (a) => {\n        a.parentElement.removeChild(a)\n      })\n    }\n  }\n}\n","import Graphics from './Graphics'\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts Fill Class for setting fill options of the paths.\n *\n * @module Fill\n **/\n\nclass Fill {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.opts = null\n    this.seriesIndex = 0\n  }\n\n  clippedImgArea(params) {\n    let w = this.w\n    let cnf = w.config\n\n    let svgW = parseInt(w.globals.gridWidth, 10)\n    let svgH = parseInt(w.globals.gridHeight, 10)\n\n    let size = svgW > svgH ? svgW : svgH\n\n    let fillImg = params.image\n\n    let imgWidth = 0\n    let imgHeight = 0\n    if (\n      typeof params.width === 'undefined' &&\n      typeof params.height === 'undefined'\n    ) {\n      if (\n        cnf.fill.image.width !== undefined &&\n        cnf.fill.image.height !== undefined\n      ) {\n        imgWidth = cnf.fill.image.width + 1\n        imgHeight = cnf.fill.image.height\n      } else {\n        imgWidth = size + 1\n        imgHeight = size\n      }\n    } else {\n      imgWidth = params.width\n      imgHeight = params.height\n    }\n\n    let elPattern = document.createElementNS(w.globals.SVGNS, 'pattern')\n\n    Graphics.setAttrs(elPattern, {\n      id: params.patternID,\n      patternUnits: params.patternUnits\n        ? params.patternUnits\n        : 'userSpaceOnUse',\n      width: imgWidth + 'px',\n      height: imgHeight + 'px'\n    })\n\n    let elImage = document.createElementNS(w.globals.SVGNS, 'image')\n    elPattern.appendChild(elImage)\n\n    elImage.setAttributeNS(window.SVG.xlink, 'href', fillImg)\n\n    Graphics.setAttrs(elImage, {\n      x: 0,\n      y: 0,\n      preserveAspectRatio: 'none',\n      width: imgWidth + 'px',\n      height: imgHeight + 'px'\n    })\n\n    elImage.style.opacity = params.opacity\n\n    w.globals.dom.elDefs.node.appendChild(elPattern)\n  }\n\n  getSeriesIndex(opts) {\n    const w = this.w\n\n    if (\n      ((w.config.chart.type === 'bar' ||\n        w.config.chart.type === 'rangeBar' ||\n        w.config.chart.type === 'gantt') &&\n        w.config.plotOptions.bar.distributed) ||\n      w.config.chart.type === 'heatmap' ||\n      w.config.chart.type === 'treemap'\n    ) {\n      this.seriesIndex = opts.seriesNumber\n    } else {\n      this.seriesIndex = opts.seriesNumber % w.globals.series.length\n    }\n\n    return this.seriesIndex\n  }\n\n  fillPath(opts) {\n    let w = this.w\n    this.opts = opts\n\n    let cnf = this.w.config\n    let pathFill\n\n    let patternFill, gradientFill\n\n    this.seriesIndex = this.getSeriesIndex(opts)\n\n    let fillColors = this.getFillColors()\n    let fillColor = fillColors[this.seriesIndex]\n\n    //override fillcolor if user inputted color with data\n    if (w.globals.seriesColors[this.seriesIndex] !== undefined) {\n      fillColor = w.globals.seriesColors[this.seriesIndex]\n    }\n\n    if (typeof fillColor === 'function') {\n      fillColor = fillColor({\n        seriesIndex: this.seriesIndex,\n        dataPointIndex: opts.dataPointIndex,\n        value: opts.value,\n        w\n      })\n    }\n    let fillType = this.getFillType(this.seriesIndex)\n    let fillOpacity = Array.isArray(cnf.fill.opacity)\n      ? cnf.fill.opacity[this.seriesIndex]\n      : cnf.fill.opacity\n\n    if (opts.color) {\n      fillColor = opts.color\n    }\n\n    let defaultColor = fillColor\n\n    if (fillColor.indexOf('rgb') === -1) {\n      if (fillColor.length < 9) {\n        // if the hex contains alpha and is of 9 digit, skip the opacity\n        defaultColor = Utils.hexToRgba(fillColor, fillOpacity)\n      }\n    } else {\n      if (fillColor.indexOf('rgba') > -1) {\n        fillOpacity = Utils.getOpacityFromRGBA(fillColor)\n      }\n    }\n    if (opts.opacity) fillOpacity = opts.opacity\n\n    if (fillType === 'pattern') {\n      patternFill = this.handlePatternFill(\n        patternFill,\n        fillColor,\n        fillOpacity,\n        defaultColor\n      )\n    }\n\n    if (fillType === 'gradient') {\n      gradientFill = this.handleGradientFill(\n        fillColor,\n        fillOpacity,\n        this.seriesIndex\n      )\n    }\n\n    if (fillType === 'image') {\n      let imgSrc = cnf.fill.image.src\n\n      let patternID = opts.patternID ? opts.patternID : ''\n      this.clippedImgArea({\n        opacity: fillOpacity,\n        image: Array.isArray(imgSrc)\n          ? opts.seriesNumber < imgSrc.length\n            ? imgSrc[opts.seriesNumber]\n            : imgSrc[0]\n          : imgSrc,\n        width: opts.width ? opts.width : undefined,\n        height: opts.height ? opts.height : undefined,\n        patternUnits: opts.patternUnits,\n        patternID: `pattern${w.globals.cuid}${opts.seriesNumber +\n          1}${patternID}`\n      })\n      pathFill = `url(#pattern${w.globals.cuid}${opts.seriesNumber +\n        1}${patternID})`\n    } else if (fillType === 'gradient') {\n      pathFill = gradientFill\n    } else if (fillType === 'pattern') {\n      pathFill = patternFill\n    } else {\n      pathFill = defaultColor\n    }\n\n    // override pattern/gradient if opts.solid is true\n    if (opts.solid) {\n      pathFill = defaultColor\n    }\n\n    return pathFill\n  }\n\n  getFillType(seriesIndex) {\n    const w = this.w\n\n    if (Array.isArray(w.config.fill.type)) {\n      return w.config.fill.type[seriesIndex]\n    } else {\n      return w.config.fill.type\n    }\n  }\n\n  getFillColors() {\n    const w = this.w\n    const cnf = w.config\n    const opts = this.opts\n\n    let fillColors = []\n\n    if (w.globals.comboCharts) {\n      if (w.config.series[this.seriesIndex].type === 'line') {\n        if (Array.isArray(w.globals.stroke.colors)) {\n          fillColors = w.globals.stroke.colors\n        } else {\n          fillColors.push(w.globals.stroke.colors)\n        }\n      } else {\n        if (Array.isArray(w.globals.fill.colors)) {\n          fillColors = w.globals.fill.colors\n        } else {\n          fillColors.push(w.globals.fill.colors)\n        }\n      }\n    } else {\n      if (cnf.chart.type === 'line') {\n        if (Array.isArray(w.globals.stroke.colors)) {\n          fillColors = w.globals.stroke.colors\n        } else {\n          fillColors.push(w.globals.stroke.colors)\n        }\n      } else {\n        if (Array.isArray(w.globals.fill.colors)) {\n          fillColors = w.globals.fill.colors\n        } else {\n          fillColors.push(w.globals.fill.colors)\n        }\n      }\n    }\n\n    // colors passed in arguments\n    if (typeof opts.fillColors !== 'undefined') {\n      fillColors = []\n      if (Array.isArray(opts.fillColors)) {\n        fillColors = opts.fillColors.slice()\n      } else {\n        fillColors.push(opts.fillColors)\n      }\n    }\n\n    return fillColors\n  }\n\n  handlePatternFill(patternFill, fillColor, fillOpacity, defaultColor) {\n    const cnf = this.w.config\n    const opts = this.opts\n    let graphics = new Graphics(this.ctx)\n\n    let patternStrokeWidth =\n      cnf.fill.pattern.strokeWidth === undefined\n        ? Array.isArray(cnf.stroke.width)\n          ? cnf.stroke.width[this.seriesIndex]\n          : cnf.stroke.width\n        : Array.isArray(cnf.fill.pattern.strokeWidth)\n        ? cnf.fill.pattern.strokeWidth[this.seriesIndex]\n        : cnf.fill.pattern.strokeWidth\n    let patternLineColor = fillColor\n\n    if (Array.isArray(cnf.fill.pattern.style)) {\n      if (typeof cnf.fill.pattern.style[opts.seriesNumber] !== 'undefined') {\n        let pf = graphics.drawPattern(\n          cnf.fill.pattern.style[opts.seriesNumber],\n          cnf.fill.pattern.width,\n          cnf.fill.pattern.height,\n          patternLineColor,\n          patternStrokeWidth,\n          fillOpacity\n        )\n        patternFill = pf\n      } else {\n        patternFill = defaultColor\n      }\n    } else {\n      patternFill = graphics.drawPattern(\n        cnf.fill.pattern.style,\n        cnf.fill.pattern.width,\n        cnf.fill.pattern.height,\n        patternLineColor,\n        patternStrokeWidth,\n        fillOpacity\n      )\n    }\n    return patternFill\n  }\n\n  handleGradientFill(fillColor, fillOpacity, i) {\n    const cnf = this.w.config\n    const opts = this.opts\n    let graphics = new Graphics(this.ctx)\n    let utils = new Utils()\n\n    let type = cnf.fill.gradient.type\n    let gradientFrom = fillColor\n    let gradientTo\n    let opacityFrom =\n      cnf.fill.gradient.opacityFrom === undefined\n        ? fillOpacity\n        : Array.isArray(cnf.fill.gradient.opacityFrom)\n        ? cnf.fill.gradient.opacityFrom[i]\n        : cnf.fill.gradient.opacityFrom\n\n    if (gradientFrom.indexOf('rgba') > -1) {\n      opacityFrom = Utils.getOpacityFromRGBA(gradientFrom)\n    }\n    let opacityTo =\n      cnf.fill.gradient.opacityTo === undefined\n        ? fillOpacity\n        : Array.isArray(cnf.fill.gradient.opacityTo)\n        ? cnf.fill.gradient.opacityTo[i]\n        : cnf.fill.gradient.opacityTo\n\n    if (\n      cnf.fill.gradient.gradientToColors === undefined ||\n      cnf.fill.gradient.gradientToColors.length === 0\n    ) {\n      if (cnf.fill.gradient.shade === 'dark') {\n        gradientTo = utils.shadeColor(\n          parseFloat(cnf.fill.gradient.shadeIntensity) * -1,\n          fillColor.indexOf('rgb') > -1 ? Utils.rgb2hex(fillColor) : fillColor\n        )\n      } else {\n        gradientTo = utils.shadeColor(\n          parseFloat(cnf.fill.gradient.shadeIntensity),\n          fillColor.indexOf('rgb') > -1 ? Utils.rgb2hex(fillColor) : fillColor\n        )\n      }\n    } else {\n      if (cnf.fill.gradient.gradientToColors[opts.seriesNumber]) {\n        const gToColor = cnf.fill.gradient.gradientToColors[opts.seriesNumber]\n        gradientTo = gToColor\n        if (gToColor.indexOf('rgba') > -1) {\n          opacityTo = Utils.getOpacityFromRGBA(gToColor)\n        }\n      } else {\n        gradientTo = fillColor\n      }\n    }\n\n    if (cnf.fill.gradient.inverseColors) {\n      let t = gradientFrom\n      gradientFrom = gradientTo\n      gradientTo = t\n    }\n\n    if (gradientFrom.indexOf('rgb') > -1) {\n      gradientFrom = Utils.rgb2hex(gradientFrom)\n    }\n    if (gradientTo.indexOf('rgb') > -1) {\n      gradientTo = Utils.rgb2hex(gradientTo)\n    }\n\n    return graphics.drawGradient(\n      type,\n      gradientFrom,\n      gradientTo,\n      opacityFrom,\n      opacityTo,\n      opts.size,\n      cnf.fill.gradient.stops,\n      cnf.fill.gradient.colorStops,\n      i\n    )\n  }\n}\n\nexport default Fill\n","import Filters from './Filters'\nimport Graphics from './Graphics'\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts Markers Class for drawing points on y values in axes charts.\n *\n * @module Markers\n **/\n\nexport default class Markers {\n  constructor(ctx, opts) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  setGlobalMarkerSize() {\n    const w = this.w\n\n    w.globals.markers.size = Array.isArray(w.config.markers.size)\n      ? w.config.markers.size\n      : [w.config.markers.size]\n\n    if (w.globals.markers.size.length > 0) {\n      if (w.globals.markers.size.length < w.globals.series.length + 1) {\n        for (let i = 0; i <= w.globals.series.length; i++) {\n          if (typeof w.globals.markers.size[i] === 'undefined') {\n            w.globals.markers.size.push(w.globals.markers.size[0])\n          }\n        }\n      }\n    } else {\n      w.globals.markers.size = w.config.series.map((s) => w.config.markers.size)\n    }\n  }\n\n  plotChartMarkers(pointsPos, seriesIndex, j, pSize, alwaysDrawMarker = false) {\n    let w = this.w\n\n    let i = seriesIndex\n    let p = pointsPos\n    let elPointsWrap = null\n\n    let graphics = new Graphics(this.ctx)\n\n    let point\n\n    if (w.globals.markers.size[seriesIndex] > 0 || alwaysDrawMarker) {\n      elPointsWrap = graphics.group({\n        class: alwaysDrawMarker ? '' : 'apexcharts-series-markers'\n      })\n\n      elPointsWrap.attr(\n        'clip-path',\n        `url(#gridRectMarkerMask${w.globals.cuid})`\n      )\n    }\n\n    if (Array.isArray(p.x)) {\n      for (let q = 0; q < p.x.length; q++) {\n        let dataPointIndex = j\n\n        // a small hack as we have 2 points for the first val to connect it\n        if (j === 1 && q === 0) dataPointIndex = 0\n        if (j === 1 && q === 1) dataPointIndex = 1\n\n        let PointClasses = 'apexcharts-marker'\n        if (\n          (w.config.chart.type === 'line' || w.config.chart.type === 'area') &&\n          !w.globals.comboCharts &&\n          !w.config.tooltip.intersect\n        ) {\n          PointClasses += ' no-pointer-events'\n        }\n\n        const shouldMarkerDraw = Array.isArray(w.config.markers.size)\n          ? w.globals.markers.size[seriesIndex] > 0\n          : w.config.markers.size > 0\n\n        if (shouldMarkerDraw || alwaysDrawMarker) {\n          if (Utils.isNumber(p.y[q])) {\n            PointClasses += ` w${Utils.randomId()}`\n          } else {\n            PointClasses = 'apexcharts-nullpoint'\n          }\n\n          let opts = this.getMarkerConfig(\n            PointClasses,\n            seriesIndex,\n            dataPointIndex\n          )\n\n          if (w.config.series[i].data[dataPointIndex]) {\n            if (w.config.series[i].data[dataPointIndex].fillColor) {\n              opts.pointFillColor =\n                w.config.series[i].data[dataPointIndex].fillColor\n            }\n\n            if (w.config.series[i].data[dataPointIndex].strokeColor) {\n              opts.pointStrokeColor =\n                w.config.series[i].data[dataPointIndex].strokeColor\n            }\n          }\n\n          if (pSize) {\n            opts.pSize = pSize\n          }\n          point = graphics.drawMarker(p.x[q], p.y[q], opts)\n\n          point.attr('rel', dataPointIndex)\n          point.attr('j', dataPointIndex)\n          point.attr('index', seriesIndex)\n          point.node.setAttribute('default-marker-size', opts.pSize)\n\n          const filters = new Filters(this.ctx)\n          filters.setSelectionFilter(point, seriesIndex, dataPointIndex)\n          this.addEvents(point)\n\n          if (elPointsWrap) {\n            elPointsWrap.add(point)\n          }\n        } else {\n          // dynamic array creation - multidimensional\n          if (typeof w.globals.pointsArray[seriesIndex] === 'undefined')\n            w.globals.pointsArray[seriesIndex] = []\n\n          w.globals.pointsArray[seriesIndex].push([p.x[q], p.y[q]])\n        }\n      }\n    }\n\n    return elPointsWrap\n  }\n\n  getMarkerConfig(cssClass, seriesIndex, dataPointIndex = null) {\n    const w = this.w\n    let pStyle = this.getMarkerStyle(seriesIndex)\n    let pSize = w.globals.markers.size[seriesIndex]\n\n    const m = w.config.markers\n\n    // discrete markers is an option where user can specify a particular marker with different shape, size and color\n\n    if (dataPointIndex !== null && m.discrete.length) {\n      m.discrete.map((marker) => {\n        if (\n          marker.seriesIndex === seriesIndex &&\n          marker.dataPointIndex === dataPointIndex\n        ) {\n          pStyle.pointStrokeColor = marker.strokeColor\n          pStyle.pointFillColor = marker.fillColor\n          pSize = marker.size\n          pStyle.pointShape = marker.shape\n        }\n      })\n    }\n\n    return {\n      pSize,\n      pRadius: m.radius,\n      width: Array.isArray(m.width) ? m.width[seriesIndex] : m.width,\n      height: Array.isArray(m.height) ? m.height[seriesIndex] : m.height,\n      pointStrokeWidth: Array.isArray(m.strokeWidth)\n        ? m.strokeWidth[seriesIndex]\n        : m.strokeWidth,\n      pointStrokeColor: pStyle.pointStrokeColor,\n      pointFillColor: pStyle.pointFillColor,\n      shape:\n        pStyle.pointShape ||\n        (Array.isArray(m.shape) ? m.shape[seriesIndex] : m.shape),\n      class: cssClass,\n      pointStrokeOpacity: Array.isArray(m.strokeOpacity)\n        ? m.strokeOpacity[seriesIndex]\n        : m.strokeOpacity,\n      pointStrokeDashArray: Array.isArray(m.strokeDashArray)\n        ? m.strokeDashArray[seriesIndex]\n        : m.strokeDashArray,\n      pointFillOpacity: Array.isArray(m.fillOpacity)\n        ? m.fillOpacity[seriesIndex]\n        : m.fillOpacity,\n      seriesIndex\n    }\n  }\n\n  addEvents(circle) {\n    const w = this.w\n\n    const graphics = new Graphics(this.ctx)\n    circle.node.addEventListener(\n      'mouseenter',\n      graphics.pathMouseEnter.bind(this.ctx, circle)\n    )\n    circle.node.addEventListener(\n      'mouseleave',\n      graphics.pathMouseLeave.bind(this.ctx, circle)\n    )\n\n    circle.node.addEventListener(\n      'mousedown',\n      graphics.pathMouseDown.bind(this.ctx, circle)\n    )\n\n    circle.node.addEventListener('click', w.config.markers.onClick)\n    circle.node.addEventListener('dblclick', w.config.markers.onDblClick)\n\n    circle.node.addEventListener(\n      'touchstart',\n      graphics.pathMouseDown.bind(this.ctx, circle),\n      { passive: true }\n    )\n  }\n\n  getMarkerStyle(seriesIndex) {\n    let w = this.w\n\n    let colors = w.globals.markers.colors\n    let strokeColors =\n      w.config.markers.strokeColor || w.config.markers.strokeColors\n\n    let pointStrokeColor = Array.isArray(strokeColors)\n      ? strokeColors[seriesIndex]\n      : strokeColors\n    let pointFillColor = Array.isArray(colors) ? colors[seriesIndex] : colors\n\n    return {\n      pointStrokeColor,\n      pointFillColor\n    }\n  }\n}\n","import Animations from '../modules/Animations'\nimport Fill from '../modules/Fill'\nimport Filters from '../modules/Filters'\nimport Graphics from '../modules/Graphics'\nimport Markers from '../modules/Markers'\n\n/**\n * ApexCharts Scatter Class.\n * This Class also handles bubbles chart as currently there is no major difference in drawing them,\n * @module Scatter\n **/\nexport default class Scatter {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.initialAnim = this.w.config.chart.animations.enabled\n    this.dynamicAnim =\n      this.initialAnim &&\n      this.w.config.chart.animations.dynamicAnimation.enabled\n  }\n\n  draw(elSeries, j, opts) {\n    let w = this.w\n\n    let graphics = new Graphics(this.ctx)\n\n    let realIndex = opts.realIndex\n    let pointsPos = opts.pointsPos\n    let zRatio = opts.zRatio\n    let elPointsMain = opts.elParent\n\n    let elPointsWrap = graphics.group({\n      class: `apexcharts-series-markers apexcharts-series-${w.config.chart.type}`\n    })\n\n    elPointsWrap.attr('clip-path', `url(#gridRectMarkerMask${w.globals.cuid})`)\n\n    if (Array.isArray(pointsPos.x)) {\n      for (let q = 0; q < pointsPos.x.length; q++) {\n        let dataPointIndex = j + 1\n        let shouldDraw = true\n\n        // a small hack as we have 2 points for the first val to connect it\n        if (j === 0 && q === 0) dataPointIndex = 0\n        if (j === 0 && q === 1) dataPointIndex = 1\n\n        let radius = 0\n        let finishRadius = w.globals.markers.size[realIndex]\n\n        if (zRatio !== Infinity) {\n          // means we have a bubble\n          finishRadius = w.globals.seriesZ[realIndex][dataPointIndex] / zRatio\n\n          const bubble = w.config.plotOptions.bubble\n          if (bubble.minBubbleRadius && finishRadius < bubble.minBubbleRadius) {\n            finishRadius = bubble.minBubbleRadius\n          }\n\n          if (bubble.maxBubbleRadius && finishRadius > bubble.maxBubbleRadius) {\n            finishRadius = bubble.maxBubbleRadius\n          }\n        }\n\n        if (!w.config.chart.animations.enabled) {\n          radius = finishRadius\n        }\n\n        let x = pointsPos.x[q]\n        let y = pointsPos.y[q]\n\n        radius = radius || 0\n\n        if (\n          y === null ||\n          typeof w.globals.series[realIndex][dataPointIndex] === 'undefined'\n        ) {\n          shouldDraw = false\n        }\n\n        if (shouldDraw) {\n          const point = this.drawPoint(\n            x,\n            y,\n            radius,\n            finishRadius,\n            realIndex,\n            dataPointIndex,\n            j\n          )\n          elPointsWrap.add(point)\n        }\n\n        elPointsMain.add(elPointsWrap)\n      }\n    }\n  }\n\n  drawPoint(x, y, radius, finishRadius, realIndex, dataPointIndex, j) {\n    const w = this.w\n\n    let i = realIndex\n    let anim = new Animations(this.ctx)\n    let filters = new Filters(this.ctx)\n    let fill = new Fill(this.ctx)\n    let markers = new Markers(this.ctx)\n    const graphics = new Graphics(this.ctx)\n\n    const markerConfig = markers.getMarkerConfig('apexcharts-marker', i)\n\n    let pathFillCircle = fill.fillPath({\n      seriesNumber: realIndex,\n      dataPointIndex,\n      patternUnits: 'objectBoundingBox',\n      value: w.globals.series[realIndex][j]\n    })\n\n    let el\n    if (markerConfig.shape === 'circle') {\n      el = graphics.drawCircle(radius)\n    } else if (\n      markerConfig.shape === 'square' ||\n      markerConfig.shape === 'rect'\n    ) {\n      el = graphics.drawRect(\n        0,\n        0,\n        markerConfig.width - markerConfig.pointStrokeWidth / 2,\n        markerConfig.height - markerConfig.pointStrokeWidth / 2,\n        markerConfig.pRadius\n      )\n    }\n\n    if (w.config.series[i].data[dataPointIndex]) {\n      if (w.config.series[i].data[dataPointIndex].fillColor) {\n        pathFillCircle = w.config.series[i].data[dataPointIndex].fillColor\n      }\n    }\n\n    el.attr({\n      x: x - markerConfig.width / 2 - markerConfig.pointStrokeWidth / 2,\n      y: y - markerConfig.height / 2 - markerConfig.pointStrokeWidth / 2,\n      cx: x,\n      cy: y,\n      fill: pathFillCircle,\n      'fill-opacity': markerConfig.pointFillOpacity,\n      stroke: markerConfig.pointStrokeColor,\n      r: finishRadius,\n      'stroke-width': markerConfig.pointStrokeWidth,\n      'stroke-dasharray': markerConfig.pointStrokeDashArray,\n      'stroke-opacity': markerConfig.pointStrokeOpacity\n    })\n\n    if (w.config.chart.dropShadow.enabled) {\n      const dropShadow = w.config.chart.dropShadow\n      filters.dropShadow(el, dropShadow, realIndex)\n    }\n\n    if (this.initialAnim && !w.globals.dataChanged && !w.globals.resized) {\n      let speed = w.config.chart.animations.speed\n\n      anim.animateMarker(\n        el,\n        0,\n        markerConfig.shape === 'circle'\n          ? finishRadius\n          : { width: markerConfig.width, height: markerConfig.height },\n        speed,\n        w.globals.easing,\n        () => {\n          window.setTimeout(() => {\n            anim.animationCompleted(el)\n          }, 100)\n        }\n      )\n    } else {\n      w.globals.animationEnded = true\n    }\n\n    if (w.globals.dataChanged && markerConfig.shape === 'circle') {\n      if (this.dynamicAnim) {\n        let speed = w.config.chart.animations.dynamicAnimation.speed\n        let prevX, prevY, prevR\n\n        let prevPathJ = null\n\n        prevPathJ =\n          w.globals.previousPaths[realIndex] &&\n          w.globals.previousPaths[realIndex][j]\n\n        if (typeof prevPathJ !== 'undefined' && prevPathJ !== null) {\n          // series containing less elements will ignore these values and revert to 0\n          prevX = prevPathJ.x\n          prevY = prevPathJ.y\n          prevR =\n            typeof prevPathJ.r !== 'undefined' ? prevPathJ.r : finishRadius\n        }\n\n        for (let cs = 0; cs < w.globals.collapsedSeries.length; cs++) {\n          if (w.globals.collapsedSeries[cs].index === realIndex) {\n            speed = 1\n            finishRadius = 0\n          }\n        }\n\n        if (x === 0 && y === 0) finishRadius = 0\n\n        anim.animateCircle(\n          el,\n          {\n            cx: prevX,\n            cy: prevY,\n            r: prevR\n          },\n          {\n            cx: x,\n            cy: y,\n            r: finishRadius\n          },\n          speed,\n          w.globals.easing\n        )\n      } else {\n        el.attr({\n          r: finishRadius\n        })\n      }\n    }\n\n    el.attr({\n      rel: dataPointIndex,\n      j: dataPointIndex,\n      index: realIndex,\n      'default-marker-size': finishRadius\n    })\n\n    filters.setSelectionFilter(el, realIndex, dataPointIndex)\n    markers.addEvents(el)\n\n    el.node.classList.add('apexcharts-marker')\n\n    return el\n  }\n\n  centerTextInBubble(y) {\n    let w = this.w\n    y = y + parseInt(w.config.dataLabels.style.fontSize, 10) / 4\n\n    return {\n      y\n    }\n  }\n}\n","import Scatter from './../charts/Scatter'\nimport Graphics from './Graphics'\nimport Filters from './Filters'\n\n/**\n * ApexCharts DataLabels Class for drawing dataLabels on Axes based Charts.\n *\n * @module DataLabels\n **/\n\nclass DataLabels {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  // When there are many datalabels to be printed, and some of them overlaps each other in the same series, this method will take care of that\n  // Also, when datalabels exceeds the drawable area and get clipped off, we need to adjust and move some pixels to make them visible again\n  dataLabelsCorrection(\n    x,\n    y,\n    val,\n    i,\n    dataPointIndex,\n    alwaysDrawDataLabel,\n    fontSize\n  ) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n    let drawnextLabel = false //\n\n    let textRects = graphics.getTextRects(val, fontSize)\n    let width = textRects.width\n    let height = textRects.height\n\n    if (y < 0) y = 0\n    if (y > w.globals.gridHeight + height) y = w.globals.gridHeight + height / 2\n\n    // first value in series, so push an empty array\n    if (typeof w.globals.dataLabelsRects[i] === 'undefined')\n      w.globals.dataLabelsRects[i] = []\n\n    // then start pushing actual rects in that sub-array\n    w.globals.dataLabelsRects[i].push({ x, y, width, height })\n\n    let len = w.globals.dataLabelsRects[i].length - 2\n    let lastDrawnIndex =\n      typeof w.globals.lastDrawnDataLabelsIndexes[i] !== 'undefined'\n        ? w.globals.lastDrawnDataLabelsIndexes[i][\n            w.globals.lastDrawnDataLabelsIndexes[i].length - 1\n          ]\n        : 0\n\n    if (typeof w.globals.dataLabelsRects[i][len] !== 'undefined') {\n      let lastDataLabelRect = w.globals.dataLabelsRects[i][lastDrawnIndex]\n      if (\n        // next label forward and x not intersecting\n        x > lastDataLabelRect.x + lastDataLabelRect.width + 2 ||\n        y > lastDataLabelRect.y + lastDataLabelRect.height + 2 ||\n        x + width < lastDataLabelRect.x // next label is going to be drawn backwards\n      ) {\n        // the 2 indexes don't override, so OK to draw next label\n        drawnextLabel = true\n      }\n    }\n\n    if (dataPointIndex === 0 || alwaysDrawDataLabel) {\n      drawnextLabel = true\n    }\n\n    return {\n      x,\n      y,\n      textRects,\n      drawnextLabel\n    }\n  }\n\n  drawDataLabel(pos, i, j, z = null, strokeWidth = 2) {\n    // this method handles line, area, bubble, scatter charts as those charts contains markers/points which have pre-defined x/y positions\n    // all other charts like radar / bars / heatmaps will define their own drawDataLabel routine\n    let w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    let dataLabelsConfig = w.config.dataLabels\n\n    let x = 0\n    let y = 0\n\n    let dataPointIndex = j\n\n    let elDataLabelsWrap = null\n\n    if (!dataLabelsConfig.enabled || !Array.isArray(pos.x)) {\n      return elDataLabelsWrap\n    }\n\n    elDataLabelsWrap = graphics.group({\n      class: 'apexcharts-data-labels'\n    })\n\n    for (let q = 0; q < pos.x.length; q++) {\n      x = pos.x[q] + dataLabelsConfig.offsetX\n      y = pos.y[q] + dataLabelsConfig.offsetY + strokeWidth\n\n      if (!isNaN(x)) {\n        // a small hack as we have 2 points for the first val to connect it\n        if (j === 1 && q === 0) dataPointIndex = 0\n        if (j === 1 && q === 1) dataPointIndex = 1\n\n        let val = w.globals.series[i][dataPointIndex]\n\n        let text = ''\n\n        const getText = (v) => {\n          return w.config.dataLabels.formatter(v, {\n            ctx: this.ctx,\n            seriesIndex: i,\n            dataPointIndex,\n            w\n          })\n        }\n\n        if (w.config.chart.type === 'bubble') {\n          val = w.globals.seriesZ[i][dataPointIndex]\n          text = getText(val)\n\n          y = pos.y[q]\n          const scatter = new Scatter(this.ctx)\n          let centerTextInBubbleCoords = scatter.centerTextInBubble(\n            y,\n            i,\n            dataPointIndex\n          )\n          y = centerTextInBubbleCoords.y\n        } else {\n          if (typeof val !== 'undefined') {\n            text = getText(val)\n          }\n        }\n\n        this.plotDataLabelsText({\n          x,\n          y,\n          text,\n          i,\n          j: dataPointIndex,\n          parent: elDataLabelsWrap,\n          offsetCorrection: true,\n          dataLabelsConfig: w.config.dataLabels\n        })\n      }\n    }\n\n    return elDataLabelsWrap\n  }\n\n  plotDataLabelsText(opts) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n    let {\n      x,\n      y,\n      i,\n      j,\n      text,\n      textAnchor,\n      fontSize,\n      parent,\n      dataLabelsConfig,\n      color,\n      alwaysDrawDataLabel,\n      offsetCorrection\n    } = opts\n\n    if (Array.isArray(w.config.dataLabels.enabledOnSeries)) {\n      if (w.config.dataLabels.enabledOnSeries.indexOf(i) < 0) {\n        return\n      }\n    }\n\n    let correctedLabels = {\n      x,\n      y,\n      drawnextLabel: true\n    }\n\n    if (offsetCorrection) {\n      correctedLabels = this.dataLabelsCorrection(\n        x,\n        y,\n        text,\n        i,\n        j,\n        alwaysDrawDataLabel,\n        parseInt(dataLabelsConfig.style.fontSize, 10)\n      )\n    }\n\n    // when zoomed, we don't need to correct labels offsets,\n    // but if normally, labels get cropped, correct them\n    if (!w.globals.zoomed) {\n      x = correctedLabels.x\n      y = correctedLabels.y\n    }\n\n    if (correctedLabels.textRects) {\n      // fixes #2264\n      if (\n        x < -10 - correctedLabels.textRects.width ||\n        x > w.globals.gridWidth + correctedLabels.textRects.width + 10\n      ) {\n        // datalabels fall outside drawing area, so draw a blank label\n        text = ''\n      }\n    }\n\n    let dataLabelColor = w.globals.dataLabels.style.colors[i]\n    if (\n      ((w.config.chart.type === 'bar' ||\n        w.config.chart.type === 'rangeBar' ||\n        w.config.chart.type === 'gantt') &&\n        w.config.plotOptions.bar.distributed) ||\n      w.config.dataLabels.distributed\n    ) {\n      dataLabelColor = w.globals.dataLabels.style.colors[j]\n    }\n    if (typeof dataLabelColor === 'function') {\n      dataLabelColor = dataLabelColor({\n        series: w.globals.series,\n        seriesIndex: i,\n        dataPointIndex: j,\n        w\n      })\n    }\n    if (color) {\n      dataLabelColor = color\n    }\n\n    let offX = dataLabelsConfig.offsetX\n    let offY = dataLabelsConfig.offsetY\n\n    if (\n      w.config.chart.type === 'bar' ||\n      w.config.chart.type === 'rangeBar' ||\n      w.config.chart.type === 'gantt'\n    ) {\n      // for certain chart types, we handle offsets while calculating datalabels pos\n      // why? because bars/column may have negative values and based on that\n      // offsets becomes reversed\n      offX = 0\n      offY = 0\n    }\n\n    if (correctedLabels.drawnextLabel) {\n      let dataLabelText = graphics.drawText({\n        width: 100,\n        height: parseInt(dataLabelsConfig.style.fontSize, 10),\n        x: x + offX,\n        y: y + offY,\n        foreColor: dataLabelColor,\n        textAnchor: textAnchor || dataLabelsConfig.textAnchor,\n        text,\n        fontSize: fontSize || dataLabelsConfig.style.fontSize,\n        fontFamily: dataLabelsConfig.style.fontFamily,\n        fontWeight: dataLabelsConfig.style.fontWeight || 'normal'\n      })\n\n      dataLabelText.attr({\n        class: 'apexcharts-datalabel',\n        cx: x,\n        cy: y\n      })\n\n      if (dataLabelsConfig.dropShadow.enabled) {\n        const textShadow = dataLabelsConfig.dropShadow\n        const filters = new Filters(this.ctx)\n        filters.dropShadow(dataLabelText, textShadow)\n      }\n\n      parent.add(dataLabelText)\n\n      if (typeof w.globals.lastDrawnDataLabelsIndexes[i] === 'undefined') {\n        w.globals.lastDrawnDataLabelsIndexes[i] = []\n      }\n\n      w.globals.lastDrawnDataLabelsIndexes[i].push(j)\n    }\n  }\n\n  addBackgroundToDataLabel(el, coords) {\n    const w = this.w\n\n    const bCnf = w.config.dataLabels.background\n\n    const paddingH = bCnf.padding\n    const paddingV = bCnf.padding / 2\n\n    const width = coords.width\n    const height = coords.height\n    const graphics = new Graphics(this.ctx)\n    const elRect = graphics.drawRect(\n      coords.x - paddingH,\n      coords.y - paddingV / 2,\n      width + paddingH * 2,\n      height + paddingV,\n      bCnf.borderRadius,\n      w.config.chart.background === 'transparent'\n        ? '#fff'\n        : w.config.chart.background,\n      bCnf.opacity,\n      bCnf.borderWidth,\n      bCnf.borderColor\n    )\n\n    if (bCnf.dropShadow.enabled) {\n      const filters = new Filters(this.ctx)\n      filters.dropShadow(elRect, bCnf.dropShadow)\n    }\n\n    return elRect\n  }\n\n  dataLabelsBackground() {\n    const w = this.w\n\n    if (w.config.chart.type === 'bubble') return\n\n    const elDataLabels = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-datalabels text'\n    )\n\n    for (let i = 0; i < elDataLabels.length; i++) {\n      const el = elDataLabels[i]\n      const coords = el.getBBox()\n      let elRect = null\n\n      if (coords.width && coords.height) {\n        elRect = this.addBackgroundToDataLabel(el, coords)\n      }\n      if (elRect) {\n        el.parentNode.insertBefore(elRect.node, el)\n        const background = el.getAttribute('fill')\n\n        const shouldAnim =\n          w.config.chart.animations.enabled &&\n          !w.globals.resized &&\n          !w.globals.dataChanged\n\n        if (shouldAnim) {\n          elRect.animate().attr({ fill: background })\n        } else {\n          elRect.attr({ fill: background })\n        }\n        el.setAttribute('fill', w.config.dataLabels.background.foreColor)\n      }\n    }\n  }\n\n  bringForward() {\n    const w = this.w\n    const elDataLabelsNodes = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-datalabels'\n    )\n\n    const elSeries = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-plot-series:last-child'\n    )\n\n    for (let i = 0; i < elDataLabelsNodes.length; i++) {\n      if (elSeries) {\n        elSeries.insertBefore(elDataLabelsNodes[i], elSeries.nextSibling)\n      }\n    }\n  }\n}\n\nexport default DataLabels\n","import Graphics from '../../../modules/Graphics'\nimport DataLabels from '../../../modules/DataLabels'\n\nexport default class BarDataLabels {\n  constructor(barCtx) {\n    this.w = barCtx.w\n    this.barCtx = barCtx\n  }\n  /** handleBarDataLabels is used to calculate the positions for the data-labels\n   * It also sets the element's data attr for bars and calls drawCalculatedBarDataLabels()\n   * After calculating, it also calls the function to draw data labels\n   * @memberof Bar\n   * @param {object} {barProps} most of the bar properties used throughout the bar\n   * drawing function\n   * @return {object} dataLabels node-element which you can append later\n   **/\n  handleBarDataLabels(opts) {\n    let {\n      x,\n      y,\n      y1,\n      y2,\n      i,\n      j,\n      realIndex,\n      series,\n      barHeight,\n      barWidth,\n      barYPosition,\n      visibleSeries,\n      renderedPath\n    } = opts\n    let w = this.w\n    let graphics = new Graphics(this.barCtx.ctx)\n\n    let strokeWidth = Array.isArray(this.barCtx.strokeWidth)\n      ? this.barCtx.strokeWidth[realIndex]\n      : this.barCtx.strokeWidth\n\n    let bcx = x + parseFloat(barWidth * visibleSeries)\n    let bcy = y + parseFloat(barHeight * visibleSeries)\n\n    if (w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n      bcx = x + parseFloat(barWidth * (visibleSeries + 1))\n      bcy = y + parseFloat(barHeight * (visibleSeries + 1)) - strokeWidth\n    }\n\n    let dataLabels = null\n    let dataLabelsX = x\n    let dataLabelsY = y\n    let dataLabelsPos = {}\n    let dataLabelsConfig = w.config.dataLabels\n    let barDataLabelsConfig = this.barCtx.barOptions.dataLabels\n\n    if (typeof barYPosition !== 'undefined' && this.barCtx.isTimelineBar) {\n      bcy = barYPosition\n      dataLabelsY = barYPosition\n    }\n\n    const offX = dataLabelsConfig.offsetX\n    const offY = dataLabelsConfig.offsetY\n\n    let textRects = {\n      width: 0,\n      height: 0\n    }\n    if (w.config.dataLabels.enabled) {\n      const yLabel = this.barCtx.series[i][j]\n\n      textRects = graphics.getTextRects(\n        w.globals.yLabelFormatters[0](yLabel),\n        parseFloat(dataLabelsConfig.style.fontSize)\n      )\n    }\n\n    const params = {\n      x,\n      y,\n      i,\n      j,\n      renderedPath,\n      bcx,\n      bcy,\n      barHeight,\n      barWidth,\n      textRects,\n      strokeWidth,\n      dataLabelsX,\n      dataLabelsY,\n      barDataLabelsConfig,\n      offX,\n      offY\n    }\n\n    if (this.barCtx.isHorizontal) {\n      dataLabelsPos = this.calculateBarsDataLabelsPosition(params)\n    } else {\n      dataLabelsPos = this.calculateColumnsDataLabelsPosition(params)\n    }\n\n    renderedPath.attr({\n      cy: dataLabelsPos.bcy,\n      cx: dataLabelsPos.bcx,\n      j,\n      val: series[i][j],\n      barHeight,\n      barWidth\n    })\n\n    dataLabels = this.drawCalculatedDataLabels({\n      x: dataLabelsPos.dataLabelsX,\n      y: dataLabelsPos.dataLabelsY,\n      val: this.barCtx.isTimelineBar ? [y1, y2] : series[i][j],\n      i: realIndex,\n      j,\n      barWidth,\n      barHeight,\n      textRects,\n      dataLabelsConfig\n    })\n\n    return dataLabels\n  }\n\n  calculateColumnsDataLabelsPosition(opts) {\n    const w = this.w\n    let {\n      i,\n      j,\n      y,\n      bcx,\n      barWidth,\n      barHeight,\n      textRects,\n      dataLabelsY,\n      barDataLabelsConfig,\n      strokeWidth,\n      offX,\n      offY\n    } = opts\n\n    let dataLabelsX\n    barHeight = Math.abs(barHeight)\n\n    let vertical =\n      w.config.plotOptions.bar.dataLabels.orientation === 'vertical'\n\n    bcx = bcx - strokeWidth / 2\n\n    let dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints\n    if (w.globals.isXNumeric) {\n      dataLabelsX = bcx - barWidth / 2 + offX\n    } else {\n      dataLabelsX = bcx - dataPointsDividedWidth + barWidth / 2 + offX\n    }\n\n    if (vertical) {\n      const offsetDLX = 2\n      dataLabelsX =\n        dataLabelsX + textRects.height / 2 - strokeWidth / 2 - offsetDLX\n    }\n\n    let valIsNegative = this.barCtx.series[i][j] < 0\n\n    let newY = y\n    if (this.barCtx.isReversed) {\n      newY = y - barHeight + (valIsNegative ? barHeight * 2 : 0)\n      y = y - barHeight\n    }\n\n    switch (barDataLabelsConfig.position) {\n      case 'center':\n        if (vertical) {\n          if (valIsNegative) {\n            dataLabelsY = newY + barHeight / 2 + offY\n          } else {\n            dataLabelsY = newY + barHeight / 2 - offY\n          }\n        } else {\n          if (valIsNegative) {\n            dataLabelsY = newY - barHeight / 2 + textRects.height / 2 + offY\n          } else {\n            dataLabelsY = newY + barHeight / 2 + textRects.height / 2 - offY\n          }\n        }\n        break\n      case 'bottom':\n        if (vertical) {\n          if (valIsNegative) {\n            dataLabelsY = newY + barHeight + offY\n          } else {\n            dataLabelsY = newY + barHeight - offY\n          }\n        } else {\n          if (valIsNegative) {\n            dataLabelsY =\n              newY - barHeight + textRects.height + strokeWidth + offY\n          } else {\n            dataLabelsY =\n              newY + barHeight - textRects.height / 2 + strokeWidth - offY\n          }\n        }\n        break\n      case 'top':\n        if (vertical) {\n          if (valIsNegative) {\n            dataLabelsY = newY + offY\n          } else {\n            dataLabelsY = newY - offY\n          }\n        } else {\n          if (valIsNegative) {\n            dataLabelsY = newY - textRects.height / 2 - offY\n          } else {\n            dataLabelsY = newY + textRects.height + offY\n          }\n        }\n        break\n    }\n\n    if (!w.config.chart.stacked) {\n      if (dataLabelsY < 0) {\n        dataLabelsY = 0 + strokeWidth\n      } else if (dataLabelsY + textRects.height / 3 > w.globals.gridHeight) {\n        dataLabelsY = w.globals.gridHeight - strokeWidth\n      }\n    }\n\n    return {\n      bcx,\n      bcy: y,\n      dataLabelsX,\n      dataLabelsY\n    }\n  }\n\n  calculateBarsDataLabelsPosition(opts) {\n    const w = this.w\n    let {\n      x,\n      i,\n      j,\n      bcy,\n      barHeight,\n      barWidth,\n      textRects,\n      dataLabelsX,\n      strokeWidth,\n      barDataLabelsConfig,\n      offX,\n      offY\n    } = opts\n\n    let dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints\n\n    barWidth = Math.abs(barWidth)\n\n    let dataLabelsY =\n      bcy -\n      (this.barCtx.isTimelineBar ? 0 : dataPointsDividedHeight) +\n      barHeight / 2 +\n      textRects.height / 2 +\n      offY -\n      3\n\n    let valIsNegative = this.barCtx.series[i][j] < 0\n\n    let newX = x\n    if (this.barCtx.isReversed) {\n      newX = x + barWidth - (valIsNegative ? barWidth * 2 : 0)\n      x = w.globals.gridWidth - barWidth\n    }\n\n    switch (barDataLabelsConfig.position) {\n      case 'center':\n        if (valIsNegative) {\n          dataLabelsX = newX + barWidth / 2 - offX\n        } else {\n          dataLabelsX =\n            Math.max(textRects.width / 2, newX - barWidth / 2) + offX\n        }\n        break\n      case 'bottom':\n        if (valIsNegative) {\n          dataLabelsX =\n            newX +\n            barWidth -\n            strokeWidth -\n            Math.round(textRects.width / 2) -\n            offX\n        } else {\n          dataLabelsX =\n            newX -\n            barWidth +\n            strokeWidth +\n            Math.round(textRects.width / 2) +\n            offX\n        }\n        break\n      case 'top':\n        if (valIsNegative) {\n          dataLabelsX =\n            newX - strokeWidth + Math.round(textRects.width / 2) - offX\n        } else {\n          dataLabelsX =\n            newX - strokeWidth - Math.round(textRects.width / 2) + offX\n        }\n        break\n    }\n\n    if (!w.config.chart.stacked) {\n      if (dataLabelsX < 0) {\n        dataLabelsX = dataLabelsX + textRects.width + strokeWidth\n      } else if (dataLabelsX + textRects.width / 2 > w.globals.gridWidth) {\n        dataLabelsX = w.globals.gridWidth - textRects.width - strokeWidth\n      }\n    }\n\n    return {\n      bcx: x,\n      bcy,\n      dataLabelsX,\n      dataLabelsY\n    }\n  }\n\n  drawCalculatedDataLabels({\n    x,\n    y,\n    val,\n    i,\n    j,\n    textRects,\n    barHeight,\n    barWidth,\n    dataLabelsConfig\n  }) {\n    const w = this.w\n    let rotate = 'rotate(0)'\n    if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical')\n      rotate = `rotate(-90, ${x}, ${y})`\n\n    const dataLabels = new DataLabels(this.barCtx.ctx)\n    const graphics = new Graphics(this.barCtx.ctx)\n    const formatter = dataLabelsConfig.formatter\n\n    let elDataLabelsWrap = null\n\n    const isSeriesNotCollapsed =\n      w.globals.collapsedSeriesIndices.indexOf(i) > -1\n\n    if (dataLabelsConfig.enabled && !isSeriesNotCollapsed) {\n      elDataLabelsWrap = graphics.group({\n        class: 'apexcharts-data-labels',\n        transform: rotate\n      })\n\n      let text = ''\n      if (typeof val !== 'undefined') {\n        text = formatter(val, {\n          seriesIndex: i,\n          dataPointIndex: j,\n          w\n        })\n      }\n\n      let valIsNegative = w.globals.series[i][j] < 0\n      let position = w.config.plotOptions.bar.dataLabels.position\n      if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical') {\n        if (position === 'top') {\n          if (valIsNegative) dataLabelsConfig.textAnchor = 'end'\n          else dataLabelsConfig.textAnchor = 'start'\n        }\n        if (position === 'center') {\n          dataLabelsConfig.textAnchor = 'middle'\n        }\n        if (position === 'bottom') {\n          if (valIsNegative) dataLabelsConfig.textAnchor = 'end'\n          else dataLabelsConfig.textAnchor = 'start'\n        }\n      }\n\n      if (\n        this.barCtx.isTimelineBar &&\n        this.barCtx.barOptions.dataLabels.hideOverflowingLabels\n      ) {\n        // hide the datalabel if it cannot fit into the rect\n        const txRect = graphics.getTextRects(\n          text,\n          parseFloat(dataLabelsConfig.style.fontSize)\n        )\n        if (barWidth < txRect.width) {\n          text = ''\n        }\n      }\n\n      if (\n        w.config.chart.stacked &&\n        this.barCtx.barOptions.dataLabels.hideOverflowingLabels\n      ) {\n        // if there is not enough space to draw the label in the bar/column rect, check hideOverflowingLabels property to prevent overflowing on wrong rect\n        // Note: This issue is only seen in stacked charts\n        if (this.barCtx.isHorizontal) {\n          // FIXED: Don't always hide the stacked negative side label\n          // A negative value will result in a negative bar width\n          // Only hide the text when the width is smaller (a higher negative number) than the negative bar width.\n          if (\n            (barWidth > 0 && textRects.width / 1.6 > barWidth) ||\n            (barWidth < 0 && textRects.width / 1.6 < barWidth)\n          ) {\n            text = ''\n          }\n        } else {\n          if (textRects.height / 1.6 > barHeight) {\n            text = ''\n          }\n        }\n      }\n\n      let modifiedDataLabelsConfig = {\n        ...dataLabelsConfig\n      }\n      if (this.barCtx.isHorizontal) {\n        if (val < 0) {\n          if (dataLabelsConfig.textAnchor === 'start') {\n            modifiedDataLabelsConfig.textAnchor = 'end'\n          } else if (dataLabelsConfig.textAnchor === 'end') {\n            modifiedDataLabelsConfig.textAnchor = 'start'\n          }\n        }\n      }\n\n      dataLabels.plotDataLabelsText({\n        x,\n        y,\n        text,\n        i,\n        j,\n        parent: elDataLabelsWrap,\n        dataLabelsConfig: modifiedDataLabelsConfig,\n        alwaysDrawDataLabel: true,\n        offsetCorrection: true\n      })\n    }\n\n    return elDataLabelsWrap\n  }\n}\n","import Graphics from './Graphics'\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts Series Class for interaction with the Series of the chart.\n *\n * @module Series\n **/\n\nexport default class Series {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.legendInactiveClass = 'legend-mouseover-inactive'\n  }\n\n  getAllSeriesEls() {\n    return this.w.globals.dom.baseEl.getElementsByClassName(`apexcharts-series`)\n  }\n\n  getSeriesByName(seriesName) {\n    return this.w.globals.dom.baseEl.querySelector(\n      `.apexcharts-inner .apexcharts-series[seriesName='${Utils.escapeString(\n        seriesName\n      )}']`\n    )\n  }\n\n  isSeriesHidden(seriesName) {\n    const targetElement = this.getSeriesByName(seriesName)\n    let realIndex = parseInt(targetElement.getAttribute('data:realIndex'), 10)\n    let isHidden = targetElement.classList.contains(\n      'apexcharts-series-collapsed'\n    )\n\n    return { isHidden, realIndex }\n  }\n\n  addCollapsedClassToSeries(elSeries, index) {\n    const w = this.w\n    function iterateOnAllCollapsedSeries(series) {\n      for (let cs = 0; cs < series.length; cs++) {\n        if (series[cs].index === index) {\n          elSeries.node.classList.add('apexcharts-series-collapsed')\n        }\n      }\n    }\n\n    iterateOnAllCollapsedSeries(w.globals.collapsedSeries)\n    iterateOnAllCollapsedSeries(w.globals.ancillaryCollapsedSeries)\n  }\n\n  toggleSeries(seriesName) {\n    let isSeriesHidden = this.isSeriesHidden(seriesName)\n\n    this.ctx.legend.legendHelpers.toggleDataSeries(\n      isSeriesHidden.realIndex,\n      isSeriesHidden.isHidden\n    )\n\n    return isSeriesHidden.isHidden\n  }\n\n  showSeries(seriesName) {\n    let isSeriesHidden = this.isSeriesHidden(seriesName)\n\n    if (isSeriesHidden.isHidden) {\n      this.ctx.legend.legendHelpers.toggleDataSeries(\n        isSeriesHidden.realIndex,\n        true\n      )\n    }\n  }\n\n  hideSeries(seriesName) {\n    let isSeriesHidden = this.isSeriesHidden(seriesName)\n\n    if (!isSeriesHidden.isHidden) {\n      this.ctx.legend.legendHelpers.toggleDataSeries(\n        isSeriesHidden.realIndex,\n        false\n      )\n    }\n  }\n\n  resetSeries(\n    shouldUpdateChart = true,\n    shouldResetZoom = true,\n    shouldResetCollapsed = true\n  ) {\n    const w = this.w\n\n    let series = Utils.clone(w.globals.initialSeries)\n\n    w.globals.previousPaths = []\n\n    if (shouldResetCollapsed) {\n      w.globals.collapsedSeries = []\n      w.globals.ancillaryCollapsedSeries = []\n      w.globals.collapsedSeriesIndices = []\n      w.globals.ancillaryCollapsedSeriesIndices = []\n    } else {\n      series = this.emptyCollapsedSeries(series)\n    }\n\n    w.config.series = series\n\n    if (shouldUpdateChart) {\n      if (shouldResetZoom) {\n        w.globals.zoomed = false\n        this.ctx.updateHelpers.revertDefaultAxisMinMax()\n      }\n      this.ctx.updateHelpers._updateSeries(\n        series,\n        w.config.chart.animations.dynamicAnimation.enabled\n      )\n    }\n  }\n\n  emptyCollapsedSeries(series) {\n    const w = this.w\n    for (let i = 0; i < series.length; i++) {\n      if (w.globals.collapsedSeriesIndices.indexOf(i) > -1) {\n        series[i].data = []\n      }\n    }\n    return series\n  }\n  toggleSeriesOnHover(e, targetElement) {\n    const w = this.w\n\n    let allSeriesEls = w.globals.dom.baseEl.querySelectorAll(\n      `.apexcharts-series, .apexcharts-datalabels`\n    )\n\n    if (e.type === 'mousemove') {\n      let seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1\n\n      let seriesEl = null\n      let dataLabelEl = null\n      if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n        if (w.globals.axisCharts) {\n          seriesEl = w.globals.dom.baseEl.querySelector(\n            `.apexcharts-series[data\\\\:realIndex='${seriesCnt}']`\n          )\n          dataLabelEl = w.globals.dom.baseEl.querySelector(\n            `.apexcharts-datalabels[data\\\\:realIndex='${seriesCnt}']`\n          )\n        } else {\n          seriesEl = w.globals.dom.baseEl.querySelector(\n            `.apexcharts-series[rel='${seriesCnt + 1}']`\n          )\n        }\n      } else {\n        seriesEl = w.globals.dom.baseEl.querySelector(\n          `.apexcharts-series[rel='${seriesCnt + 1}'] path`\n        )\n      }\n\n      for (let se = 0; se < allSeriesEls.length; se++) {\n        allSeriesEls[se].classList.add(this.legendInactiveClass)\n      }\n\n      if (seriesEl !== null) {\n        if (!w.globals.axisCharts) {\n          seriesEl.parentNode.classList.remove(this.legendInactiveClass)\n        }\n        seriesEl.classList.remove(this.legendInactiveClass)\n\n        if (dataLabelEl !== null) {\n          dataLabelEl.classList.remove(this.legendInactiveClass)\n        }\n      }\n    } else if (e.type === 'mouseout') {\n      for (let se = 0; se < allSeriesEls.length; se++) {\n        allSeriesEls[se].classList.remove(this.legendInactiveClass)\n      }\n    }\n  }\n\n  highlightRangeInSeries(e, targetElement) {\n    const w = this.w\n    const allHeatMapElements = w.globals.dom.baseEl.getElementsByClassName(\n      'apexcharts-heatmap-rect'\n    )\n\n    const activeInactive = (action) => {\n      for (let i = 0; i < allHeatMapElements.length; i++) {\n        allHeatMapElements[i].classList[action](this.legendInactiveClass)\n      }\n    }\n\n    const removeInactiveClassFromHoveredRange = (range) => {\n      for (let i = 0; i < allHeatMapElements.length; i++) {\n        const val = parseInt(allHeatMapElements[i].getAttribute('val'), 10)\n        if (val >= range.from && val <= range.to) {\n          allHeatMapElements[i].classList.remove(this.legendInactiveClass)\n        }\n      }\n    }\n\n    if (e.type === 'mousemove') {\n      let seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1\n      activeInactive('add')\n\n      const range = w.config.plotOptions.heatmap.colorScale.ranges[seriesCnt]\n\n      removeInactiveClassFromHoveredRange(range)\n    } else if (e.type === 'mouseout') {\n      activeInactive('remove')\n    }\n  }\n\n  getActiveConfigSeriesIndex(ignoreBars = false, order = 'asc') {\n    const w = this.w\n    let activeIndex = 0\n\n    if (w.config.series.length > 1) {\n      // active series flag is required to know if user has not deactivated via legend click\n      let activeSeriesIndex = w.config.series.map((s, index) => {\n        let hasBars = false\n        if (ignoreBars) {\n          hasBars =\n            w.config.series[index].type === 'bar' ||\n            w.config.series[index].type === 'column'\n        }\n        return s.data && s.data.length > 0 && !hasBars ? index : -1\n      })\n\n      for (\n        let a = order === 'asc' ? 0 : activeSeriesIndex.length - 1;\n        order === 'asc' ? a < activeSeriesIndex.length : a >= 0;\n        order === 'asc' ? a++ : a--\n      ) {\n        if (activeSeriesIndex[a] !== -1) {\n          activeIndex = activeSeriesIndex[a]\n          break\n        }\n      }\n    }\n\n    return activeIndex\n  }\n\n  getPreviousPaths() {\n    let w = this.w\n\n    w.globals.previousPaths = []\n\n    function pushPaths(seriesEls, i, type) {\n      let paths = seriesEls[i].childNodes\n      let dArr = {\n        type,\n        paths: [],\n        realIndex: seriesEls[i].getAttribute('data:realIndex')\n      }\n\n      for (let j = 0; j < paths.length; j++) {\n        if (paths[j].hasAttribute('pathTo')) {\n          let d = paths[j].getAttribute('pathTo')\n          dArr.paths.push({\n            d\n          })\n        }\n      }\n\n      w.globals.previousPaths.push(dArr)\n    }\n\n    const getPaths = (chartType) => {\n      return w.globals.dom.baseEl.querySelectorAll(\n        `.apexcharts-${chartType}-series .apexcharts-series`\n      )\n    }\n\n    const chartTypes = [\n      'line',\n      'area',\n      'bar',\n      'rangebar',\n      'candlestick',\n      'radar',\n      'gantt'\n    ]\n    chartTypes.forEach((type) => {\n      const paths = getPaths(type)\n      for (let p = 0; p < paths.length; p++) {\n        pushPaths(paths, p, type)\n      }\n    })\n\n    this.handlePrevBubbleScatterPaths('bubble')\n    this.handlePrevBubbleScatterPaths('scatter')\n\n    let heatTreeSeries = w.globals.dom.baseEl.querySelectorAll(\n      `.apexcharts-${w.config.chart.type} .apexcharts-series`\n    )\n\n    if (heatTreeSeries.length > 0) {\n      for (let h = 0; h < heatTreeSeries.length; h++) {\n        let seriesEls = w.globals.dom.baseEl.querySelectorAll(\n          `.apexcharts-${w.config.chart.type} .apexcharts-series[data\\\\:realIndex='${h}'] rect`\n        )\n\n        let dArr = []\n\n        for (let i = 0; i < seriesEls.length; i++) {\n          const getAttr = (x) => {\n            return seriesEls[i].getAttribute(x)\n          }\n          const rect = {\n            x: parseFloat(getAttr('x')),\n            y: parseFloat(getAttr('y')),\n            width: parseFloat(getAttr('width')),\n            height: parseFloat(getAttr('height'))\n          }\n          dArr.push({\n            rect,\n            color: seriesEls[i].getAttribute('color')\n          })\n        }\n        w.globals.previousPaths.push(dArr)\n      }\n    }\n\n    if (!w.globals.axisCharts) {\n      // for non-axis charts (i.e., circular charts, pathFrom is not usable. We need whole series)\n      w.globals.previousPaths = w.globals.series\n    }\n  }\n\n  handlePrevBubbleScatterPaths(type) {\n    const w = this.w\n    let paths = w.globals.dom.baseEl.querySelectorAll(\n      `.apexcharts-${type}-series .apexcharts-series`\n    )\n    if (paths.length > 0) {\n      for (let s = 0; s < paths.length; s++) {\n        let seriesEls = w.globals.dom.baseEl.querySelectorAll(\n          `.apexcharts-${type}-series .apexcharts-series[data\\\\:realIndex='${s}'] circle`\n        )\n        let dArr = []\n\n        for (let i = 0; i < seriesEls.length; i++) {\n          dArr.push({\n            x: seriesEls[i].getAttribute('cx'),\n            y: seriesEls[i].getAttribute('cy'),\n            r: seriesEls[i].getAttribute('r')\n          })\n        }\n        w.globals.previousPaths.push(dArr)\n      }\n    }\n  }\n\n  clearPreviousPaths() {\n    const w = this.w\n    w.globals.previousPaths = []\n    w.globals.allSeriesCollapsed = false\n  }\n\n  handleNoData() {\n    const w = this.w\n    const me = this\n\n    const noDataOpts = w.config.noData\n    const graphics = new Graphics(me.ctx)\n\n    let x = w.globals.svgWidth / 2\n    let y = w.globals.svgHeight / 2\n    let textAnchor = 'middle'\n\n    w.globals.noData = true\n    w.globals.animationEnded = true\n\n    if (noDataOpts.align === 'left') {\n      x = 10\n      textAnchor = 'start'\n    } else if (noDataOpts.align === 'right') {\n      x = w.globals.svgWidth - 10\n      textAnchor = 'end'\n    }\n\n    if (noDataOpts.verticalAlign === 'top') {\n      y = 50\n    } else if (noDataOpts.verticalAlign === 'bottom') {\n      y = w.globals.svgHeight - 50\n    }\n\n    x = x + noDataOpts.offsetX\n    y = y + parseInt(noDataOpts.style.fontSize, 10) + 2 + noDataOpts.offsetY\n\n    if (noDataOpts.text !== undefined && noDataOpts.text !== '') {\n      let titleText = graphics.drawText({\n        x,\n        y,\n        text: noDataOpts.text,\n        textAnchor,\n        fontSize: noDataOpts.style.fontSize,\n        fontFamily: noDataOpts.style.fontFamily,\n        foreColor: noDataOpts.style.color,\n        opacity: 1,\n        class: 'apexcharts-text-nodata'\n      })\n\n      w.globals.dom.Paper.add(titleText)\n    }\n  }\n\n  // When user clicks on legends, the collapsed series is filled with [0,0,0,...,0]\n  // This is because we don't want to alter the series' length as it is used at many places\n  setNullSeriesToZeroValues(series) {\n    let w = this.w\n    for (let sl = 0; sl < series.length; sl++) {\n      if (series[sl].length === 0) {\n        for (let j = 0; j < series[w.globals.maxValsInArrayIndex].length; j++) {\n          series[sl].push(0)\n        }\n      }\n    }\n    return series\n  }\n\n  hasAllSeriesEqualX() {\n    let equalLen = true\n    const w = this.w\n\n    const filteredSerX = this.filteredSeriesX()\n\n    for (let i = 0; i < filteredSerX.length - 1; i++) {\n      if (filteredSerX[i][0] !== filteredSerX[i + 1][0]) {\n        equalLen = false\n        break\n      }\n    }\n\n    w.globals.allSeriesHasEqualX = equalLen\n\n    return equalLen\n  }\n\n  filteredSeriesX() {\n    const w = this.w\n\n    const filteredSeriesX = w.globals.seriesX.map((ser) =>\n      ser.length > 0 ? ser : []\n    )\n\n    return filteredSeriesX\n  }\n}\n","import Fill from '../../../modules/Fill'\nimport Graphics from '../../../modules/Graphics'\nimport Series from '../../../modules/Series'\n\nexport default class Helpers {\n  constructor(barCtx) {\n    this.w = barCtx.w\n    this.barCtx = barCtx\n  }\n\n  initVariables(series) {\n    const w = this.w\n    this.barCtx.series = series\n    this.barCtx.totalItems = 0\n    this.barCtx.seriesLen = 0\n    this.barCtx.visibleI = -1 // visible Series\n    this.barCtx.visibleItems = 1 // number of visible bars after user zoomed in/out\n\n    for (let sl = 0; sl < series.length; sl++) {\n      if (series[sl].length > 0) {\n        this.barCtx.seriesLen = this.barCtx.seriesLen + 1\n        this.barCtx.totalItems += series[sl].length\n      }\n      if (w.globals.isXNumeric) {\n        // get max visible items\n        for (let j = 0; j < series[sl].length; j++) {\n          if (\n            w.globals.seriesX[sl][j] > w.globals.minX &&\n            w.globals.seriesX[sl][j] < w.globals.maxX\n          ) {\n            this.barCtx.visibleItems++\n          }\n        }\n      } else {\n        this.barCtx.visibleItems = w.globals.dataPoints\n      }\n    }\n\n    if (this.barCtx.seriesLen === 0) {\n      // A small adjustment when combo charts are used\n      this.barCtx.seriesLen = 1\n    }\n    this.barCtx.zeroSerieses = []\n    this.barCtx.radiusOnSeriesNumber = series.length - 1 // which series to draw ending shape on\n\n    if (!w.globals.comboCharts) {\n      this.checkZeroSeries({ series })\n    }\n  }\n\n  initialPositions() {\n    let w = this.w\n    let x, y, yDivision, xDivision, barHeight, barWidth, zeroH, zeroW\n\n    let dataPoints = w.globals.dataPoints\n    if (this.barCtx.isTimelineBar) {\n      // timeline rangebar chart\n      dataPoints = w.globals.labels.length\n    }\n\n    let seriesLen = this.barCtx.seriesLen\n    if (w.config.plotOptions.bar.rangeBarGroupRows) {\n      seriesLen = 1\n    }\n\n    if (this.barCtx.isHorizontal) {\n      // height divided into equal parts\n      yDivision = w.globals.gridHeight / dataPoints\n      barHeight = yDivision / seriesLen\n\n      if (w.globals.isXNumeric) {\n        yDivision = w.globals.gridHeight / this.barCtx.totalItems\n        barHeight = yDivision / this.barCtx.seriesLen\n      }\n\n      barHeight =\n        (barHeight * parseInt(this.barCtx.barOptions.barHeight, 10)) / 100\n\n      zeroW =\n        this.barCtx.baseLineInvertedY +\n        w.globals.padHorizontal +\n        (this.barCtx.isReversed ? w.globals.gridWidth : 0) -\n        (this.barCtx.isReversed ? this.barCtx.baseLineInvertedY * 2 : 0)\n\n      y = (yDivision - barHeight * this.barCtx.seriesLen) / 2\n    } else {\n      // width divided into equal parts\n      xDivision = w.globals.gridWidth / this.barCtx.visibleItems\n      if (w.config.xaxis.convertedCatToNumeric) {\n        xDivision = w.globals.gridWidth / w.globals.dataPoints\n      }\n      barWidth =\n        ((xDivision / this.barCtx.seriesLen) *\n          parseInt(this.barCtx.barOptions.columnWidth, 10)) /\n        100\n\n      if (w.globals.isXNumeric) {\n        // max barwidth should be equal to minXDiff to avoid overlap\n        let xRatio = this.barCtx.xRatio\n        if (w.config.xaxis.convertedCatToNumeric) {\n          xRatio = this.barCtx.initialXRatio\n        }\n        if (\n          w.globals.minXDiff &&\n          w.globals.minXDiff !== 0.5 &&\n          w.globals.minXDiff / xRatio > 0\n        ) {\n          xDivision = w.globals.minXDiff / xRatio\n        }\n\n        barWidth =\n          ((xDivision / this.barCtx.seriesLen) *\n            parseInt(this.barCtx.barOptions.columnWidth, 10)) /\n          100\n\n        if (barWidth < 1) {\n          barWidth = 1\n        }\n      }\n\n      zeroH =\n        w.globals.gridHeight -\n        this.barCtx.baseLineY[this.barCtx.yaxisIndex] -\n        (this.barCtx.isReversed ? w.globals.gridHeight : 0) +\n        (this.barCtx.isReversed\n          ? this.barCtx.baseLineY[this.barCtx.yaxisIndex] * 2\n          : 0)\n\n      x =\n        w.globals.padHorizontal +\n        (xDivision - barWidth * this.barCtx.seriesLen) / 2\n    }\n\n    return {\n      x,\n      y,\n      yDivision,\n      xDivision,\n      barHeight,\n      barWidth,\n      zeroH,\n      zeroW\n    }\n  }\n\n  getPathFillColor(series, i, j, realIndex) {\n    const w = this.w\n    let fill = new Fill(this.barCtx.ctx)\n\n    let fillColor = null\n    let seriesNumber = this.barCtx.barOptions.distributed ? j : i\n\n    if (this.barCtx.barOptions.colors.ranges.length > 0) {\n      const colorRange = this.barCtx.barOptions.colors.ranges\n      colorRange.map((range) => {\n        if (series[i][j] >= range.from && series[i][j] <= range.to) {\n          fillColor = range.color\n        }\n      })\n    }\n\n    if (w.config.series[i].data[j] && w.config.series[i].data[j].fillColor) {\n      fillColor = w.config.series[i].data[j].fillColor\n    }\n\n    let pathFill = fill.fillPath({\n      seriesNumber: this.barCtx.barOptions.distributed\n        ? seriesNumber\n        : realIndex,\n      dataPointIndex: j,\n      color: fillColor,\n      value: series[i][j]\n    })\n\n    return pathFill\n  }\n\n  getStrokeWidth(i, j, realIndex) {\n    let strokeWidth = 0\n    const w = this.w\n\n    if (\n      typeof this.barCtx.series[i][j] === 'undefined' ||\n      this.barCtx.series[i][j] === null\n    ) {\n      this.barCtx.isNullValue = true\n    } else {\n      this.barCtx.isNullValue = false\n    }\n    if (w.config.stroke.show) {\n      if (!this.barCtx.isNullValue) {\n        strokeWidth = Array.isArray(this.barCtx.strokeWidth)\n          ? this.barCtx.strokeWidth[realIndex]\n          : this.barCtx.strokeWidth\n      }\n    }\n    return strokeWidth\n  }\n\n  barBackground({ j, i, x1, x2, y1, y2, elSeries }) {\n    const w = this.w\n    const graphics = new Graphics(this.barCtx.ctx)\n\n    const sr = new Series(this.barCtx.ctx)\n    let activeSeriesIndex = sr.getActiveConfigSeriesIndex()\n\n    if (\n      this.barCtx.barOptions.colors.backgroundBarColors.length > 0 &&\n      activeSeriesIndex === i\n    ) {\n      if (j >= this.barCtx.barOptions.colors.backgroundBarColors.length) {\n        j -= this.barCtx.barOptions.colors.backgroundBarColors.length\n      }\n\n      let bcolor = this.barCtx.barOptions.colors.backgroundBarColors[j]\n      let rect = graphics.drawRect(\n        typeof x1 !== 'undefined' ? x1 : 0,\n        typeof y1 !== 'undefined' ? y1 : 0,\n        typeof x2 !== 'undefined' ? x2 : w.globals.gridWidth,\n        typeof y2 !== 'undefined' ? y2 : w.globals.gridHeight,\n        this.barCtx.barOptions.colors.backgroundBarRadius,\n        bcolor,\n        this.barCtx.barOptions.colors.backgroundBarOpacity\n      )\n      elSeries.add(rect)\n      rect.node.classList.add('apexcharts-backgroundBar')\n    }\n  }\n\n  getColumnPaths({\n    barWidth,\n    barXPosition,\n    yRatio,\n    y1,\n    y2,\n    strokeWidth,\n    series,\n    realIndex,\n    i,\n    j,\n    w\n  }) {\n    const graphics = new Graphics(this.barCtx.ctx)\n    strokeWidth = Array.isArray(strokeWidth)\n      ? strokeWidth[realIndex]\n      : strokeWidth\n    if (!strokeWidth) strokeWidth = 0\n\n    let shapeOpts = {\n      barWidth,\n      strokeWidth,\n      yRatio,\n      barXPosition,\n      y1,\n      y2\n    }\n    let newPath = this.getRoundedBars(w, shapeOpts, series, i, j)\n\n    const x1 = barXPosition\n    const x2 = barXPosition + barWidth\n\n    let pathTo = graphics.move(x1, y1)\n    let pathFrom = graphics.move(x1, y1)\n\n    const sl = graphics.line(x2 - strokeWidth, y1)\n    if (w.globals.previousPaths.length > 0) {\n      pathFrom = this.barCtx.getPreviousPath(realIndex, j, false)\n    }\n\n    pathTo =\n      pathTo +\n      graphics.line(x1, newPath.y2) +\n      newPath.pathWithRadius +\n      graphics.line(x2 - strokeWidth, newPath.y2) +\n      sl +\n      sl +\n      'z'\n\n    // the lines in pathFrom are repeated to equal it to the points of pathTo\n    // this is to avoid weird animation (bug in svg.js)\n    pathFrom =\n      pathFrom +\n      graphics.line(x1, y1) +\n      sl +\n      sl +\n      sl +\n      sl +\n      sl +\n      graphics.line(x1, y1)\n\n    if (w.config.chart.stacked) {\n      this.barCtx.yArrj.push(newPath.y2)\n      this.barCtx.yArrjF.push(Math.abs(y1 - newPath.y2))\n      this.barCtx.yArrjVal.push(this.barCtx.series[i][j])\n    }\n\n    return {\n      pathTo,\n      pathFrom\n    }\n  }\n\n  getBarpaths({\n    barYPosition,\n    barHeight,\n    x1,\n    x2,\n    strokeWidth,\n    series,\n    realIndex,\n    i,\n    j,\n    w\n  }) {\n    const graphics = new Graphics(this.barCtx.ctx)\n    strokeWidth = Array.isArray(strokeWidth)\n      ? strokeWidth[realIndex]\n      : strokeWidth\n    if (!strokeWidth) strokeWidth = 0\n\n    let shapeOpts = {\n      barHeight,\n      strokeWidth,\n      barYPosition,\n      x2,\n      x1\n    }\n\n    let newPath = this.getRoundedBars(w, shapeOpts, series, i, j)\n\n    let pathTo = graphics.move(x1, barYPosition)\n    let pathFrom = graphics.move(x1, barYPosition)\n\n    if (w.globals.previousPaths.length > 0) {\n      pathFrom = this.barCtx.getPreviousPath(realIndex, j, false)\n    }\n\n    const y1 = barYPosition\n    const y2 = barYPosition + barHeight\n\n    const sl = graphics.line(x1, y2 - strokeWidth)\n    pathTo =\n      pathTo +\n      graphics.line(newPath.x2, y1) +\n      newPath.pathWithRadius +\n      graphics.line(newPath.x2, y2 - strokeWidth) +\n      sl +\n      sl +\n      'z'\n\n    pathFrom =\n      pathFrom +\n      graphics.line(x1, y1) +\n      sl +\n      sl +\n      sl +\n      sl +\n      sl +\n      graphics.line(x1, y1)\n\n    if (w.config.chart.stacked) {\n      this.barCtx.xArrj.push(newPath.x2)\n      this.barCtx.xArrjF.push(Math.abs(x1 - newPath.x2))\n      this.barCtx.xArrjVal.push(this.barCtx.series[i][j])\n    }\n    return {\n      pathTo,\n      pathFrom\n    }\n  }\n\n  /** getRoundedBars draws border radius for bars/columns\n   * @memberof Bar\n   * @param {object} w - chart context\n   * @param {object} opts - consists several properties like barHeight/barWidth\n   * @param {array} series - global primary series\n   * @param {int} i - current iterating series's index\n   * @param {int} j - series's j of i\n   * @return {object} pathWithRadius - ending shape path string\n   *         newY/newX - which is calculated from existing x/y based on rounded border\n   **/\n  getRoundedBars(w, opts, series, i, j) {\n    let graphics = new Graphics(this.barCtx.ctx)\n    let radius = w.config.plotOptions.bar.borderRadius\n\n    if (\n      w.config.chart.stacked &&\n      series.length > 1 &&\n      i !== this.barCtx.radiusOnSeriesNumber\n    ) {\n      radius = 0\n    }\n\n    if (this.barCtx.isHorizontal) {\n      let pathWithRadius = ''\n      let x2 = opts.x2\n\n      if (Math.abs(opts.x1 - opts.x2) < radius) {\n        radius = Math.abs(opts.x1 - opts.x2)\n      }\n\n      if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n        let inverse = this.barCtx.isReversed\n          ? series[i][j] > 0\n          : series[i][j] < 0\n\n        if (inverse) radius = radius * -1\n\n        x2 = x2 - radius\n\n        pathWithRadius =\n          graphics.quadraticCurve(\n            x2 + radius,\n            opts.barYPosition,\n            x2 + radius,\n            opts.barYPosition + (!inverse ? radius : radius * -1)\n          ) +\n          graphics.line(\n            x2 + radius,\n            opts.barYPosition +\n              opts.barHeight -\n              opts.strokeWidth -\n              (!inverse ? radius : radius * -1)\n          ) +\n          graphics.quadraticCurve(\n            x2 + radius,\n            opts.barYPosition + opts.barHeight - opts.strokeWidth,\n            x2,\n            opts.barYPosition + opts.barHeight - opts.strokeWidth\n          )\n      }\n\n      return {\n        pathWithRadius,\n        x2\n      }\n    } else {\n      let pathWithRadius = ''\n      let y2 = opts.y2\n\n      if (Math.abs(opts.y1 - opts.y2) < radius) {\n        radius = Math.abs(opts.y1 - opts.y2)\n      }\n\n      if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n        let inverse = series[i][j] < 0\n\n        if (inverse) radius = radius * -1\n\n        y2 = y2 + radius\n\n        pathWithRadius =\n          graphics.quadraticCurve(\n            opts.barXPosition,\n            y2 - radius,\n            opts.barXPosition + (!inverse ? radius : radius * -1),\n            y2 - radius\n          ) +\n          graphics.line(\n            opts.barXPosition +\n              opts.barWidth -\n              opts.strokeWidth -\n              (!inverse ? radius : radius * -1),\n            y2 - radius\n          ) +\n          graphics.quadraticCurve(\n            opts.barXPosition + opts.barWidth - opts.strokeWidth,\n            y2 - radius,\n            opts.barXPosition + opts.barWidth - opts.strokeWidth,\n            y2\n          )\n      }\n\n      return {\n        pathWithRadius,\n        y2\n      }\n    }\n  }\n\n  checkZeroSeries({ series }) {\n    let w = this.w\n    for (let zs = 0; zs < series.length; zs++) {\n      let total = 0\n      for (\n        let zsj = 0;\n        zsj < series[w.globals.maxValsInArrayIndex].length;\n        zsj++\n      ) {\n        total += series[zs][zsj]\n      }\n      if (total === 0) {\n        this.barCtx.zeroSerieses.push(zs)\n      }\n    }\n\n    // After getting all zeroserieses, we need to ensure whether radiusOnSeriesNumber is not in that zeroseries array\n    for (let s = series.length - 1; s >= 0; s--) {\n      if (\n        this.barCtx.zeroSerieses.indexOf(s) > -1 &&\n        s === this.radiusOnSeriesNumber\n      ) {\n        this.barCtx.radiusOnSeriesNumber -= 1\n      }\n    }\n\n    for (let s = series.length - 1; s >= 0; s--) {\n      if (\n        w.globals.collapsedSeriesIndices.indexOf(\n          this.barCtx.radiusOnSeriesNumber\n        ) > -1\n      ) {\n        this.barCtx.radiusOnSeriesNumber -= 1\n      }\n    }\n  }\n\n  getXForValue(value, zeroW, zeroPositionForNull = true) {\n    let xForVal = zeroPositionForNull ? zeroW : null\n    if (typeof value !== 'undefined' && value !== null) {\n      xForVal =\n        zeroW +\n        value / this.barCtx.invertedYRatio -\n        (this.barCtx.isReversed ? value / this.barCtx.invertedYRatio : 0) * 2\n    }\n    return xForVal\n  }\n\n  getYForValue(value, zeroH, zeroPositionForNull = true) {\n    let yForVal = zeroPositionForNull ? zeroH : null\n    if (typeof value !== 'undefined' && value !== null) {\n      yForVal =\n        zeroH -\n        value / this.barCtx.yRatio[this.barCtx.yaxisIndex] +\n        (this.barCtx.isReversed\n          ? value / this.barCtx.yRatio[this.barCtx.yaxisIndex]\n          : 0) *\n          2\n    }\n    return yForVal\n  }\n\n  getGoalValues(type, zeroW, zeroH, i, j) {\n    const w = this.w\n\n    let goals = []\n    if (\n      w.globals.seriesGoals[i] &&\n      w.globals.seriesGoals[i][j] &&\n      Array.isArray(w.globals.seriesGoals[i][j])\n    ) {\n      w.globals.seriesGoals[i][j].forEach((goal) => {\n        goals.push({\n          [type]:\n            type === 'x'\n              ? this.getXForValue(goal.value, zeroW, false)\n              : this.getYForValue(goal.value, zeroH, false),\n          attrs: goal\n        })\n      })\n    }\n    return goals\n  }\n\n  drawGoalLine({\n    barXPosition,\n    barYPosition,\n    goalX,\n    goalY,\n    barWidth,\n    barHeight\n  }) {\n    let graphics = new Graphics(this.barCtx.ctx)\n    const lineGroup = graphics.group({\n      className: 'apexcharts-bar-goals-groups'\n    })\n\n    let line = null\n    if (this.barCtx.isHorizontal) {\n      if (Array.isArray(goalX)) {\n        goalX.forEach((goal) => {\n          line = graphics.drawLine(\n            goal.x,\n            barYPosition,\n            goal.x,\n            barYPosition + barHeight,\n            goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined,\n            0,\n            goal.attrs.strokeWidth ? goal.attrs.strokeWidth : 2\n          )\n          lineGroup.add(line)\n        })\n      }\n    } else {\n      if (Array.isArray(goalY)) {\n        goalY.forEach((goal) => {\n          line = graphics.drawLine(\n            barXPosition,\n            goal.y,\n            barXPosition + barWidth,\n            goal.y,\n            goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined,\n            0,\n            goal.attrs.strokeWidth ? goal.attrs.strokeWidth : 2\n          )\n          lineGroup.add(line)\n        })\n      }\n    }\n\n    return lineGroup\n  }\n}\n","import BarDataLabels from './common/bar/DataLabels'\nimport BarHelpers from './common/bar/Helpers'\nimport CoreUtils from '../modules/CoreUtils'\nimport Utils from '../utils/Utils'\nimport Filters from '../modules/Filters'\nimport Graphics from '../modules/Graphics'\n\n/**\n * ApexCharts Bar Class responsible for drawing both Columns and Bars.\n *\n * @module Bar\n **/\n\nclass Bar {\n  constructor(ctx, xyRatios) {\n    this.ctx = ctx\n    this.w = ctx.w\n    const w = this.w\n    this.barOptions = w.config.plotOptions.bar\n\n    this.isHorizontal = this.barOptions.horizontal\n    this.strokeWidth = w.config.stroke.width\n    this.isNullValue = false\n\n    this.isTimelineBar =\n      w.config.xaxis.type === 'datetime' &&\n      w.globals.seriesRangeBarTimeline.length\n\n    this.xyRatios = xyRatios\n\n    if (this.xyRatios !== null) {\n      this.xRatio = xyRatios.xRatio\n      this.initialXRatio = xyRatios.initialXRatio\n      this.yRatio = xyRatios.yRatio\n      this.invertedXRatio = xyRatios.invertedXRatio\n      this.invertedYRatio = xyRatios.invertedYRatio\n      this.baseLineY = xyRatios.baseLineY\n      this.baseLineInvertedY = xyRatios.baseLineInvertedY\n    }\n    this.yaxisIndex = 0\n    this.seriesLen = 0\n\n    this.barHelpers = new BarHelpers(this)\n  }\n\n  /** primary draw method which is called on bar object\n   * @memberof Bar\n   * @param {array} series - user supplied series values\n   * @param {int} seriesIndex - the index by which series will be drawn on the svg\n   * @return {node} element which is supplied to parent chart draw method for appending\n   **/\n  draw(series, seriesIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    const coreUtils = new CoreUtils(this.ctx, w)\n    series = coreUtils.getLogSeries(series)\n    this.series = series\n    this.yRatio = coreUtils.getLogYRatios(this.yRatio)\n\n    this.barHelpers.initVariables(series)\n\n    let ret = graphics.group({\n      class: 'apexcharts-bar-series apexcharts-plot-series'\n    })\n\n    if (w.config.dataLabels.enabled) {\n      if (this.totalItems > this.barOptions.dataLabels.maxItems) {\n        console.warn(\n          'WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.'\n        )\n      }\n    }\n\n    for (let i = 0, bc = 0; i < series.length; i++, bc++) {\n      let x,\n        y,\n        xDivision, // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n        yDivision, // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n        zeroH, // zeroH is the baseline where 0 meets y axis\n        zeroW // zeroW is the baseline where 0 meets x axis\n\n      let yArrj = [] // hold y values of current iterating series\n      let xArrj = [] // hold x values of current iterating series\n\n      let realIndex = w.globals.comboCharts ? seriesIndex[i] : i\n\n      // el to which series will be drawn\n      let elSeries = graphics.group({\n        class: `apexcharts-series`,\n        rel: i + 1,\n        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n        'data:realIndex': realIndex\n      })\n\n      this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex)\n\n      if (series[i].length > 0) {\n        this.visibleI = this.visibleI + 1\n      }\n\n      let barHeight = 0\n      let barWidth = 0\n\n      if (this.yRatio.length > 1) {\n        this.yaxisIndex = realIndex\n      }\n\n      this.isReversed =\n        w.config.yaxis[this.yaxisIndex] &&\n        w.config.yaxis[this.yaxisIndex].reversed\n\n      let initPositions = this.barHelpers.initialPositions()\n\n      y = initPositions.y\n      barHeight = initPositions.barHeight\n      yDivision = initPositions.yDivision\n      zeroW = initPositions.zeroW\n\n      x = initPositions.x\n      barWidth = initPositions.barWidth\n      xDivision = initPositions.xDivision\n      zeroH = initPositions.zeroH\n\n      if (!this.horizontal) {\n        xArrj.push(x + barWidth / 2)\n      }\n\n      // eldatalabels\n      let elDataLabelsWrap = graphics.group({\n        class: 'apexcharts-datalabels',\n        'data:realIndex': realIndex\n      })\n\n      let elGoalsMarkers = graphics.group({\n        class: 'apexcharts-bar-goals-markers',\n        style: `pointer-events: none`\n      })\n\n      for (let j = 0; j < w.globals.dataPoints; j++) {\n        const strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex)\n\n        let paths = null\n        const pathsParams = {\n          indexes: {\n            i,\n            j,\n            realIndex,\n            bc\n          },\n          x,\n          y,\n          strokeWidth,\n          elSeries\n        }\n        if (this.isHorizontal) {\n          paths = this.drawBarPaths({\n            ...pathsParams,\n            barHeight,\n            zeroW,\n            yDivision\n          })\n          barWidth = this.series[i][j] / this.invertedYRatio\n        } else {\n          paths = this.drawColumnPaths({\n            ...pathsParams,\n            xDivision,\n            barWidth,\n            zeroH\n          })\n          barHeight = this.series[i][j] / this.yRatio[this.yaxisIndex]\n        }\n\n        const barGoalLine = this.barHelpers.drawGoalLine({\n          barXPosition: paths.barXPosition,\n          barYPosition: paths.barYPosition,\n          goalX: paths.goalX,\n          goalY: paths.goalY,\n          barHeight,\n          barWidth\n        })\n\n        if (barGoalLine) {\n          elGoalsMarkers.add(barGoalLine)\n        }\n\n        y = paths.y\n        x = paths.x\n\n        // push current X\n        if (j > 0) {\n          xArrj.push(x + barWidth / 2)\n        }\n\n        yArrj.push(y)\n\n        let pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex)\n\n        this.renderSeries({\n          realIndex,\n          pathFill,\n          j,\n          i,\n          pathFrom: paths.pathFrom,\n          pathTo: paths.pathTo,\n          strokeWidth,\n          elSeries,\n          x,\n          y,\n          series,\n          barHeight,\n          barWidth,\n          elDataLabelsWrap,\n          elGoalsMarkers,\n          visibleSeries: this.visibleI,\n          type: 'bar'\n        })\n      }\n\n      // push all x val arrays into main xArr\n      w.globals.seriesXvalues[realIndex] = xArrj\n      w.globals.seriesYvalues[realIndex] = yArrj\n\n      ret.add(elSeries)\n    }\n\n    return ret\n  }\n\n  renderSeries({\n    realIndex,\n    pathFill,\n    lineFill,\n    j,\n    i,\n    pathFrom,\n    pathTo,\n    strokeWidth,\n    elSeries,\n    x,\n    y,\n    y1,\n    y2,\n    series,\n    barHeight,\n    barWidth,\n    barYPosition,\n    elDataLabelsWrap,\n    elGoalsMarkers,\n    visibleSeries,\n    type\n  }) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    if (!lineFill) {\n      /* fix apexcharts#341 */\n      lineFill = this.barOptions.distributed\n        ? w.globals.stroke.colors[j]\n        : w.globals.stroke.colors[realIndex]\n    }\n\n    if (w.config.series[i].data[j] && w.config.series[i].data[j].strokeColor) {\n      lineFill = w.config.series[i].data[j].strokeColor\n    }\n\n    if (this.isNullValue) {\n      pathFill = 'none'\n    }\n\n    let delay =\n      ((j / w.config.chart.animations.animateGradually.delay) *\n        (w.config.chart.animations.speed / w.globals.dataPoints)) /\n      2.4\n\n    let renderedPath = graphics.renderPaths({\n      i,\n      j,\n      realIndex,\n      pathFrom,\n      pathTo,\n      stroke: lineFill,\n      strokeWidth,\n      strokeLineCap: w.config.stroke.lineCap,\n      fill: pathFill,\n      animationDelay: delay,\n      initialSpeed: w.config.chart.animations.speed,\n      dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n      className: `apexcharts-${type}-area`\n    })\n\n    renderedPath.attr('clip-path', `url(#gridRectMask${w.globals.cuid})`)\n\n    const forecast = w.config.forecastDataPoints\n    if (forecast.count > 0) {\n      if (j >= w.globals.dataPoints - forecast.count) {\n        renderedPath.node.setAttribute('stroke-dasharray', forecast.dashArray)\n        renderedPath.node.setAttribute('stroke-width', forecast.strokeWidth)\n        renderedPath.node.setAttribute('fill-opacity', forecast.fillOpacity)\n      }\n    }\n\n    if (typeof y1 !== 'undefined' && typeof y2 !== 'undefined') {\n      renderedPath.attr('data-range-y1', y1)\n      renderedPath.attr('data-range-y2', y2)\n    }\n\n    const filters = new Filters(this.ctx)\n    filters.setSelectionFilter(renderedPath, realIndex, j)\n    elSeries.add(renderedPath)\n\n    let barDataLabels = new BarDataLabels(this)\n    let dataLabels = barDataLabels.handleBarDataLabels({\n      x,\n      y,\n      y1,\n      y2,\n      i,\n      j,\n      series,\n      realIndex,\n      barHeight,\n      barWidth,\n      barYPosition,\n      renderedPath,\n      visibleSeries\n    })\n    if (dataLabels !== null) {\n      elDataLabelsWrap.add(dataLabels)\n    }\n\n    elSeries.add(elDataLabelsWrap)\n\n    if (elGoalsMarkers) {\n      elSeries.add(elGoalsMarkers)\n    }\n    return elSeries\n  }\n\n  drawBarPaths({\n    indexes,\n    barHeight,\n    strokeWidth,\n    zeroW,\n    x,\n    y,\n    yDivision,\n    elSeries\n  }) {\n    let w = this.w\n\n    let i = indexes.i\n    let j = indexes.j\n\n    if (w.globals.isXNumeric) {\n      y =\n        (w.globals.seriesX[i][j] - w.globals.minX) / this.invertedXRatio -\n        barHeight\n    }\n\n    let barYPosition = y + barHeight * this.visibleI\n\n    x = this.barHelpers.getXForValue(this.series[i][j], zeroW)\n\n    const paths = this.barHelpers.getBarpaths({\n      barYPosition,\n      barHeight,\n      x1: zeroW,\n      x2: x,\n      strokeWidth,\n      series: this.series,\n      realIndex: indexes.realIndex,\n      i,\n      j,\n      w\n    })\n\n    if (!w.globals.isXNumeric) {\n      y = y + yDivision\n    }\n\n    this.barHelpers.barBackground({\n      j,\n      i,\n      y1: barYPosition - barHeight * this.visibleI,\n      y2: barHeight * this.seriesLen,\n      elSeries\n    })\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      x,\n      y,\n      goalX: this.barHelpers.getGoalValues('x', zeroW, null, i, j),\n      barYPosition\n    }\n  }\n\n  drawColumnPaths({\n    indexes,\n    x,\n    y,\n    xDivision,\n    barWidth,\n    zeroH,\n    strokeWidth,\n    elSeries\n  }) {\n    let w = this.w\n\n    let realIndex = indexes.realIndex\n    let i = indexes.i\n    let j = indexes.j\n    let bc = indexes.bc\n\n    if (w.globals.isXNumeric) {\n      let sxI = realIndex\n      if (!w.globals.seriesX[realIndex].length) {\n        sxI = w.globals.maxValsInArrayIndex\n      }\n\n      x =\n        (w.globals.seriesX[sxI][j] - w.globals.minX) / this.xRatio -\n        (barWidth * this.seriesLen) / 2\n    }\n\n    let barXPosition = x + barWidth * this.visibleI\n\n    y = this.barHelpers.getYForValue(this.series[i][j], zeroH)\n\n    const paths = this.barHelpers.getColumnPaths({\n      barXPosition,\n      barWidth,\n      y1: zeroH,\n      y2: y,\n      strokeWidth,\n      series: this.series,\n      realIndex: indexes.realIndex,\n      i,\n      j,\n      w\n    })\n\n    if (!w.globals.isXNumeric) {\n      x = x + xDivision\n    }\n\n    this.barHelpers.barBackground({\n      bc,\n      j,\n      i,\n      x1: barXPosition - strokeWidth / 2 - barWidth * this.visibleI,\n      x2: barWidth * this.seriesLen + strokeWidth / 2,\n      elSeries\n    })\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      x,\n      y,\n      goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n      barXPosition\n    }\n  }\n\n  /** getPreviousPath is a common function for bars/columns which is used to get previous paths when data changes.\n   * @memberof Bar\n   * @param {int} realIndex - current iterating i\n   * @param {int} j - current iterating series's j index\n   * @return {string} pathFrom is the string which will be appended in animations\n   **/\n  getPreviousPath(realIndex, j) {\n    let w = this.w\n    let pathFrom\n    for (let pp = 0; pp < w.globals.previousPaths.length; pp++) {\n      let gpp = w.globals.previousPaths[pp]\n\n      if (\n        gpp.paths &&\n        gpp.paths.length > 0 &&\n        parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)\n      ) {\n        if (typeof w.globals.previousPaths[pp].paths[j] !== 'undefined') {\n          pathFrom = w.globals.previousPaths[pp].paths[j].d\n        }\n      }\n    }\n    return pathFrom\n  }\n}\n\nexport default Bar\n","import Utils from './Utils'\n\n/**\n * DateTime Class to manipulate datetime values.\n *\n * @module DateTime\n **/\n\nclass DateTime {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.months31 = [1, 3, 5, 7, 8, 10, 12]\n    this.months30 = [2, 4, 6, 9, 11]\n\n    this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]\n  }\n\n  isValidDate(date) {\n    return !isNaN(this.parseDate(date))\n  }\n\n  getTimeStamp(dateStr) {\n    if (!Date.parse(dateStr)) {\n      return dateStr\n    }\n    const utc = this.w.config.xaxis.labels.datetimeUTC\n    return !utc\n      ? new Date(dateStr).getTime()\n      : new Date(new Date(dateStr).toISOString().substr(0, 25)).getTime()\n  }\n\n  getDate(timestamp) {\n    const utc = this.w.config.xaxis.labels.datetimeUTC\n\n    return utc\n      ? new Date(new Date(timestamp).toUTCString())\n      : new Date(timestamp)\n  }\n\n  parseDate(dateStr) {\n    const parsed = Date.parse(dateStr)\n    if (!isNaN(parsed)) {\n      return this.getTimeStamp(dateStr)\n    }\n\n    let output = Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '))\n    output = this.getTimeStamp(output)\n    return output\n  }\n\n  // This fixes the difference of x-axis labels between chrome/safari\n  // Fixes #1726, #1544, #1485, #1255\n  parseDateWithTimezone(dateStr) {\n    return Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '))\n  }\n\n  // http://stackoverflow.com/questions/14638018/current-time-formatting-with-javascript#answer-14638191\n  formatDate(date, format) {\n    const locale = this.w.globals.locale\n\n    const utc = this.w.config.xaxis.labels.datetimeUTC\n\n    let MMMM = ['\\x00', ...locale.months]\n    let MMM = ['\\x01', ...locale.shortMonths]\n    let dddd = ['\\x02', ...locale.days]\n    let ddd = ['\\x03', ...locale.shortDays]\n\n    function ii(i, len) {\n      let s = i + ''\n      len = len || 2\n      while (s.length < len) s = '0' + s\n      return s\n    }\n\n    let y = utc ? date.getUTCFullYear() : date.getFullYear()\n    format = format.replace(/(^|[^\\\\])yyyy+/g, '$1' + y)\n    format = format.replace(/(^|[^\\\\])yy/g, '$1' + y.toString().substr(2, 2))\n    format = format.replace(/(^|[^\\\\])y/g, '$1' + y)\n\n    let M = (utc ? date.getUTCMonth() : date.getMonth()) + 1\n    format = format.replace(/(^|[^\\\\])MMMM+/g, '$1' + MMMM[0])\n    format = format.replace(/(^|[^\\\\])MMM/g, '$1' + MMM[0])\n    format = format.replace(/(^|[^\\\\])MM/g, '$1' + ii(M))\n    format = format.replace(/(^|[^\\\\])M/g, '$1' + M)\n\n    let d = utc ? date.getUTCDate() : date.getDate()\n    format = format.replace(/(^|[^\\\\])dddd+/g, '$1' + dddd[0])\n    format = format.replace(/(^|[^\\\\])ddd/g, '$1' + ddd[0])\n    format = format.replace(/(^|[^\\\\])dd/g, '$1' + ii(d))\n    format = format.replace(/(^|[^\\\\])d/g, '$1' + d)\n\n    let H = utc ? date.getUTCHours() : date.getHours()\n    format = format.replace(/(^|[^\\\\])HH+/g, '$1' + ii(H))\n    format = format.replace(/(^|[^\\\\])H/g, '$1' + H)\n\n    let h = H > 12 ? H - 12 : H === 0 ? 12 : H\n    format = format.replace(/(^|[^\\\\])hh+/g, '$1' + ii(h))\n    format = format.replace(/(^|[^\\\\])h/g, '$1' + h)\n\n    let m = utc ? date.getUTCMinutes() : date.getMinutes()\n    format = format.replace(/(^|[^\\\\])mm+/g, '$1' + ii(m))\n    format = format.replace(/(^|[^\\\\])m/g, '$1' + m)\n\n    let s = utc ? date.getUTCSeconds() : date.getSeconds()\n    format = format.replace(/(^|[^\\\\])ss+/g, '$1' + ii(s))\n    format = format.replace(/(^|[^\\\\])s/g, '$1' + s)\n\n    let f = utc ? date.getUTCMilliseconds() : date.getMilliseconds()\n    format = format.replace(/(^|[^\\\\])fff+/g, '$1' + ii(f, 3))\n    f = Math.round(f / 10)\n    format = format.replace(/(^|[^\\\\])ff/g, '$1' + ii(f))\n    f = Math.round(f / 10)\n    format = format.replace(/(^|[^\\\\])f/g, '$1' + f)\n\n    let T = H < 12 ? 'AM' : 'PM'\n    format = format.replace(/(^|[^\\\\])TT+/g, '$1' + T)\n    format = format.replace(/(^|[^\\\\])T/g, '$1' + T.charAt(0))\n\n    let t = T.toLowerCase()\n    format = format.replace(/(^|[^\\\\])tt+/g, '$1' + t)\n    format = format.replace(/(^|[^\\\\])t/g, '$1' + t.charAt(0))\n\n    let tz = -date.getTimezoneOffset()\n    let K = utc || !tz ? 'Z' : tz > 0 ? '+' : '-'\n\n    if (!utc) {\n      tz = Math.abs(tz)\n      let tzHrs = Math.floor(tz / 60)\n      let tzMin = tz % 60\n      K += ii(tzHrs) + ':' + ii(tzMin)\n    }\n\n    format = format.replace(/(^|[^\\\\])K/g, '$1' + K)\n\n    let day = (utc ? date.getUTCDay() : date.getDay()) + 1\n    format = format.replace(new RegExp(dddd[0], 'g'), dddd[day])\n    format = format.replace(new RegExp(ddd[0], 'g'), ddd[day])\n\n    format = format.replace(new RegExp(MMMM[0], 'g'), MMMM[M])\n    format = format.replace(new RegExp(MMM[0], 'g'), MMM[M])\n\n    format = format.replace(/\\\\(.)/g, '$1')\n\n    return format\n  }\n\n  getTimeUnitsfromTimestamp(minX, maxX, utc) {\n    let w = this.w\n\n    if (w.config.xaxis.min !== undefined) {\n      minX = w.config.xaxis.min\n    }\n    if (w.config.xaxis.max !== undefined) {\n      maxX = w.config.xaxis.max\n    }\n\n    const tsMin = this.getDate(minX)\n    const tsMax = this.getDate(maxX)\n\n    const minD = this.formatDate(tsMin, 'yyyy MM dd HH mm ss fff').split(' ')\n    const maxD = this.formatDate(tsMax, 'yyyy MM dd HH mm ss fff').split(' ')\n\n    return {\n      minMillisecond: parseInt(minD[6], 10),\n      maxMillisecond: parseInt(maxD[6], 10),\n      minSecond: parseInt(minD[5], 10),\n      maxSecond: parseInt(maxD[5], 10),\n      minMinute: parseInt(minD[4], 10),\n      maxMinute: parseInt(maxD[4], 10),\n      minHour: parseInt(minD[3], 10),\n      maxHour: parseInt(maxD[3], 10),\n      minDate: parseInt(minD[2], 10),\n      maxDate: parseInt(maxD[2], 10),\n      minMonth: parseInt(minD[1], 10) - 1,\n      maxMonth: parseInt(maxD[1], 10) - 1,\n      minYear: parseInt(minD[0], 10),\n      maxYear: parseInt(maxD[0], 10)\n    }\n  }\n\n  isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n  }\n\n  calculcateLastDaysOfMonth(month, year, subtract) {\n    const days = this.determineDaysOfMonths(month, year)\n\n    // whatever days we get, subtract the number of days asked\n    return days - subtract\n  }\n\n  determineDaysOfYear(year) {\n    let days = 365\n\n    if (this.isLeapYear(year)) {\n      days = 366\n    }\n\n    return days\n  }\n\n  determineRemainingDaysOfYear(year, month, date) {\n    let dayOfYear = this.daysCntOfYear[month] + date\n    if (month > 1 && this.isLeapYear()) dayOfYear++\n    return dayOfYear\n  }\n\n  determineDaysOfMonths(month, year) {\n    let days = 30\n\n    month = Utils.monthMod(month)\n\n    switch (true) {\n      case this.months30.indexOf(month) > -1:\n        if (month === 2) {\n          if (this.isLeapYear(year)) {\n            days = 29\n          } else {\n            days = 28\n          }\n        }\n\n        break\n\n      case this.months31.indexOf(month) > -1:\n        days = 31\n        break\n\n      default:\n        days = 31\n        break\n    }\n\n    return days\n  }\n}\n\nexport default DateTime\n","import Bar from './Bar'\nimport Graphics from '../modules/Graphics'\nimport Utils from '../utils/Utils'\nimport DateTime from '../utils/DateTime'\n\n/**\n * ApexCharts RangeBar Class responsible for drawing Range/Timeline Bars.\n *\n * @module RangeBar\n **/\n\nclass RangeBar extends Bar {\n  draw(series, seriesIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    this.rangeBarOptions = this.w.config.plotOptions.rangeBar\n\n    this.series = series\n    this.seriesRangeStart = w.globals.seriesRangeStart\n    this.seriesRangeEnd = w.globals.seriesRangeEnd\n\n    this.barHelpers.initVariables(series)\n\n    let ret = graphics.group({\n      class: 'apexcharts-rangebar-series apexcharts-plot-series'\n    })\n\n    for (let i = 0; i < series.length; i++) {\n      let x,\n        y,\n        xDivision, // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n        yDivision, // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n        zeroH, // zeroH is the baseline where 0 meets y axis\n        zeroW // zeroW is the baseline where 0 meets x axis\n\n      let realIndex = w.globals.comboCharts ? seriesIndex[i] : i\n\n      // el to which series will be drawn\n      let elSeries = graphics.group({\n        class: `apexcharts-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n        rel: i + 1,\n        'data:realIndex': realIndex\n      })\n\n      if (series[i].length > 0) {\n        this.visibleI = this.visibleI + 1\n      }\n\n      let barHeight = 0\n      let barWidth = 0\n\n      if (this.yRatio.length > 1) {\n        this.yaxisIndex = realIndex\n      }\n\n      let initPositions = this.barHelpers.initialPositions()\n\n      y = initPositions.y\n      zeroW = initPositions.zeroW\n\n      x = initPositions.x\n      barWidth = initPositions.barWidth\n      xDivision = initPositions.xDivision\n      zeroH = initPositions.zeroH\n\n      // eldatalabels\n      let elDataLabelsWrap = graphics.group({\n        class: 'apexcharts-datalabels',\n        'data:realIndex': realIndex\n      })\n\n      let elGoalsMarkers = graphics.group({\n        class: 'apexcharts-rangebar-goals-markers',\n        style: `pointer-events: none`\n      })\n\n      for (let j = 0; j < w.globals.dataPoints; j++) {\n        const strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex)\n\n        const y1 = this.seriesRangeStart[i][j]\n        const y2 = this.seriesRangeEnd[i][j]\n\n        let paths = null\n        let barYPosition = null\n        const params = { x, y, strokeWidth, elSeries }\n\n        yDivision = initPositions.yDivision\n        barHeight = initPositions.barHeight\n\n        if (this.isHorizontal) {\n          barYPosition = y + barHeight * this.visibleI\n\n          let seriesLen = this.seriesLen\n          if (w.config.plotOptions.bar.rangeBarGroupRows) {\n            seriesLen = 1\n          }\n\n          let srty = (yDivision - barHeight * seriesLen) / 2\n\n          if (typeof w.config.series[i].data[j] === 'undefined') {\n            // no data exists for further indexes, hence we need to get out the innr loop.\n            // As we are iterating over total datapoints, there is a possiblity the series might not have data for j index\n            break\n          }\n\n          if (this.isTimelineBar && w.config.series[i].data[j].x) {\n            let positions = this.detectOverlappingBars({\n              i,\n              j,\n              barYPosition,\n              srty,\n              barHeight,\n              yDivision,\n              initPositions\n            })\n\n            barHeight = positions.barHeight\n            barYPosition = positions.barYPosition\n          }\n\n          paths = this.drawRangeBarPaths({\n            indexes: { i, j, realIndex },\n            barHeight,\n            barYPosition,\n            zeroW,\n            yDivision,\n            y1,\n            y2,\n            ...params\n          })\n\n          barWidth = paths.barWidth\n        } else {\n          paths = this.drawRangeColumnPaths({\n            indexes: { i, j, realIndex },\n            zeroH,\n            barWidth,\n            xDivision,\n            ...params\n          })\n\n          barHeight = paths.barHeight\n        }\n\n        const barGoalLine = this.barHelpers.drawGoalLine({\n          barXPosition: paths.barXPosition,\n          barYPosition,\n          goalX: paths.goalX,\n          goalY: paths.goalY,\n          barHeight,\n          barWidth\n        })\n\n        if (barGoalLine) {\n          elGoalsMarkers.add(barGoalLine)\n        }\n\n        y = paths.y\n        x = paths.x\n\n        let pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex)\n\n        let lineFill = w.globals.stroke.colors[realIndex]\n\n        this.renderSeries({\n          realIndex,\n          pathFill,\n          lineFill,\n          j,\n          i,\n          x,\n          y,\n          y1,\n          y2,\n          pathFrom: paths.pathFrom,\n          pathTo: paths.pathTo,\n          strokeWidth,\n          elSeries,\n          series,\n          barHeight,\n          barYPosition,\n          barWidth,\n          elDataLabelsWrap,\n          elGoalsMarkers,\n          visibleSeries: this.visibleI,\n          type: 'rangebar'\n        })\n      }\n\n      ret.add(elSeries)\n    }\n\n    return ret\n  }\n\n  detectOverlappingBars({\n    i,\n    j,\n    barYPosition,\n    srty,\n    barHeight,\n    yDivision,\n    initPositions\n  }) {\n    const w = this.w\n    let overlaps = []\n    let rangeName = w.config.series[i].data[j].rangeName\n\n    const labelX = w.config.series[i].data[j].x\n    const rowIndex = w.globals.labels.indexOf(labelX)\n    const overlappedIndex = w.globals.seriesRangeBarTimeline[i].findIndex(\n      (tx) => tx.x === labelX && tx.overlaps.length > 0\n    )\n\n    if (w.config.plotOptions.bar.rangeBarGroupRows) {\n      barYPosition = srty + yDivision * rowIndex\n    } else {\n      barYPosition = srty + barHeight * this.visibleI + yDivision * rowIndex\n    }\n\n    if (overlappedIndex > -1 && !w.config.plotOptions.bar.rangeBarOverlap) {\n      overlaps = w.globals.seriesRangeBarTimeline[i][overlappedIndex].overlaps\n\n      if (overlaps.indexOf(rangeName) > -1) {\n        barHeight = initPositions.barHeight / overlaps.length\n\n        barYPosition =\n          barHeight * this.visibleI +\n          (yDivision * (100 - parseInt(this.barOptions.barHeight, 10))) /\n            100 /\n            2 +\n          barHeight * (this.visibleI + overlaps.indexOf(rangeName)) +\n          yDivision * rowIndex\n      }\n    }\n\n    return {\n      barYPosition,\n      barHeight\n    }\n  }\n\n  drawRangeColumnPaths({\n    indexes,\n    x,\n    strokeWidth,\n    xDivision,\n    barWidth,\n    zeroH\n  }) {\n    let w = this.w\n\n    let i = indexes.i\n    let j = indexes.j\n\n    const yRatio = this.yRatio[this.yaxisIndex]\n    let realIndex = indexes.realIndex\n\n    const range = this.getRangeValue(realIndex, j)\n\n    let y1 = Math.min(range.start, range.end)\n    let y2 = Math.max(range.start, range.end)\n\n    if (w.globals.isXNumeric) {\n      x =\n        (w.globals.seriesX[i][j] - w.globals.minX) / this.xRatio - barWidth / 2\n    }\n\n    let barXPosition = x + barWidth * this.visibleI\n\n    if (\n      typeof this.series[i][j] === 'undefined' ||\n      this.series[i][j] === null\n    ) {\n      y1 = zeroH\n    } else {\n      y1 = zeroH - y1 / yRatio\n      y2 = zeroH - y2 / yRatio\n    }\n    const barHeight = Math.abs(y2 - y1)\n\n    const paths = this.barHelpers.getColumnPaths({\n      barXPosition,\n      barWidth,\n      y1,\n      y2,\n      strokeWidth: this.strokeWidth,\n      series: this.seriesRangeEnd,\n      realIndex: indexes.realIndex,\n      i: realIndex,\n      j,\n      w\n    })\n\n    if (!w.globals.isXNumeric) {\n      x = x + xDivision\n    }\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      barHeight,\n      x,\n      y: y2,\n      goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n      barXPosition\n    }\n  }\n\n  drawRangeBarPaths({\n    indexes,\n    y,\n    y1,\n    y2,\n    yDivision,\n    barHeight,\n    barYPosition,\n    zeroW\n  }) {\n    let w = this.w\n\n    const x1 = zeroW + y1 / this.invertedYRatio\n    const x2 = zeroW + y2 / this.invertedYRatio\n\n    const barWidth = Math.abs(x2 - x1)\n\n    const paths = this.barHelpers.getBarpaths({\n      barYPosition,\n      barHeight,\n      x1,\n      x2,\n      strokeWidth: this.strokeWidth,\n      series: this.seriesRangeEnd,\n      i: indexes.realIndex,\n      realIndex: indexes.realIndex,\n      j: indexes.j,\n      w\n    })\n\n    if (!w.globals.isXNumeric) {\n      y = y + yDivision\n    }\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      barWidth,\n      x: x2,\n      goalX: this.barHelpers.getGoalValues(\n        'x',\n        zeroW,\n        null,\n        indexes.realIndex,\n        indexes.j\n      ),\n      y\n    }\n  }\n\n  getRangeValue(i, j) {\n    const w = this.w\n    return {\n      start: w.globals.seriesRangeStart[i][j],\n      end: w.globals.seriesRangeEnd[i][j]\n    }\n  }\n\n  getTooltipValues({ ctx, seriesIndex, dataPointIndex, y1, y2, w }) {\n    let start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex]\n    let end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex]\n    let ylabel = w.globals.labels[dataPointIndex]\n    let seriesName = w.config.series[seriesIndex].name\n      ? w.config.series[seriesIndex].name\n      : ''\n    const yLbFormatter = w.config.tooltip.y.formatter\n    const yLbTitleFormatter = w.config.tooltip.y.title.formatter\n\n    const opts = {\n      w,\n      seriesIndex,\n      dataPointIndex,\n      start,\n      end\n    }\n\n    if (typeof yLbTitleFormatter === 'function') {\n      seriesName = yLbTitleFormatter(seriesName, opts)\n    }\n\n    if (Number.isFinite(y1) && Number.isFinite(y2)) {\n      start = y1\n      end = y2\n\n      if (w.config.series[seriesIndex].data[dataPointIndex].x) {\n        ylabel = w.config.series[seriesIndex].data[dataPointIndex].x + ':'\n      }\n\n      if (typeof yLbFormatter === 'function') {\n        ylabel = yLbFormatter(ylabel, opts)\n      }\n    }\n\n    let startVal = ''\n    let endVal = ''\n\n    const color = w.globals.colors[seriesIndex]\n    if (w.config.tooltip.x.formatter === undefined) {\n      if (w.config.xaxis.type === 'datetime') {\n        let datetimeObj = new DateTime(ctx)\n        startVal = datetimeObj.formatDate(\n          datetimeObj.getDate(start),\n          w.config.tooltip.x.format\n        )\n        endVal = datetimeObj.formatDate(\n          datetimeObj.getDate(end),\n          w.config.tooltip.x.format\n        )\n      } else {\n        startVal = start\n        endVal = end\n      }\n    } else {\n      startVal = w.config.tooltip.x.formatter(start)\n      endVal = w.config.tooltip.x.formatter(end)\n    }\n\n    return { start, end, startVal, endVal, ylabel, color, seriesName }\n  }\n\n  buildCustomTooltipHTML({ color, seriesName, ylabel, start, end }) {\n    return (\n      '<div class=\"apexcharts-tooltip-rangebar\">' +\n      '<div> <span class=\"series-name\" style=\"color: ' +\n      color +\n      '\">' +\n      (seriesName ? seriesName : '') +\n      '</span></div>' +\n      '<div> <span class=\"category\">' +\n      ylabel +\n      ' </span> <span class=\"value start-value\">' +\n      start +\n      '</span> <span class=\"separator\">-</span> <span class=\"value end-value\">' +\n      end +\n      '</span></div>' +\n      '</div>'\n    )\n  }\n}\n\nexport default RangeBar\n","import Utils from '../../utils/Utils'\nimport RangeBar from '../../charts/RangeBar'\n\n/**\n * ApexCharts Default Class for setting default options for all chart types.\n *\n * @module Defaults\n **/\n\nexport default class Defaults {\n  constructor(opts) {\n    this.opts = opts\n  }\n\n  line() {\n    return {\n      chart: {\n        animations: {\n          easing: 'swing'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 5,\n        curve: 'straight'\n      },\n      markers: {\n        size: 0,\n        hover: {\n          sizeOffset: 6\n        }\n      },\n      xaxis: {\n        crosshairs: {\n          width: 1\n        }\n      }\n    }\n  }\n\n  sparkline(defaults) {\n    this.opts.yaxis[0].show = false\n    this.opts.yaxis[0].title.text = ''\n    this.opts.yaxis[0].axisBorder.show = false\n    this.opts.yaxis[0].axisTicks.show = false\n    this.opts.yaxis[0].floating = true\n\n    const ret = {\n      grid: {\n        show: false,\n        padding: {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0\n        }\n      },\n      legend: {\n        show: false\n      },\n      xaxis: {\n        labels: {\n          show: false\n        },\n        tooltip: {\n          enabled: false\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        }\n      },\n      chart: {\n        toolbar: {\n          show: false\n        },\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      }\n    }\n\n    return Utils.extend(defaults, ret)\n  }\n\n  bar() {\n    return {\n      chart: {\n        stacked: false,\n        animations: {\n          easing: 'swing'\n        }\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            position: 'center'\n          }\n        }\n      },\n      dataLabels: {\n        style: {\n          colors: ['#fff']\n        },\n        background: {\n          enabled: false\n        }\n      },\n      stroke: {\n        width: 0,\n        lineCap: 'round'\n      },\n      fill: {\n        opacity: 0.85\n      },\n      legend: {\n        markers: {\n          shape: 'square',\n          radius: 2,\n          size: 8\n        }\n      },\n      tooltip: {\n        shared: false,\n        intersect: true\n      },\n      xaxis: {\n        tooltip: {\n          enabled: false\n        },\n        tickPlacement: 'between',\n        crosshairs: {\n          width: 'barWidth',\n          position: 'back',\n          fill: {\n            type: 'gradient'\n          },\n          dropShadow: {\n            enabled: false\n          },\n          stroke: {\n            width: 0\n          }\n        }\n      }\n    }\n  }\n\n  candlestick() {\n    return {\n      stroke: {\n        width: 1,\n        colors: ['#333']\n      },\n      fill: {\n        opacity: 1\n      },\n      dataLabels: {\n        enabled: false\n      },\n      tooltip: {\n        shared: true,\n        custom: ({ seriesIndex, dataPointIndex, w }) => {\n          return this._getBoxTooltip(\n            w,\n            seriesIndex,\n            dataPointIndex,\n            ['Open', 'High', '', 'Low', 'Close'],\n            'candlestick'\n          )\n        }\n      },\n      states: {\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      },\n      xaxis: {\n        crosshairs: {\n          width: 1\n        }\n      }\n    }\n  }\n\n  boxPlot() {\n    return {\n      chart: {\n        animations: {\n          dynamicAnimation: {\n            enabled: false\n          }\n        }\n      },\n      stroke: {\n        width: 1,\n        colors: ['#24292e']\n      },\n      dataLabels: {\n        enabled: false\n      },\n      tooltip: {\n        shared: true,\n        custom: ({ seriesIndex, dataPointIndex, w }) => {\n          return this._getBoxTooltip(\n            w,\n            seriesIndex,\n            dataPointIndex,\n            ['Minimum', 'Q1', 'Median', 'Q3', 'Maximum'],\n            'boxPlot'\n          )\n        }\n      },\n      markers: {\n        size: 5,\n        strokeWidth: 1,\n        strokeColors: '#111'\n      },\n      xaxis: {\n        crosshairs: {\n          width: 1\n        }\n      }\n    }\n  }\n\n  gantt() {\n    const handleTimelineTooltip = (opts) => {\n      const rangeCtx = new RangeBar(opts.ctx, null)\n\n      const {\n        color,\n        seriesName,\n        ylabel,\n        startVal,\n        endVal\n      } = rangeCtx.getTooltipValues(opts)\n      return rangeCtx.buildCustomTooltipHTML({\n        color,\n        seriesName,\n        ylabel,\n        start: startVal,\n        end: endVal\n      })\n    }\n\n    const handleRangeColumnTooltip = (opts) => {\n      const rangeCtx = new RangeBar(opts.ctx, null)\n\n      const {\n        color,\n        seriesName,\n        ylabel,\n        start,\n        end\n      } = rangeCtx.getTooltipValues(opts)\n      return rangeCtx.buildCustomTooltipHTML({\n        color,\n        seriesName,\n        ylabel,\n        start,\n        end\n      })\n    }\n    return {\n      stroke: {\n        width: 0,\n        lineCap: 'square'\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 0,\n          dataLabels: {\n            position: 'center'\n          }\n        }\n      },\n      dataLabels: {\n        enabled: false,\n        formatter(val, { ctx, seriesIndex, dataPointIndex, w }) {\n          const start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex]\n          const end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex]\n          return end - start\n        },\n        background: {\n          enabled: false\n        },\n        style: {\n          colors: ['#fff']\n        }\n      },\n      tooltip: {\n        shared: false,\n        followCursor: true,\n        custom(opts) {\n          if (\n            opts.w.config.plotOptions &&\n            opts.w.config.plotOptions.bar &&\n            opts.w.config.plotOptions.bar.horizontal\n          ) {\n            return handleTimelineTooltip(opts)\n          } else {\n            return handleRangeColumnTooltip(opts)\n          }\n        }\n      },\n      xaxis: {\n        tickPlacement: 'between',\n        tooltip: {\n          enabled: false\n        },\n        crosshairs: {\n          stroke: {\n            width: 0\n          }\n        }\n      }\n    }\n  }\n\n  rangeBar() {\n    const handleTimelineTooltip = (opts) => {\n      const rangeCtx = new RangeBar(opts.ctx, null)\n\n      const {\n        color,\n        seriesName,\n        ylabel,\n        startVal,\n        endVal\n      } = rangeCtx.getTooltipValues(opts)\n      return rangeCtx.buildCustomTooltipHTML({\n        color,\n        seriesName,\n        ylabel,\n        start: startVal,\n        end: endVal\n      })\n    }\n\n    const handleRangeColumnTooltip = (opts) => {\n      const rangeCtx = new RangeBar(opts.ctx, null)\n\n      const {\n        color,\n        seriesName,\n        ylabel,\n        start,\n        end\n      } = rangeCtx.getTooltipValues(opts)\n      return rangeCtx.buildCustomTooltipHTML({\n        color,\n        seriesName,\n        ylabel,\n        start,\n        end\n      })\n    }\n    return {\n      stroke: {\n        width: 0,\n        lineCap: 'square'\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 0,\n          dataLabels: {\n            position: 'center'\n          }\n        }\n      },\n      dataLabels: {\n        enabled: false,\n        formatter(val, { ctx, seriesIndex, dataPointIndex, w }) {\n          const start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex]\n          const end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex]\n          return end - start\n        },\n        background: {\n          enabled: false\n        },\n        style: {\n          colors: ['#fff']\n        }\n      },\n      tooltip: {\n        shared: false,\n        followCursor: true,\n        custom(opts) {\n          if (\n            opts.w.config.plotOptions &&\n            opts.w.config.plotOptions.bar &&\n            opts.w.config.plotOptions.bar.horizontal\n          ) {\n            return handleTimelineTooltip(opts)\n          } else {\n            return handleRangeColumnTooltip(opts)\n          }\n        }\n      },\n      xaxis: {\n        tickPlacement: 'between',\n        tooltip: {\n          enabled: false\n        },\n        crosshairs: {\n          stroke: {\n            width: 0\n          }\n        }\n      }\n    }\n  }\n\n  area() {\n    return {\n      stroke: {\n        width: 4\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          inverseColors: false,\n          shade: 'light',\n          type: 'vertical',\n          opacityFrom: 0.65,\n          opacityTo: 0.5,\n          stops: [0, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          sizeOffset: 6\n        }\n      },\n      tooltip: {\n        followCursor: false\n      }\n    }\n  }\n\n  brush(defaults) {\n    const ret = {\n      chart: {\n        toolbar: {\n          autoSelected: 'selection',\n          show: false\n        },\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 1\n      },\n      tooltip: {\n        enabled: false\n      },\n      xaxis: {\n        tooltip: {\n          enabled: false\n        }\n      }\n    }\n\n    return Utils.extend(defaults, ret)\n  }\n\n  stacked100(opts) {\n    opts.dataLabels = opts.dataLabels || {}\n    opts.dataLabels.formatter = opts.dataLabels.formatter || undefined\n    const existingDataLabelFormatter = opts.dataLabels.formatter\n\n    opts.yaxis.forEach((yaxe, index) => {\n      opts.yaxis[index].min = 0\n      opts.yaxis[index].max = 100\n    })\n\n    const isBar = opts.chart.type === 'bar'\n\n    if (isBar) {\n      opts.dataLabels.formatter =\n        existingDataLabelFormatter ||\n        function(val) {\n          if (typeof val === 'number') {\n            return val ? val.toFixed(0) + '%' : val\n          }\n          return val\n        }\n    }\n    return opts\n  }\n\n  // This function removes the left and right spacing in chart for line/area/scatter if xaxis type = category for those charts by converting xaxis = numeric. Numeric/Datetime xaxis prevents the unnecessary spacing in the left/right of the chart area\n  convertCatToNumeric(opts) {\n    opts.xaxis.convertedCatToNumeric = true\n\n    return opts\n  }\n\n  convertCatToNumericXaxis(opts, ctx, cats) {\n    opts.xaxis.type = 'numeric'\n    opts.xaxis.labels = opts.xaxis.labels || {}\n    opts.xaxis.labels.formatter =\n      opts.xaxis.labels.formatter ||\n      function(val) {\n        return Utils.isNumber(val) ? Math.floor(val) : val\n      }\n\n    const defaultFormatter = opts.xaxis.labels.formatter\n    let labels =\n      opts.xaxis.categories && opts.xaxis.categories.length\n        ? opts.xaxis.categories\n        : opts.labels\n\n    if (cats && cats.length) {\n      labels = cats.map((c) => {\n        return Array.isArray(c) ? c : String(c)\n      })\n    }\n\n    if (labels && labels.length) {\n      opts.xaxis.labels.formatter = function(val) {\n        return Utils.isNumber(val)\n          ? defaultFormatter(labels[Math.floor(val) - 1])\n          : defaultFormatter(val)\n      }\n    }\n\n    opts.xaxis.categories = []\n    opts.labels = []\n    opts.xaxis.tickAmount = opts.xaxis.tickAmount || 'dataPoints'\n    return opts\n  }\n\n  bubble() {\n    return {\n      dataLabels: {\n        style: {\n          colors: ['#fff']\n        }\n      },\n      tooltip: {\n        shared: false,\n        intersect: true\n      },\n      xaxis: {\n        crosshairs: {\n          width: 0\n        }\n      },\n      fill: {\n        type: 'solid',\n        gradient: {\n          shade: 'light',\n          inverse: true,\n          shadeIntensity: 0.55,\n          opacityFrom: 0.4,\n          opacityTo: 0.8\n        }\n      }\n    }\n  }\n\n  scatter() {\n    return {\n      dataLabels: {\n        enabled: false\n      },\n      tooltip: {\n        shared: false,\n        intersect: true\n      },\n      markers: {\n        size: 6,\n        strokeWidth: 1,\n        hover: {\n          sizeOffset: 2\n        }\n      }\n    }\n  }\n\n  heatmap() {\n    return {\n      chart: {\n        stacked: false\n      },\n      fill: {\n        opacity: 1\n      },\n      dataLabels: {\n        style: {\n          colors: ['#fff']\n        }\n      },\n      stroke: {\n        colors: ['#fff']\n      },\n      tooltip: {\n        followCursor: true,\n        marker: {\n          show: false\n        },\n        x: {\n          show: false\n        }\n      },\n      legend: {\n        position: 'top',\n        markers: {\n          shape: 'square',\n          size: 10,\n          offsetY: 2\n        }\n      },\n      grid: {\n        padding: {\n          right: 20\n        }\n      }\n    }\n  }\n\n  treemap() {\n    return {\n      chart: {\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        style: {\n          fontSize: 14,\n          fontWeight: 600,\n          colors: ['#fff']\n        }\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['#fff']\n      },\n      legend: {\n        show: false\n      },\n      fill: {\n        gradient: {\n          stops: [0, 100]\n        }\n      },\n      tooltip: {\n        followCursor: true,\n        x: {\n          show: false\n        }\n      },\n      grid: {\n        padding: {\n          left: 0,\n          right: 0\n        }\n      },\n      xaxis: {\n        crosshairs: {\n          show: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      }\n    }\n  }\n\n  pie() {\n    return {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            labels: {\n              show: false\n            }\n          }\n        }\n      },\n      dataLabels: {\n        formatter(val) {\n          return val.toFixed(1) + '%'\n        },\n        style: {\n          colors: ['#fff']\n        },\n        background: {\n          enabled: false\n        },\n        dropShadow: {\n          enabled: true\n        }\n      },\n      stroke: {\n        colors: ['#fff']\n      },\n      fill: {\n        opacity: 1,\n        gradient: {\n          shade: 'light',\n          stops: [0, 100]\n        }\n      },\n      tooltip: {\n        theme: 'dark',\n        fillSeriesColor: true\n      },\n      legend: {\n        position: 'right'\n      }\n    }\n  }\n\n  donut() {\n    return {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        formatter(val) {\n          return val.toFixed(1) + '%'\n        },\n        style: {\n          colors: ['#fff']\n        },\n        background: {\n          enabled: false\n        },\n        dropShadow: {\n          enabled: true\n        }\n      },\n      stroke: {\n        colors: ['#fff']\n      },\n      fill: {\n        opacity: 1,\n        gradient: {\n          shade: 'light',\n          shadeIntensity: 0.35,\n          stops: [80, 100],\n          opacityFrom: 1,\n          opacityTo: 1\n        }\n      },\n      tooltip: {\n        theme: 'dark',\n        fillSeriesColor: true\n      },\n      legend: {\n        position: 'right'\n      }\n    }\n  }\n\n  polarArea() {\n    this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount\n      ? this.opts.yaxis[0].tickAmount\n      : 6\n\n    return {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      dataLabels: {\n        formatter(val) {\n          return val.toFixed(1) + '%'\n        },\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2\n      },\n      fill: {\n        opacity: 0.7\n      },\n      tooltip: {\n        theme: 'dark',\n        fillSeriesColor: true\n      },\n      legend: {\n        position: 'right'\n      }\n    }\n  }\n\n  radar() {\n    this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY\n      ? this.opts.yaxis[0].labels.offsetY\n      : 6\n\n    return {\n      dataLabels: {\n        enabled: false,\n        style: {\n          fontSize: '11px'\n        }\n      },\n      stroke: {\n        width: 2\n      },\n      markers: {\n        size: 3,\n        strokeWidth: 1,\n        strokeOpacity: 1\n      },\n      fill: {\n        opacity: 0.2\n      },\n      tooltip: {\n        shared: false,\n        intersect: true,\n        followCursor: true\n      },\n      grid: {\n        show: false\n      },\n      xaxis: {\n        labels: {\n          formatter: (val) => val,\n          style: {\n            colors: ['#a8a8a8'],\n            fontSize: '11px'\n          }\n        },\n        tooltip: {\n          enabled: false\n        },\n        crosshairs: {\n          show: false\n        }\n      }\n    }\n  }\n\n  radialBar() {\n    return {\n      chart: {\n        animations: {\n          dynamicAnimation: {\n            enabled: true,\n            speed: 800\n          }\n        },\n        toolbar: {\n          show: false\n        }\n      },\n      fill: {\n        gradient: {\n          shade: 'dark',\n          shadeIntensity: 0.4,\n          inverseColors: false,\n          type: 'diagonal2',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [70, 98, 100]\n        }\n      },\n      legend: {\n        show: false,\n        position: 'right'\n      },\n      tooltip: {\n        enabled: false,\n        fillSeriesColor: true\n      }\n    }\n  }\n\n  _getBoxTooltip(w, seriesIndex, dataPointIndex, labels, chartType) {\n    const o = w.globals.seriesCandleO[seriesIndex][dataPointIndex]\n    const h = w.globals.seriesCandleH[seriesIndex][dataPointIndex]\n    const m = w.globals.seriesCandleM[seriesIndex][dataPointIndex]\n    const l = w.globals.seriesCandleL[seriesIndex][dataPointIndex]\n    const c = w.globals.seriesCandleC[seriesIndex][dataPointIndex]\n\n    if (\n      w.config.series[seriesIndex].type &&\n      w.config.series[seriesIndex].type !== chartType\n    ) {\n      return `<div class=\"apexcharts-custom-tooltip\">\n          ${\n            w.config.series[seriesIndex].name\n              ? w.config.series[seriesIndex].name\n              : 'series-' + (seriesIndex + 1)\n          }: <strong>${w.globals.series[seriesIndex][dataPointIndex]}</strong>\n        </div>`\n    } else {\n      return (\n        `<div class=\"apexcharts-tooltip-box apexcharts-tooltip-${w.config.chart.type}\">` +\n        `<div>${labels[0]}: <span class=\"value\">` +\n        o +\n        '</span></div>' +\n        `<div>${labels[1]}: <span class=\"value\">` +\n        h +\n        '</span></div>' +\n        (m\n          ? `<div>${labels[2]}: <span class=\"value\">` + m + '</span></div>'\n          : '') +\n        `<div>${labels[3]}: <span class=\"value\">` +\n        l +\n        '</span></div>' +\n        `<div>${labels[4]}: <span class=\"value\">` +\n        c +\n        '</span></div>' +\n        '</div>'\n      )\n    }\n  }\n}\n","import Defaults from './Defaults'\nimport Utils from './../../utils/Utils'\nimport Options from './Options'\n\n/**\n * ApexCharts Config Class for extending user options with pre-defined ApexCharts config.\n *\n * @module Config\n **/\nexport default class Config {\n  constructor(opts) {\n    this.opts = opts\n  }\n\n  init({ responsiveOverride }) {\n    let opts = this.opts\n    let options = new Options()\n    let defaults = new Defaults(opts)\n\n    this.chartType = opts.chart.type\n\n    if (this.chartType === 'histogram') {\n      // technically, a histogram can be drawn by a column chart with no spaces in between\n      opts.chart.type = 'bar'\n      opts = Utils.extend(\n        {\n          plotOptions: {\n            bar: {\n              columnWidth: '99.99%'\n            }\n          }\n        },\n        opts\n      )\n    }\n\n    opts = this.extendYAxis(opts)\n    opts = this.extendAnnotations(opts)\n\n    let config = options.init()\n    let newDefaults = {}\n    if (opts && typeof opts === 'object') {\n      let chartDefaults = {}\n      const chartTypes = [\n        'line',\n        'area',\n        'bar',\n        'candlestick',\n        'boxPlot',\n        'rangeBar',\n        'histogram',\n        'bubble',\n        'scatter',\n        'heatmap',\n        'treemap',\n        'pie',\n        'polarArea',\n        'donut',\n        'radar',\n        'radialBar',\n        'gantt'\n      ]\n\n      if (chartTypes.indexOf(opts.chart.type) !== -1) {\n        chartDefaults = defaults[opts.chart.type]()\n      } else {\n        chartDefaults = defaults.line()\n      }\n\n      if (opts.chart.brush && opts.chart.brush.enabled) {\n        chartDefaults = defaults.brush(chartDefaults)\n      }\n\n      if (opts.chart.stacked && opts.chart.stackType === '100%') {\n        opts = defaults.stacked100(opts)\n      }\n\n      // If user has specified a dark theme, make the tooltip dark too\n      this.checkForDarkTheme(window.Apex) // check global window Apex options\n      this.checkForDarkTheme(opts) // check locally passed options\n\n      opts.xaxis = opts.xaxis || window.Apex.xaxis || {}\n\n      // an important boolean needs to be set here\n      // otherwise all the charts will have this flag set to true window.Apex.xaxis is set globally\n      if (!responsiveOverride) {\n        opts.xaxis.convertedCatToNumeric = false\n      }\n\n      opts = this.checkForCatToNumericXAxis(this.chartType, chartDefaults, opts)\n\n      if (\n        (opts.chart.sparkline && opts.chart.sparkline.enabled) ||\n        (window.Apex.chart &&\n          window.Apex.chart.sparkline &&\n          window.Apex.chart.sparkline.enabled)\n      ) {\n        chartDefaults = defaults.sparkline(chartDefaults)\n      }\n      newDefaults = Utils.extend(config, chartDefaults)\n    }\n\n    // config should cascade in this fashion\n    // default-config < global-apex-variable-config < user-defined-config\n\n    // get GLOBALLY defined options and merge with the default config\n    let mergedWithDefaultConfig = Utils.extend(newDefaults, window.Apex)\n\n    // get the merged config and extend with user defined config\n    config = Utils.extend(mergedWithDefaultConfig, opts)\n\n    // some features are not supported. those mismatches should be handled\n    config = this.handleUserInputErrors(config)\n\n    return config\n  }\n\n  checkForCatToNumericXAxis(chartType, chartDefaults, opts) {\n    let defaults = new Defaults(opts)\n\n    const isBarHorizontal =\n      chartType === 'bar' &&\n      opts.plotOptions &&\n      opts.plotOptions.bar &&\n      opts.plotOptions.bar.horizontal\n\n    const unsupportedZoom =\n      chartType === 'pie' ||\n      chartType === 'polarArea' ||\n      chartType === 'donut' ||\n      chartType === 'radar' ||\n      chartType === 'radialBar' ||\n      chartType === 'heatmap'\n\n    const notNumericXAxis =\n      opts.xaxis.type !== 'datetime' && opts.xaxis.type !== 'numeric'\n\n    let tickPlacement = opts.xaxis.tickPlacement\n      ? opts.xaxis.tickPlacement\n      : chartDefaults.xaxis && chartDefaults.xaxis.tickPlacement\n    if (\n      !isBarHorizontal &&\n      !unsupportedZoom &&\n      notNumericXAxis &&\n      tickPlacement !== 'between'\n    ) {\n      opts = defaults.convertCatToNumeric(opts)\n    }\n\n    return opts\n  }\n\n  extendYAxis(opts, w) {\n    let options = new Options()\n\n    if (\n      typeof opts.yaxis === 'undefined' ||\n      !opts.yaxis ||\n      (Array.isArray(opts.yaxis) && opts.yaxis.length === 0)\n    ) {\n      opts.yaxis = {}\n    }\n\n    // extend global yaxis config (only if object is provided / not an array)\n    if (\n      opts.yaxis.constructor !== Array &&\n      window.Apex.yaxis &&\n      window.Apex.yaxis.constructor !== Array\n    ) {\n      opts.yaxis = Utils.extend(opts.yaxis, window.Apex.yaxis)\n    }\n\n    // as we can't extend nested object's array with extend, we need to do it first\n    // user can provide either an array or object in yaxis config\n    if (opts.yaxis.constructor !== Array) {\n      // convert the yaxis to array if user supplied object\n      opts.yaxis = [Utils.extend(options.yAxis, opts.yaxis)]\n    } else {\n      opts.yaxis = Utils.extendArray(opts.yaxis, options.yAxis)\n    }\n\n    let isLogY = false\n    opts.yaxis.forEach((y) => {\n      if (y.logarithmic) {\n        isLogY = true\n      }\n    })\n\n    let series = opts.series\n    if (w && !series) {\n      series = w.config.series\n    }\n\n    // A logarithmic chart works correctly when each series has a corresponding y-axis\n    // If this is not the case, we manually create yaxis for multi-series log chart\n    if (isLogY && series.length !== opts.yaxis.length && series.length) {\n      opts.yaxis = series.map((s, i) => {\n        if (!s.name) {\n          series[i].name = `series-${i + 1}`\n        }\n        if (opts.yaxis[i]) {\n          opts.yaxis[i].seriesName = series[i].name\n          return opts.yaxis[i]\n        } else {\n          const newYaxis = Utils.extend(options.yAxis, opts.yaxis[0])\n          newYaxis.show = false\n          return newYaxis\n        }\n      })\n    }\n\n    if (isLogY && series.length > 1 && series.length !== opts.yaxis.length) {\n      console.warn(\n        'A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both.'\n      )\n    }\n    return opts\n  }\n\n  // annotations also accepts array, so we need to extend them manually\n  extendAnnotations(opts) {\n    if (typeof opts.annotations === 'undefined') {\n      opts.annotations = {}\n      opts.annotations.yaxis = []\n      opts.annotations.xaxis = []\n      opts.annotations.points = []\n    }\n\n    opts = this.extendYAxisAnnotations(opts)\n    opts = this.extendXAxisAnnotations(opts)\n    opts = this.extendPointAnnotations(opts)\n\n    return opts\n  }\n\n  extendYAxisAnnotations(opts) {\n    let options = new Options()\n\n    opts.annotations.yaxis = Utils.extendArray(\n      typeof opts.annotations.yaxis !== 'undefined'\n        ? opts.annotations.yaxis\n        : [],\n      options.yAxisAnnotation\n    )\n    return opts\n  }\n\n  extendXAxisAnnotations(opts) {\n    let options = new Options()\n\n    opts.annotations.xaxis = Utils.extendArray(\n      typeof opts.annotations.xaxis !== 'undefined'\n        ? opts.annotations.xaxis\n        : [],\n      options.xAxisAnnotation\n    )\n    return opts\n  }\n  extendPointAnnotations(opts) {\n    let options = new Options()\n\n    opts.annotations.points = Utils.extendArray(\n      typeof opts.annotations.points !== 'undefined'\n        ? opts.annotations.points\n        : [],\n      options.pointAnnotation\n    )\n    return opts\n  }\n\n  checkForDarkTheme(opts) {\n    if (opts.theme && opts.theme.mode === 'dark') {\n      if (!opts.tooltip) {\n        opts.tooltip = {}\n      }\n      if (opts.tooltip.theme !== 'light') {\n        opts.tooltip.theme = 'dark'\n      }\n\n      if (!opts.chart.foreColor) {\n        opts.chart.foreColor = '#f6f7f8'\n      }\n\n      if (!opts.chart.background) {\n        opts.chart.background = '#424242'\n      }\n\n      if (!opts.theme.palette) {\n        opts.theme.palette = 'palette4'\n      }\n    }\n  }\n\n  handleUserInputErrors(opts) {\n    let config = opts\n    // conflicting tooltip option. intersect makes sure to focus on 1 point at a time. Shared cannot be used along with it\n    if (config.tooltip.shared && config.tooltip.intersect) {\n      throw new Error(\n        'tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.'\n      )\n    }\n\n    if (config.chart.type === 'bar' && config.plotOptions.bar.horizontal) {\n      // No multiple yaxis for bars\n      if (config.yaxis.length > 1) {\n        throw new Error(\n          'Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false'\n        )\n      }\n\n      // if yaxis is reversed in horizontal bar chart, you should draw the y-axis on right side\n      if (config.yaxis[0].reversed) {\n        config.yaxis[0].opposite = true\n      }\n\n      config.xaxis.tooltip.enabled = false // no xaxis tooltip for horizontal bar\n      config.yaxis[0].tooltip.enabled = false // no xaxis tooltip for horizontal bar\n      config.chart.zoom.enabled = false // no zooming for horz bars\n    }\n\n    if (\n      config.chart.type === 'bar' ||\n      config.chart.type === 'rangeBar' ||\n      config.chart.type === 'gantt'\n    ) {\n      if (config.tooltip.shared) {\n        if (\n          config.xaxis.crosshairs.width === 'barWidth' &&\n          config.series.length > 1\n        ) {\n          config.xaxis.crosshairs.width = 'tickWidth'\n        }\n      }\n    }\n\n    if (\n      config.chart.type === 'candlestick' ||\n      config.chart.type === 'boxPlot'\n    ) {\n      if (config.yaxis[0].reversed) {\n        console.warn(\n          `Reversed y-axis in ${config.chart.type} chart is not supported.`\n        )\n        config.yaxis[0].reversed = false\n      }\n    }\n\n    if (config.chart.group && config.yaxis[0].labels.minWidth === 0) {\n      console.warn(\n        'It looks like you have multiple charts in synchronization. You must provide yaxis.labels.minWidth which must be EQUAL for all grouped charts to prevent incorrect behaviour.'\n      )\n    }\n\n    // if user supplied array for stroke width, it will only be applicable to line/area charts, for any other charts, revert back to Number\n    if (Array.isArray(config.stroke.width)) {\n      if (config.chart.type !== 'line' && config.chart.type !== 'area') {\n        console.warn(\n          'stroke.width option accepts array only for line and area charts. Reverted back to Number'\n        )\n        config.stroke.width = config.stroke.width[0]\n      }\n    }\n\n    return config\n  }\n}\n","import Utils from './../../utils/Utils'\n\nexport default class Globals {\n  initGlobalVars(gl) {\n    gl.series = [] // the MAIN series array (y values)\n    gl.seriesCandleO = []\n    gl.seriesCandleH = []\n    gl.seriesCandleM = []\n    gl.seriesCandleL = []\n    gl.seriesCandleC = []\n    gl.seriesRangeStart = []\n    gl.seriesRangeEnd = []\n    gl.seriesRangeBarTimeline = []\n    gl.seriesPercent = []\n    gl.seriesGoals = []\n    gl.seriesX = []\n    gl.seriesZ = []\n    gl.seriesNames = []\n    gl.seriesTotals = []\n    gl.seriesLog = []\n    gl.seriesColors = []\n    gl.stackedSeriesTotals = []\n    gl.seriesXvalues = [] // we will need this in tooltip (it's x position)\n    // when we will have unequal x values, we will need\n    // some way to get x value depending on mouse pointer\n    gl.seriesYvalues = [] // we will need this when deciding which series\n    // user hovered on\n    gl.labels = []\n    gl.categoryLabels = []\n    gl.timescaleLabels = []\n    gl.noLabelsProvided = false\n    gl.resizeTimer = null\n    gl.selectionResizeTimer = null\n    gl.delayedElements = []\n    gl.pointsArray = []\n    gl.dataLabelsRects = []\n    gl.isXNumeric = false\n    gl.xaxisLabelsCount = 0\n    gl.skipLastTimelinelabel = false\n    gl.skipFirstTimelinelabel = false\n    gl.isDataXYZ = false\n    gl.isMultiLineX = false\n    gl.isMultipleYAxis = false\n    gl.maxY = -Number.MAX_VALUE\n    gl.minY = Number.MIN_VALUE\n    gl.minYArr = []\n    gl.maxYArr = []\n    gl.maxX = -Number.MAX_VALUE\n    gl.minX = Number.MAX_VALUE\n    gl.initialMaxX = -Number.MAX_VALUE\n    gl.initialMinX = Number.MAX_VALUE\n    gl.maxDate = 0\n    gl.minDate = Number.MAX_VALUE\n    gl.minZ = Number.MAX_VALUE\n    gl.maxZ = -Number.MAX_VALUE\n    gl.minXDiff = Number.MAX_VALUE\n    gl.yAxisScale = []\n    gl.xAxisScale = null\n    gl.xAxisTicksPositions = []\n    gl.yLabelsCoords = []\n    gl.yTitleCoords = []\n    gl.barPadForNumericAxis = 0\n    gl.padHorizontal = 0\n    gl.xRange = 0\n    gl.yRange = []\n    gl.zRange = 0\n    gl.dataPoints = 0\n    gl.xTickAmount = 0\n  }\n\n  globalVars(config) {\n    return {\n      chartID: null, // chart ID - apexcharts-cuid\n      cuid: null, // chart ID - random numbers excluding \"apexcharts\" part\n      events: {\n        beforeMount: [],\n        mounted: [],\n        updated: [],\n        clicked: [],\n        selection: [],\n        dataPointSelection: [],\n        zoomed: [],\n        scrolled: []\n      },\n      colors: [],\n      clientX: null,\n      clientY: null,\n      fill: {\n        colors: []\n      },\n      stroke: {\n        colors: []\n      },\n      dataLabels: {\n        style: {\n          colors: []\n        }\n      },\n      radarPolygons: {\n        fill: {\n          colors: []\n        }\n      },\n      markers: {\n        colors: [],\n        size: config.markers.size,\n        largestSize: 0\n      },\n      animationEnded: false,\n      isTouchDevice: 'ontouchstart' in window || navigator.msMaxTouchPoints,\n      isDirty: false, // chart has been updated after the initial render. This is different than dataChanged property. isDirty means user manually called some method to update\n      isExecCalled: false, // whether user updated the chart through the exec method\n      initialConfig: null, // we will store the first config user has set to go back when user finishes interactions like zooming and come out of it\n      initialSeries: [],\n      lastXAxis: [],\n      lastYAxis: [],\n      columnSeries: null,\n      labels: [], // store the text to draw on x axis\n      // Don't mutate the labels, many things including tooltips depends on it!\n      timescaleLabels: [], // store the timescaleLabels Labels in another variable\n      noLabelsProvided: false, // if user didn't provide any categories/labels or x values, fallback to 1,2,3,4...\n      allSeriesCollapsed: false,\n      collapsedSeries: [], // when user collapses a series, it goes into this array\n      collapsedSeriesIndices: [], // this stores the index of the collapsedSeries instead of whole object for quick access\n      ancillaryCollapsedSeries: [], // when user collapses an \"alwaysVisible\" series, it goes into this array\n      ancillaryCollapsedSeriesIndices: [], // this stores the index of the ancillaryCollapsedSeries whose y-axis is always visible\n      risingSeries: [], // when user re-opens a collapsed series, it goes here\n      dataFormatXNumeric: false, // boolean value to indicate user has passed numeric x values\n      capturedSeriesIndex: -1,\n      capturedDataPointIndex: -1,\n      selectedDataPoints: [],\n      goldenPadding: 35, // this value is used at a lot of places for spacing purpose\n      invalidLogScale: false, // if a user enabled log scale but the data provided is not valid to generate a log scale, turn on this flag\n      ignoreYAxisIndexes: [], // when series are being collapsed in multiple y axes, ignore certain index\n      yAxisSameScaleIndices: [],\n      maxValsInArrayIndex: 0,\n      radialSize: 0,\n      selection: undefined,\n      zoomEnabled:\n        config.chart.toolbar.autoSelected === 'zoom' &&\n        config.chart.toolbar.tools.zoom &&\n        config.chart.zoom.enabled,\n      panEnabled:\n        config.chart.toolbar.autoSelected === 'pan' &&\n        config.chart.toolbar.tools.pan,\n      selectionEnabled:\n        config.chart.toolbar.autoSelected === 'selection' &&\n        config.chart.toolbar.tools.selection,\n      yaxis: null,\n      mousedown: false,\n      lastClientPosition: {}, // don't reset this variable this the chart is destroyed. It is used to detect right or left mousemove in panning\n      visibleXRange: undefined,\n      yValueDecimal: 0, // are there floating numbers in the series. If yes, this represent the len of the decimals\n      total: 0,\n      SVGNS: 'http://www.w3.org/2000/svg', // svg namespace\n      svgWidth: 0, // the whole svg width\n      svgHeight: 0, // the whole svg height\n      noData: false, // whether there is any data to display or not\n      locale: {}, // the current locale values will be preserved here for global access\n      dom: {}, // for storing all dom nodes in this particular property\n      memory: {\n        methodsToExec: []\n      },\n      shouldAnimate: true,\n      skipLastTimelinelabel: false, // when last label is cropped, skip drawing it\n      skipFirstTimelinelabel: false, // when first label is cropped, skip drawing it\n      delayedElements: [], // element which appear after animation has finished\n      axisCharts: true, // chart type = line or area or bar\n      // (refer them also as plot charts in the code)\n      isDataXYZ: false, // bool: data was provided in a {[x,y,z]} pattern\n      resized: false, // bool: user has resized\n      resizeTimer: null, // timeout function to make a small delay before\n      // drawing when user resized\n      comboCharts: false, // bool: whether it's a combination of line/column\n      dataChanged: false, // bool: has data changed dynamically\n      previousPaths: [], // array: when data is changed, it will animate from\n      // previous paths\n      allSeriesHasEqualX: true,\n      pointsArray: [], // store the points positions here to draw later on hover\n      // format is - [[x,y],[x,y]... [x,y]]\n      dataLabelsRects: [], // store the positions of datalabels to prevent collision\n      lastDrawnDataLabelsIndexes: [],\n      hasNullValues: false, // bool: whether series contains null values\n      easing: null, // function: animation effect to apply\n      zoomed: false, // whether user has zoomed or not\n      gridWidth: 0, // drawable width of actual graphs (series paths)\n      gridHeight: 0, // drawable height of actual graphs (series paths)\n      rotateXLabels: false,\n      defaultLabels: false,\n      xLabelFormatter: undefined, // formatter for x axis labels\n      yLabelFormatters: [],\n      xaxisTooltipFormatter: undefined, // formatter for x axis tooltip\n      ttKeyFormatter: undefined,\n      ttVal: undefined,\n      ttZFormatter: undefined,\n      LINE_HEIGHT_RATIO: 1.618,\n      xAxisLabelsHeight: 0,\n      xAxisLabelsWidth: 0,\n      yAxisLabelsWidth: 0,\n      scaleX: 1,\n      scaleY: 1,\n      translateX: 0,\n      translateY: 0,\n      translateYAxisX: [],\n      yAxisWidths: [],\n      translateXAxisY: 0,\n      translateXAxisX: 0,\n      tooltip: null\n    }\n  }\n\n  init(config) {\n    let globals = this.globalVars(config)\n    this.initGlobalVars(globals)\n\n    globals.initialConfig = Utils.extend({}, config)\n    globals.initialSeries = Utils.clone(config.series)\n\n    globals.lastXAxis = Utils.clone(globals.initialConfig.xaxis)\n    globals.lastYAxis = Utils.clone(globals.initialConfig.yaxis)\n    return globals\n  }\n}\n","import Config from './settings/Config'\nimport Globals from './settings/Globals'\n\n/**\n * ApexCharts Base Class for extending user options with pre-defined ApexCharts config.\n *\n * @module Base\n **/\nexport default class Base {\n  constructor(opts) {\n    this.opts = opts\n  }\n\n  init() {\n    const config = new Config(this.opts).init({ responsiveOverride: false })\n    const globals = new Globals().init(config)\n\n    const w = {\n      config,\n      globals\n    }\n\n    return w\n  }\n}\n","import CoreUtils from './CoreUtils'\nimport DateTime from './../utils/DateTime'\nimport Series from './Series'\nimport Utils from '../utils/Utils'\nimport Defaults from './settings/Defaults'\n\nexport default class Data {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.twoDSeries = []\n    this.threeDSeries = []\n    this.twoDSeriesX = []\n    this.seriesGoals = []\n    this.coreUtils = new CoreUtils(this.ctx)\n  }\n\n  isMultiFormat() {\n    return this.isFormatXY() || this.isFormat2DArray()\n  }\n\n  // given format is [{x, y}, {x, y}]\n  isFormatXY() {\n    const series = this.w.config.series.slice()\n\n    const sr = new Series(this.ctx)\n    this.activeSeriesIndex = sr.getActiveConfigSeriesIndex()\n\n    if (\n      typeof series[this.activeSeriesIndex].data !== 'undefined' &&\n      series[this.activeSeriesIndex].data.length > 0 &&\n      series[this.activeSeriesIndex].data[0] !== null &&\n      typeof series[this.activeSeriesIndex].data[0].x !== 'undefined' &&\n      series[this.activeSeriesIndex].data[0] !== null\n    ) {\n      return true\n    }\n  }\n\n  // given format is [[x, y], [x, y]]\n  isFormat2DArray() {\n    const series = this.w.config.series.slice()\n\n    const sr = new Series(this.ctx)\n    this.activeSeriesIndex = sr.getActiveConfigSeriesIndex()\n\n    if (\n      typeof series[this.activeSeriesIndex].data !== 'undefined' &&\n      series[this.activeSeriesIndex].data.length > 0 &&\n      typeof series[this.activeSeriesIndex].data[0] !== 'undefined' &&\n      series[this.activeSeriesIndex].data[0] !== null &&\n      series[this.activeSeriesIndex].data[0].constructor === Array\n    ) {\n      return true\n    }\n  }\n\n  handleFormat2DArray(ser, i) {\n    const cnf = this.w.config\n    const gl = this.w.globals\n\n    const isBoxPlot =\n      cnf.chart.type === 'boxPlot' || cnf.series[i].type === 'boxPlot'\n\n    for (let j = 0; j < ser[i].data.length; j++) {\n      if (typeof ser[i].data[j][1] !== 'undefined') {\n        if (\n          Array.isArray(ser[i].data[j][1]) &&\n          ser[i].data[j][1].length === 4 &&\n          !isBoxPlot\n        ) {\n          // candlestick nested ohlc format\n          this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][1][3]))\n        } else if (ser[i].data[j].length >= 5) {\n          // candlestick non-nested ohlc format\n          this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][4]))\n        } else {\n          this.twoDSeries.push(Utils.parseNumber(ser[i].data[j][1]))\n        }\n        gl.dataFormatXNumeric = true\n      }\n      if (cnf.xaxis.type === 'datetime') {\n        // if timestamps are provided and xaxis type is datetime,\n\n        let ts = new Date(ser[i].data[j][0])\n        ts = new Date(ts).getTime()\n        this.twoDSeriesX.push(ts)\n      } else {\n        this.twoDSeriesX.push(ser[i].data[j][0])\n      }\n    }\n\n    for (let j = 0; j < ser[i].data.length; j++) {\n      if (typeof ser[i].data[j][2] !== 'undefined') {\n        this.threeDSeries.push(ser[i].data[j][2])\n        gl.isDataXYZ = true\n      }\n    }\n  }\n\n  handleFormatXY(ser, i) {\n    const cnf = this.w.config\n    const gl = this.w.globals\n\n    const dt = new DateTime(this.ctx)\n\n    let activeI = i\n    if (gl.collapsedSeriesIndices.indexOf(i) > -1) {\n      // fix #368\n      activeI = this.activeSeriesIndex\n    }\n\n    // get series\n    for (let j = 0; j < ser[i].data.length; j++) {\n      if (typeof ser[i].data[j].y !== 'undefined') {\n        if (Array.isArray(ser[i].data[j].y)) {\n          this.twoDSeries.push(\n            Utils.parseNumber(ser[i].data[j].y[ser[i].data[j].y.length - 1])\n          )\n        } else {\n          this.twoDSeries.push(Utils.parseNumber(ser[i].data[j].y))\n        }\n      }\n\n      if (\n        typeof ser[i].data[j].goals !== 'undefined' &&\n        Array.isArray(ser[i].data[j].goals)\n      ) {\n        if (typeof this.seriesGoals[i] === 'undefined') {\n          this.seriesGoals[i] = []\n        }\n        this.seriesGoals[i].push(ser[i].data[j].goals)\n      } else {\n        if (typeof this.seriesGoals[i] === 'undefined') {\n          this.seriesGoals[i] = []\n        }\n        this.seriesGoals[i].push(null)\n      }\n    }\n\n    // get seriesX\n    for (let j = 0; j < ser[activeI].data.length; j++) {\n      const isXString = typeof ser[activeI].data[j].x === 'string'\n      const isXArr = Array.isArray(ser[activeI].data[j].x)\n      const isXDate =\n        !isXArr && !!dt.isValidDate(ser[activeI].data[j].x.toString())\n\n      if (isXString || isXDate) {\n        // user supplied '01/01/2017' or a date string (a JS date object is not supported)\n        if (isXString || cnf.xaxis.convertedCatToNumeric) {\n          const isRangeColumn = gl.isBarHorizontal && gl.isRangeData\n\n          if (cnf.xaxis.type === 'datetime' && !isRangeColumn) {\n            this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[j].x))\n          } else {\n            // a category and not a numeric x value\n            this.fallbackToCategory = true\n            this.twoDSeriesX.push(ser[activeI].data[j].x)\n          }\n        } else {\n          if (cnf.xaxis.type === 'datetime') {\n            this.twoDSeriesX.push(\n              dt.parseDate(ser[activeI].data[j].x.toString())\n            )\n          } else {\n            gl.dataFormatXNumeric = true\n            gl.isXNumeric = true\n            this.twoDSeriesX.push(parseFloat(ser[activeI].data[j].x))\n          }\n        }\n      } else if (isXArr) {\n        // a multiline label described in array format\n        this.fallbackToCategory = true\n        this.twoDSeriesX.push(ser[activeI].data[j].x)\n      } else {\n        // a numeric value in x property\n        gl.isXNumeric = true\n        gl.dataFormatXNumeric = true\n        this.twoDSeriesX.push(ser[activeI].data[j].x)\n      }\n    }\n\n    if (ser[i].data[0] && typeof ser[i].data[0].z !== 'undefined') {\n      for (let t = 0; t < ser[i].data.length; t++) {\n        this.threeDSeries.push(ser[i].data[t].z)\n      }\n      gl.isDataXYZ = true\n    }\n  }\n\n  handleRangeData(ser, i) {\n    const cnf = this.w.config\n    const gl = this.w.globals\n\n    let range = {}\n    if (this.isFormat2DArray()) {\n      range = this.handleRangeDataFormat('array', ser, i)\n    } else if (this.isFormatXY()) {\n      range = this.handleRangeDataFormat('xy', ser, i)\n    }\n\n    gl.seriesRangeStart.push(range.start)\n    gl.seriesRangeEnd.push(range.end)\n\n    if (cnf.xaxis.type === 'datetime') {\n      gl.seriesRangeBarTimeline.push(range.rangeUniques)\n    }\n\n    // check for overlaps to avoid clashes in a timeline chart\n    gl.seriesRangeBarTimeline.forEach((sr, si) => {\n      if (sr) {\n        sr.forEach((sarr, sarri) => {\n          sarr.y.forEach((arr, arri) => {\n            for (let sri = 0; sri < sarr.y.length; sri++) {\n              if (arri !== sri) {\n                const range1y1 = arr.y1\n                const range1y2 = arr.y2\n                const range2y1 = sarr.y[sri].y1\n                const range2y2 = sarr.y[sri].y2\n                if (range1y1 <= range2y2 && range2y1 <= range1y2) {\n                  if (sarr.overlaps.indexOf(arr.rangeName) < 0) {\n                    sarr.overlaps.push(arr.rangeName)\n                  }\n                  if (sarr.overlaps.indexOf(sarr.y[sri].rangeName) < 0) {\n                    sarr.overlaps.push(sarr.y[sri].rangeName)\n                  }\n                }\n              }\n            }\n          })\n        })\n      }\n    })\n\n    return range\n  }\n\n  handleCandleStickBoxData(ser, i) {\n    const gl = this.w.globals\n\n    let ohlc = {}\n    if (this.isFormat2DArray()) {\n      ohlc = this.handleCandleStickBoxDataFormat('array', ser, i)\n    } else if (this.isFormatXY()) {\n      ohlc = this.handleCandleStickBoxDataFormat('xy', ser, i)\n    }\n\n    gl.seriesCandleO[i] = ohlc.o\n    gl.seriesCandleH[i] = ohlc.h\n    gl.seriesCandleM[i] = ohlc.m\n    gl.seriesCandleL[i] = ohlc.l\n    gl.seriesCandleC[i] = ohlc.c\n\n    return ohlc\n  }\n\n  handleRangeDataFormat(format, ser, i) {\n    const rangeStart = []\n    const rangeEnd = []\n\n    const uniqueKeys = ser[i].data\n      .filter(\n        (thing, index, self) => index === self.findIndex((t) => t.x === thing.x)\n      )\n      .map((r, index) => {\n        return {\n          x: r.x,\n          overlaps: [],\n          y: []\n        }\n      })\n\n    const err =\n      'Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts'\n\n    const serObj = new Series(this.ctx)\n    const activeIndex = serObj.getActiveConfigSeriesIndex()\n    if (format === 'array') {\n      if (ser[activeIndex].data[0][1].length !== 2) {\n        throw new Error(err)\n      }\n      for (let j = 0; j < ser[i].data.length; j++) {\n        rangeStart.push(ser[i].data[j][1][0])\n        rangeEnd.push(ser[i].data[j][1][1])\n      }\n    } else if (format === 'xy') {\n      if (ser[activeIndex].data[0].y.length !== 2) {\n        throw new Error(err)\n      }\n      for (let j = 0; j < ser[i].data.length; j++) {\n        const id = Utils.randomId()\n        const x = ser[i].data[j].x\n        const y = {\n          y1: ser[i].data[j].y[0],\n          y2: ser[i].data[j].y[1],\n          rangeName: id\n        }\n\n        // mutating config object by adding a new property\n        // TODO: As this is specifically for timeline rangebar charts, update the docs mentioning the series only supports xy format\n        ser[i].data[j].rangeName = id\n\n        const uI = uniqueKeys.findIndex((t) => t.x === x)\n        uniqueKeys[uI].y.push(y)\n\n        rangeStart.push(y.y1)\n        rangeEnd.push(y.y2)\n      }\n    }\n\n    return {\n      start: rangeStart,\n      end: rangeEnd,\n      rangeUniques: uniqueKeys\n    }\n  }\n\n  handleCandleStickBoxDataFormat(format, ser, i) {\n    const w = this.w\n    const isBoxPlot =\n      w.config.chart.type === 'boxPlot' || w.config.series[i].type === 'boxPlot'\n\n    const serO = []\n    const serH = []\n    const serM = []\n    const serL = []\n    const serC = []\n\n    if (format === 'array') {\n      if (\n        (isBoxPlot && ser[i].data[0].length === 6) ||\n        (!isBoxPlot && ser[i].data[0].length === 5)\n      ) {\n        for (let j = 0; j < ser[i].data.length; j++) {\n          serO.push(ser[i].data[j][1])\n          serH.push(ser[i].data[j][2])\n\n          if (isBoxPlot) {\n            serM.push(ser[i].data[j][3])\n            serL.push(ser[i].data[j][4])\n            serC.push(ser[i].data[j][5])\n          } else {\n            serL.push(ser[i].data[j][3])\n            serC.push(ser[i].data[j][4])\n          }\n        }\n      } else {\n        for (let j = 0; j < ser[i].data.length; j++) {\n          if (Array.isArray(ser[i].data[j][1])) {\n            serO.push(ser[i].data[j][1][0])\n            serH.push(ser[i].data[j][1][1])\n            if (isBoxPlot) {\n              serM.push(ser[i].data[j][1][2])\n              serL.push(ser[i].data[j][1][3])\n              serC.push(ser[i].data[j][1][4])\n            } else {\n              serL.push(ser[i].data[j][1][2])\n              serC.push(ser[i].data[j][1][3])\n            }\n          }\n        }\n      }\n    } else if (format === 'xy') {\n      for (let j = 0; j < ser[i].data.length; j++) {\n        if (Array.isArray(ser[i].data[j].y)) {\n          serO.push(ser[i].data[j].y[0])\n          serH.push(ser[i].data[j].y[1])\n          if (isBoxPlot) {\n            serM.push(ser[i].data[j].y[2])\n            serL.push(ser[i].data[j].y[3])\n            serC.push(ser[i].data[j].y[4])\n          } else {\n            serL.push(ser[i].data[j].y[2])\n            serC.push(ser[i].data[j].y[3])\n          }\n        }\n      }\n    }\n\n    return {\n      o: serO,\n      h: serH,\n      m: serM,\n      l: serL,\n      c: serC\n    }\n  }\n\n  parseDataAxisCharts(ser, ctx = this.ctx) {\n    const cnf = this.w.config\n    const gl = this.w.globals\n\n    const dt = new DateTime(ctx)\n\n    const xlabels =\n      cnf.labels.length > 0 ? cnf.labels.slice() : cnf.xaxis.categories.slice()\n\n    gl.isTimelineBar =\n      (cnf.chart.type === 'rangeBar' || cnf.chart.type === 'gantt') &&\n      cnf.xaxis.type === 'datetime'\n\n    const handleDates = () => {\n      for (let j = 0; j < xlabels.length; j++) {\n        if (typeof xlabels[j] === 'string') {\n          // user provided date strings\n          let isDate = dt.isValidDate(xlabels[j])\n          if (isDate) {\n            this.twoDSeriesX.push(dt.parseDate(xlabels[j]))\n          } else {\n            throw new Error(\n              'You have provided invalid Date format. Please provide a valid JavaScript Date'\n            )\n          }\n        } else {\n          // user provided timestamps\n          this.twoDSeriesX.push(xlabels[j])\n        }\n      }\n    }\n\n    for (let i = 0; i < ser.length; i++) {\n      this.twoDSeries = []\n      this.twoDSeriesX = []\n      this.threeDSeries = []\n\n      if (typeof ser[i].data === 'undefined') {\n        console.error(\n          \"It is a possibility that you may have not included 'data' property in series.\"\n        )\n        return\n      }\n\n      if (\n        cnf.chart.type === 'rangeBar' ||\n        cnf.chart.type === 'rangeArea' ||\n        cnf.chart.type === 'gantt' ||\n        ser[i].type === 'rangeBar' ||\n        ser[i].type === 'rangeArea' ||\n        ser[i].type === 'gantt'\n      ) {\n        gl.isRangeData = true\n        this.handleRangeData(ser, i)\n      }\n\n      if (this.isMultiFormat()) {\n        if (this.isFormat2DArray()) {\n          this.handleFormat2DArray(ser, i)\n        } else if (this.isFormatXY()) {\n          this.handleFormatXY(ser, i)\n        }\n\n        if (\n          cnf.chart.type === 'candlestick' ||\n          ser[i].type === 'candlestick' ||\n          cnf.chart.type === 'boxPlot' ||\n          ser[i].type === 'boxPlot'\n        ) {\n          this.handleCandleStickBoxData(ser, i)\n        }\n\n        gl.series.push(this.twoDSeries)\n        gl.labels.push(this.twoDSeriesX)\n        gl.seriesX.push(this.twoDSeriesX)\n        gl.seriesGoals = this.seriesGoals\n\n        if (i === this.activeSeriesIndex && !this.fallbackToCategory) {\n          gl.isXNumeric = true\n        }\n      } else {\n        if (cnf.xaxis.type === 'datetime') {\n          // user didn't supplied [{x,y}] or [[x,y]], but single array in data.\n          // Also labels/categories were supplied differently\n          gl.isXNumeric = true\n\n          handleDates()\n\n          gl.seriesX.push(this.twoDSeriesX)\n        } else if (cnf.xaxis.type === 'numeric') {\n          gl.isXNumeric = true\n\n          if (xlabels.length > 0) {\n            this.twoDSeriesX = xlabels\n            gl.seriesX.push(this.twoDSeriesX)\n          }\n        }\n        gl.labels.push(this.twoDSeriesX)\n        const singleArray = ser[i].data.map((d) => Utils.parseNumber(d))\n        gl.series.push(singleArray)\n      }\n\n      gl.seriesZ.push(this.threeDSeries)\n\n      if (ser[i].name !== undefined) {\n        gl.seriesNames.push(ser[i].name)\n      } else {\n        gl.seriesNames.push('series-' + parseInt(i + 1, 10))\n      }\n\n      // overrided default color if user inputs color with series data\n      if (ser[i].color !== undefined) {\n        gl.seriesColors.push(ser[i].color)\n      } else {\n        gl.seriesColors.push(undefined)\n      }\n    }\n\n    return this.w\n  }\n\n  parseDataNonAxisCharts(ser) {\n    const gl = this.w.globals\n    const cnf = this.w.config\n\n    gl.series = ser.slice()\n    gl.seriesNames = cnf.labels.slice()\n    for (let i = 0; i < gl.series.length; i++) {\n      if (gl.seriesNames[i] === undefined) {\n        gl.seriesNames.push('series-' + (i + 1))\n      }\n    }\n\n    return this.w\n  }\n\n  /** User possibly set string categories in xaxis.categories or labels prop\n   * Or didn't set xaxis labels at all - in which case we manually do it.\n   * If user passed series data as [[3, 2], [4, 5]] or [{ x: 3, y: 55 }],\n   * this shouldn't be called\n   * @param {array} ser - the series which user passed to the config\n   */\n  handleExternalLabelsData(ser) {\n    const cnf = this.w.config\n    const gl = this.w.globals\n\n    if (cnf.xaxis.categories.length > 0) {\n      // user provided labels in xaxis.category prop\n      gl.labels = cnf.xaxis.categories\n    } else if (cnf.labels.length > 0) {\n      // user provided labels in labels props\n      gl.labels = cnf.labels.slice()\n    } else if (this.fallbackToCategory) {\n      // user provided labels in x prop in [{ x: 3, y: 55 }] data, and those labels are already stored in gl.labels[0], so just re-arrange the gl.labels array\n      gl.labels = gl.labels[0]\n\n      if (gl.seriesRangeBarTimeline.length) {\n        gl.seriesRangeBarTimeline.map((srt) => {\n          srt.forEach((sr) => {\n            if (gl.labels.indexOf(sr.x) < 0 && sr.x) {\n              gl.labels.push(sr.x)\n            }\n          })\n        })\n        gl.labels = gl.labels.filter(\n          (elem, pos, arr) => arr.indexOf(elem) === pos\n        )\n      }\n\n      if (cnf.xaxis.convertedCatToNumeric) {\n        const defaults = new Defaults(cnf)\n        defaults.convertCatToNumericXaxis(cnf, this.ctx, gl.seriesX[0])\n        this._generateExternalLabels(ser)\n      }\n    } else {\n      this._generateExternalLabels(ser)\n    }\n  }\n\n  _generateExternalLabels(ser) {\n    const gl = this.w.globals\n    const cnf = this.w.config\n    // user didn't provided any labels, fallback to 1-2-3-4-5\n    let labelArr = []\n\n    if (gl.axisCharts) {\n      if (gl.series.length > 0) {\n        for (let i = 0; i < gl.series[gl.maxValsInArrayIndex].length; i++) {\n          labelArr.push(i + 1)\n        }\n      }\n\n      gl.seriesX = []\n      // create gl.seriesX as it will be used in calculations of x positions\n      for (let i = 0; i < ser.length; i++) {\n        gl.seriesX.push(labelArr)\n      }\n\n      // turn on the isXNumeric flag to allow minX and maxX to function properly\n      gl.isXNumeric = true\n    }\n\n    // no series to pull labels from, put a 0-10 series\n    // possibly, user collapsed all series. Hence we can't work with above calc\n    if (labelArr.length === 0) {\n      labelArr = gl.axisCharts\n        ? []\n        : gl.series.map((gls, glsi) => {\n            return glsi + 1\n          })\n      for (let i = 0; i < ser.length; i++) {\n        gl.seriesX.push(labelArr)\n      }\n    }\n\n    // Finally, pass the labelArr in gl.labels which will be printed on x-axis\n    gl.labels = labelArr\n\n    if (cnf.xaxis.convertedCatToNumeric) {\n      gl.categoryLabels = labelArr.map((l) => {\n        return cnf.xaxis.labels.formatter(l)\n      })\n    }\n\n    // Turn on this global flag to indicate no labels were provided by user\n    gl.noLabelsProvided = true\n  }\n\n  // Segregate user provided data into appropriate vars\n  parseData(ser) {\n    let w = this.w\n    let cnf = w.config\n    let gl = w.globals\n    this.excludeCollapsedSeriesInYAxis()\n\n    // If we detected string in X prop of series, we fallback to category x-axis\n    this.fallbackToCategory = false\n\n    this.ctx.core.resetGlobals()\n    this.ctx.core.isMultipleY()\n\n    if (gl.axisCharts) {\n      // axisCharts includes line / area / column / scatter\n      this.parseDataAxisCharts(ser)\n    } else {\n      // non-axis charts are pie / donut\n      this.parseDataNonAxisCharts(ser)\n    }\n\n    this.coreUtils.getLargestSeries()\n\n    // set Null values to 0 in all series when user hides/shows some series\n    if (cnf.chart.type === 'bar' && cnf.chart.stacked) {\n      const series = new Series(this.ctx)\n      gl.series = series.setNullSeriesToZeroValues(gl.series)\n    }\n\n    this.coreUtils.getSeriesTotals()\n    if (gl.axisCharts) {\n      this.coreUtils.getStackedSeriesTotals()\n    }\n\n    this.coreUtils.getPercentSeries()\n\n    if (\n      !gl.dataFormatXNumeric &&\n      (!gl.isXNumeric ||\n        (cnf.xaxis.type === 'numeric' &&\n          cnf.labels.length === 0 &&\n          cnf.xaxis.categories.length === 0))\n    ) {\n      // x-axis labels couldn't be detected; hence try searching every option in config\n      this.handleExternalLabelsData(ser)\n    }\n\n    // check for multiline xaxis\n    const catLabels = this.coreUtils.getCategoryLabels(gl.labels)\n    for (let l = 0; l < catLabels.length; l++) {\n      if (Array.isArray(catLabels[l])) {\n        gl.isMultiLineX = true\n        break\n      }\n    }\n  }\n\n  excludeCollapsedSeriesInYAxis() {\n    const w = this.w\n    w.globals.ignoreYAxisIndexes = w.globals.collapsedSeries.map(\n      (collapsed, i) => {\n        // fix issue #1215\n        // if stacked, not returning collapsed.index to preserve yaxis\n        if (this.w.globals.isMultipleYAxis && !w.config.chart.stacked) {\n          return collapsed.index\n        }\n      }\n    )\n  }\n}\n","import DateTime from '../utils/DateTime'\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts Formatter Class for setting value formatters for axes as well as tooltips.\n *\n * @module Formatters\n **/\n\nclass Formatters {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    this.tooltipKeyFormat = 'dd MMM'\n  }\n\n  xLabelFormat(fn, val, timestamp, opts) {\n    let w = this.w\n\n    if (w.config.xaxis.type === 'datetime') {\n      if (w.config.xaxis.labels.formatter === undefined) {\n        // if user has not specified a custom formatter, use the default tooltip.x.format\n        if (w.config.tooltip.x.formatter === undefined) {\n          let datetimeObj = new DateTime(this.ctx)\n          return datetimeObj.formatDate(\n            datetimeObj.getDate(val),\n            w.config.tooltip.x.format\n          )\n        }\n      }\n    }\n\n    return fn(val, timestamp, opts)\n  }\n\n  defaultGeneralFormatter(val) {\n    if (Array.isArray(val)) {\n      return val.map((v) => {\n        return v\n      })\n    } else {\n      return val\n    }\n  }\n\n  defaultYFormatter(v, yaxe, i) {\n    let w = this.w\n\n    if (Utils.isNumber(v)) {\n      if (w.globals.yValueDecimal !== 0) {\n        v = v.toFixed(\n          yaxe.decimalsInFloat !== undefined\n            ? yaxe.decimalsInFloat\n            : w.globals.yValueDecimal\n        )\n      } else if (w.globals.maxYArr[i] - w.globals.minYArr[i] < 5) {\n        v = v.toFixed(1)\n      } else {\n        v = v.toFixed(0)\n      }\n    }\n    return v\n  }\n\n  setLabelFormatters() {\n    let w = this.w\n\n    w.globals.xaxisTooltipFormatter = (val) => {\n      return this.defaultGeneralFormatter(val)\n    }\n\n    w.globals.ttKeyFormatter = (val) => {\n      return this.defaultGeneralFormatter(val)\n    }\n\n    w.globals.ttZFormatter = (val) => {\n      return val\n    }\n\n    w.globals.legendFormatter = (val) => {\n      return this.defaultGeneralFormatter(val)\n    }\n\n    // formatter function will always overwrite format property\n    if (w.config.xaxis.labels.formatter !== undefined) {\n      w.globals.xLabelFormatter = w.config.xaxis.labels.formatter\n    } else {\n      w.globals.xLabelFormatter = (val) => {\n        if (Utils.isNumber(val)) {\n          if (\n            !w.config.xaxis.convertedCatToNumeric &&\n            w.config.xaxis.type === 'numeric'\n          ) {\n            if (Utils.isNumber(w.config.xaxis.decimalsInFloat)) {\n              return val.toFixed(w.config.xaxis.decimalsInFloat)\n            } else {\n              const diff = w.globals.maxX - w.globals.minX\n              if (diff > 0 && diff < 100) {\n                return val.toFixed(1)\n              }\n              return val.toFixed(0)\n            }\n          }\n\n          if (w.globals.isBarHorizontal) {\n            const range = w.globals.maxY - w.globals.minYArr\n            if (range < 4) {\n              return val.toFixed(1)\n            }\n          }\n          return val.toFixed(0)\n        }\n        return val\n      }\n    }\n\n    if (typeof w.config.tooltip.x.formatter === 'function') {\n      w.globals.ttKeyFormatter = w.config.tooltip.x.formatter\n    } else {\n      w.globals.ttKeyFormatter = w.globals.xLabelFormatter\n    }\n\n    if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n      w.globals.xaxisTooltipFormatter = w.config.xaxis.tooltip.formatter\n    }\n\n    if (Array.isArray(w.config.tooltip.y)) {\n      w.globals.ttVal = w.config.tooltip.y\n    } else {\n      if (w.config.tooltip.y.formatter !== undefined) {\n        w.globals.ttVal = w.config.tooltip.y\n      }\n    }\n\n    if (w.config.tooltip.z.formatter !== undefined) {\n      w.globals.ttZFormatter = w.config.tooltip.z.formatter\n    }\n\n    // legend formatter - if user wants to append any global values of series to legend text\n    if (w.config.legend.formatter !== undefined) {\n      w.globals.legendFormatter = w.config.legend.formatter\n    }\n\n    // formatter function will always overwrite format property\n    w.config.yaxis.forEach((yaxe, i) => {\n      if (yaxe.labels.formatter !== undefined) {\n        w.globals.yLabelFormatters[i] = yaxe.labels.formatter\n      } else {\n        w.globals.yLabelFormatters[i] = (val) => {\n          if (!w.globals.xyCharts) return val\n\n          if (Array.isArray(val)) {\n            return val.map((v) => {\n              return this.defaultYFormatter(v, yaxe, i)\n            })\n          } else {\n            return this.defaultYFormatter(val, yaxe, i)\n          }\n        }\n      }\n    })\n\n    return w.globals\n  }\n\n  heatmapLabelFormatters() {\n    const w = this.w\n    if (w.config.chart.type === 'heatmap') {\n      w.globals.yAxisScale[0].result = w.globals.seriesNames.slice()\n\n      //  get the longest string from the labels array and also apply label formatter to it\n      let longest = w.globals.seriesNames.reduce(\n        (a, b) => (a.length > b.length ? a : b),\n        0\n      )\n      w.globals.yAxisScale[0].niceMax = longest\n      w.globals.yAxisScale[0].niceMin = longest\n    }\n  }\n}\n\nexport default Formatters\n","import Formatters from '../Formatters'\nimport Graphics from '../Graphics'\nimport CoreUtils from '../CoreUtils'\nimport DateTime from '../../utils/DateTime'\n\nexport default class AxesUtils {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  // Based on the formatter function, get the label text and position\n  getLabel(labels, timescaleLabels, x, i, drawnLabels = [], fontSize = '12px') {\n    const w = this.w\n    let rawLabel = typeof labels[i] === 'undefined' ? '' : labels[i]\n    let label = rawLabel\n\n    let xlbFormatter = w.globals.xLabelFormatter\n    let customFormatter = w.config.xaxis.labels.formatter\n\n    let isBold = false\n\n    let xFormat = new Formatters(this.ctx)\n    let timestamp = rawLabel\n    label = xFormat.xLabelFormat(xlbFormatter, rawLabel, timestamp, {\n      i,\n      dateFormatter: new DateTime(this.ctx).formatDate,\n      w\n    })\n\n    if (customFormatter !== undefined) {\n      label = customFormatter(rawLabel, labels[i], {\n        i,\n        dateFormatter: new DateTime(this.ctx).formatDate,\n        w\n      })\n    }\n\n    const determineHighestUnit = (unit) => {\n      let highestUnit = null\n      timescaleLabels.forEach((t) => {\n        if (t.unit === 'month') {\n          highestUnit = 'year'\n        } else if (t.unit === 'day') {\n          highestUnit = 'month'\n        } else if (t.unit === 'hour') {\n          highestUnit = 'day'\n        } else if (t.unit === 'minute') {\n          highestUnit = 'hour'\n        }\n      })\n\n      return highestUnit === unit\n    }\n    if (timescaleLabels.length > 0) {\n      isBold = determineHighestUnit(timescaleLabels[i].unit)\n      x = timescaleLabels[i].position\n      label = timescaleLabels[i].value\n    } else {\n      if (w.config.xaxis.type === 'datetime' && customFormatter === undefined) {\n        label = ''\n      }\n    }\n\n    if (typeof label === 'undefined') label = ''\n\n    label = Array.isArray(label) ? label : label.toString()\n\n    let graphics = new Graphics(this.ctx)\n    let textRect = {}\n    if (w.globals.rotateXLabels) {\n      textRect = graphics.getTextRects(\n        label,\n        parseInt(fontSize, 10),\n        null,\n        `rotate(${w.config.xaxis.labels.rotate} 0 0)`,\n        false\n      )\n    } else {\n      textRect = graphics.getTextRects(label, parseInt(fontSize, 10))\n    }\n\n    const allowDuplicatesInTimeScale =\n      !w.config.xaxis.labels.showDuplicates && this.ctx.timeScale\n\n    if (\n      !Array.isArray(label) &&\n      (label.indexOf('NaN') === 0 ||\n        label.toLowerCase().indexOf('invalid') === 0 ||\n        label.toLowerCase().indexOf('infinity') >= 0 ||\n        (drawnLabels.indexOf(label) >= 0 && allowDuplicatesInTimeScale))\n    ) {\n      label = ''\n    }\n\n    return {\n      x,\n      text: label,\n      textRect,\n      isBold\n    }\n  }\n\n  checkLabelBasedOnTickamount(i, label, labelsLen) {\n    const w = this.w\n\n    let ticks = w.config.xaxis.tickAmount\n    if (ticks === 'dataPoints') ticks = Math.round(w.globals.gridWidth / 120)\n\n    if (ticks > labelsLen) return label\n    let tickMultiple = Math.round(labelsLen / (ticks + 1))\n\n    if (i % tickMultiple === 0) {\n      return label\n    } else {\n      label.text = ''\n    }\n\n    return label\n  }\n\n  checkForOverflowingLabels(\n    i,\n    label,\n    labelsLen,\n    drawnLabels,\n    drawnLabelsRects\n  ) {\n    const w = this.w\n\n    if (i === 0) {\n      // check if first label is being truncated\n      if (w.globals.skipFirstTimelinelabel) {\n        label.text = ''\n      }\n    }\n\n    if (i === labelsLen - 1) {\n      // check if last label is being truncated\n      if (w.globals.skipLastTimelinelabel) {\n        label.text = ''\n      }\n    }\n\n    if (w.config.xaxis.labels.hideOverlappingLabels && drawnLabels.length > 0) {\n      const prev = drawnLabelsRects[drawnLabelsRects.length - 1]\n      if (\n        label.x <\n        prev.textRect.width /\n          (w.globals.rotateXLabels\n            ? Math.abs(w.config.xaxis.labels.rotate) / 12\n            : 1.01) +\n          prev.x\n      ) {\n        label.text = ''\n      }\n    }\n\n    return label\n  }\n\n  checkForReversedLabels(i, labels) {\n    const w = this.w\n    if (w.config.yaxis[i] && w.config.yaxis[i].reversed) {\n      labels.reverse()\n    }\n    return labels\n  }\n\n  isYAxisHidden(index) {\n    const w = this.w\n    const coreUtils = new CoreUtils(this.ctx)\n\n    return (\n      !w.config.yaxis[index].show ||\n      (!w.config.yaxis[index].showForNullSeries &&\n        coreUtils.isSeriesNull(index) &&\n        w.globals.collapsedSeriesIndices.indexOf(index) === -1)\n    )\n  }\n\n  // get the label color for y-axis\n  // realIndex is the actual series index, while i is the tick Index\n  getYAxisForeColor(yColors, realIndex) {\n    const w = this.w\n    if (Array.isArray(yColors) && w.globals.yAxisScale[realIndex]) {\n      this.ctx.theme.pushExtraColors(\n        yColors,\n        w.globals.yAxisScale[realIndex].result.length,\n        false\n      )\n    }\n    return yColors\n  }\n\n  drawYAxisTicks(\n    x,\n    tickAmount,\n    axisBorder,\n    axisTicks,\n    realIndex,\n    labelsDivider,\n    elYaxis\n  ) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    // initial label position = 0;\n    let t = w.globals.translateY\n\n    if (axisTicks.show && tickAmount > 0) {\n      if (w.config.yaxis[realIndex].opposite === true) x = x + axisTicks.width\n\n      for (let i = tickAmount; i >= 0; i--) {\n        let tY =\n          t + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY - 1\n        if (w.globals.isBarHorizontal) {\n          tY = labelsDivider * i\n        }\n\n        if (w.config.chart.type === 'heatmap') {\n          tY = tY + labelsDivider / 2\n        }\n        let elTick = graphics.drawLine(\n          x + axisBorder.offsetX - axisTicks.width + axisTicks.offsetX,\n          tY + axisTicks.offsetY,\n          x + axisBorder.offsetX + axisTicks.offsetX,\n          tY + axisTicks.offsetY,\n          axisTicks.color\n        )\n        elYaxis.add(elTick)\n        t = t + labelsDivider\n      }\n    }\n  }\n}\n","import Data from '../modules/Data'\nimport AxesUtils from '../modules/axes/AxesUtils'\nimport Series from '../modules/Series'\nimport Utils from '../utils/Utils'\n\nclass Exports {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  scaleSvgNode(svg, scale) {\n    // get current both width and height of the svg\n    let svgWidth = parseFloat(svg.getAttributeNS(null, 'width'))\n    let svgHeight = parseFloat(svg.getAttributeNS(null, 'height'))\n    // set new width and height based on the scale\n    svg.setAttributeNS(null, 'width', svgWidth * scale)\n    svg.setAttributeNS(null, 'height', svgHeight * scale)\n    svg.setAttributeNS(null, 'viewBox', '0 0 ' + svgWidth + ' ' + svgHeight)\n  }\n\n  fixSvgStringForIe11(svgData) {\n    // IE11 generates broken SVG that we have to fix by using regex\n    if (!Utils.isIE11()) {\n      // not IE11 - noop\n      return svgData\n    }\n\n    // replace second occurrence of \"xmlns\" attribute with \"xmlns:xlink\" with correct url + add xmlns:svgjs\n    let nXmlnsSeen = 0\n    let result = svgData.replace(\n      /xmlns=\"http:\\/\\/www.w3.org\\/2000\\/svg\"/g,\n      (match) => {\n        nXmlnsSeen++\n        return nXmlnsSeen === 2\n          ? 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:svgjs=\"http://svgjs.com/svgjs\"'\n          : match\n      }\n    )\n\n    // remove the invalid empty namespace declarations\n    result = result.replace(/xmlns:NS\\d+=\"\"/g, '')\n    // remove these broken namespaces from attributes\n    result = result.replace(/NS\\d+:(\\w+:\\w+=\")/g, '$1')\n\n    return result\n  }\n\n  getSvgString(scale) {\n    let svgString = this.w.globals.dom.Paper.svg()\n    // in case the scale is different than 1, the svg needs to be rescaled\n    if (scale !== 1) {\n      // clone the svg node so it remains intact in the UI\n      const svgNode = this.w.globals.dom.Paper.node.cloneNode(true)\n      // scale the image\n      this.scaleSvgNode(svgNode, scale)\n      // get the string representation of the svgNode\n      svgString = new XMLSerializer().serializeToString(svgNode)\n    }\n    return this.fixSvgStringForIe11(svgString)\n  }\n\n  cleanup() {\n    const w = this.w\n\n    // hide some elements to avoid printing them on exported svg\n    const xcrosshairs = w.globals.dom.baseEl.getElementsByClassName(\n      'apexcharts-xcrosshairs'\n    )\n    const ycrosshairs = w.globals.dom.baseEl.getElementsByClassName(\n      'apexcharts-ycrosshairs'\n    )\n    const zoomSelectionRects = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-zoom-rect, .apexcharts-selection-rect'\n    )\n    Array.prototype.forEach.call(zoomSelectionRects, (z) => {\n      z.setAttribute('width', 0)\n    })\n    if (xcrosshairs && xcrosshairs[0]) {\n      xcrosshairs[0].setAttribute('x', -500)\n      xcrosshairs[0].setAttribute('x1', -500)\n      xcrosshairs[0].setAttribute('x2', -500)\n    }\n    if (ycrosshairs && ycrosshairs[0]) {\n      ycrosshairs[0].setAttribute('y', -100)\n      ycrosshairs[0].setAttribute('y1', -100)\n      ycrosshairs[0].setAttribute('y2', -100)\n    }\n  }\n\n  svgUrl() {\n    this.cleanup()\n\n    const svgData = this.getSvgString()\n    const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' })\n    return URL.createObjectURL(svgBlob)\n  }\n\n  dataURI(options) {\n    return new Promise((resolve) => {\n      const w = this.w\n\n      const scale = options\n        ? options.scale || options.width / w.globals.svgWidth\n        : 1\n\n      this.cleanup()\n      const canvas = document.createElement('canvas')\n      canvas.width = w.globals.svgWidth * scale\n      canvas.height = parseInt(w.globals.dom.elWrap.style.height, 10) * scale // because of resizeNonAxisCharts\n\n      const canvasBg =\n        w.config.chart.background === 'transparent'\n          ? '#fff'\n          : w.config.chart.background\n\n      let ctx = canvas.getContext('2d')\n      ctx.fillStyle = canvasBg\n      ctx.fillRect(0, 0, canvas.width * scale, canvas.height * scale)\n\n      const svgData = this.getSvgString(scale)\n\n      if (window.canvg && Utils.isIE11()) {\n        // use canvg as a polyfill to workaround ie11 considering a canvas with loaded svg 'unsafe'\n        // without ignoreClear we lose our background color; without ignoreDimensions some grid lines become invisible\n        let v = window.canvg.Canvg.fromString(ctx, svgData, {\n          ignoreClear: true,\n          ignoreDimensions: true\n        })\n        // render the svg to canvas\n        v.start()\n\n        let blob = canvas.msToBlob()\n        // dispose - missing this will cause a memory leak\n        v.stop()\n\n        resolve({ blob })\n      } else {\n        const svgUrl = 'data:image/svg+xml,' + encodeURIComponent(svgData)\n        let img = new Image()\n        img.crossOrigin = 'anonymous'\n\n        img.onload = () => {\n          ctx.drawImage(img, 0, 0)\n\n          if (canvas.msToBlob) {\n            // IE and Edge can't navigate to data urls, so we return the blob instead\n            let blob = canvas.msToBlob()\n            resolve({ blob })\n          } else {\n            let imgURI = canvas.toDataURL('image/png')\n            resolve({ imgURI })\n          }\n        }\n\n        img.src = svgUrl\n      }\n    })\n  }\n\n  exportToSVG() {\n    this.triggerDownload(\n      this.svgUrl(),\n      this.w.config.chart.toolbar.export.svg.filename,\n      '.svg'\n    )\n  }\n\n  exportToPng() {\n    this.dataURI().then(({ imgURI, blob }) => {\n      if (blob) {\n        navigator.msSaveOrOpenBlob(blob, this.w.globals.chartID + '.png')\n      } else {\n        this.triggerDownload(\n          imgURI,\n          this.w.config.chart.toolbar.export.png.filename,\n          '.png'\n        )\n      }\n    })\n  }\n\n  exportToCSV({ series, columnDelimiter, lineDelimiter = '\\n' }) {\n    const w = this.w\n\n    let columns = []\n    let rows = []\n    let result = 'data:text/csv;charset=utf-8,\\uFEFF'\n\n    const isTimeStamp = (num) => {\n      return w.config.xaxis.type === 'datetime' && String(num).length >= 10\n    }\n    const dataFormat = new Data(this.ctx)\n\n    const axesUtils = new AxesUtils(this.ctx)\n    const getCat = (i) => {\n      let cat = ''\n\n      // pie / donut/ radial\n      if (!w.globals.axisCharts) {\n        cat = w.config.labels[i]\n      } else {\n        // xy charts\n\n        // non datetime\n        if (\n          w.config.xaxis.type === 'category' ||\n          w.config.xaxis.convertedCatToNumeric\n        ) {\n          if (w.globals.isBarHorizontal) {\n            let lbFormatter = w.globals.yLabelFormatters[0]\n            let sr = new Series(this.ctx)\n            let activeSeries = sr.getActiveConfigSeriesIndex()\n\n            cat = lbFormatter(w.globals.labels[i], {\n              seriesIndex: activeSeries,\n              dataPointIndex: i,\n              w\n            })\n          } else {\n            cat = axesUtils.getLabel(\n              w.globals.labels,\n              w.globals.timescaleLabels,\n              0,\n              i\n            ).text\n          }\n        }\n\n        // datetime, but labels specified in categories or labels\n        if (w.config.xaxis.type === 'datetime') {\n          if (w.config.xaxis.categories.length) {\n            cat = w.config.xaxis.categories[i]\n          } else if (w.config.labels.length) {\n            cat = w.config.labels[i]\n          }\n        }\n      }\n\n      if (Array.isArray(cat)) {\n        cat = cat.join(' ')\n      }\n\n      return Utils.isNumber(cat) ? cat : cat.split(columnDelimiter).join('')\n    }\n\n    const handleAxisRowsColumns = (s, sI) => {\n      if (columns.length && sI === 0) {\n        rows.push(columns.join(columnDelimiter))\n      }\n\n      if (s.data && s.data.length) {\n        for (let i = 0; i < s.data.length; i++) {\n          columns = []\n\n          let cat = getCat(i)\n          if (!cat) {\n            if (dataFormat.isFormatXY()) {\n              cat = series[sI].data[i].x\n            } else if (dataFormat.isFormat2DArray()) {\n              cat = series[sI].data[i] ? series[sI].data[i][0] : ''\n            }\n          }\n\n          if (sI === 0) {\n            columns.push(\n              isTimeStamp(cat)\n                ? w.config.chart.toolbar.export.csv.dateFormatter(cat)\n                : Utils.isNumber(cat)\n                ? cat\n                : cat.split(columnDelimiter).join('')\n            )\n\n            for (let ci = 0; ci < w.globals.series.length; ci++) {\n              columns.push(w.globals.series[ci][i])\n            }\n          }\n\n          if (\n            w.config.chart.type === 'candlestick' ||\n            (s.type && s.type === 'candlestick')\n          ) {\n            columns.pop()\n            columns.push(w.globals.seriesCandleO[sI][i])\n            columns.push(w.globals.seriesCandleH[sI][i])\n            columns.push(w.globals.seriesCandleL[sI][i])\n            columns.push(w.globals.seriesCandleC[sI][i])\n          }\n\n          if (\n            w.config.chart.type === 'boxPlot' ||\n            (s.type && s.type === 'boxPlot')\n          ) {\n            columns.pop()\n            columns.push(w.globals.seriesCandleO[sI][i])\n            columns.push(w.globals.seriesCandleH[sI][i])\n            columns.push(w.globals.seriesCandleM[sI][i])\n            columns.push(w.globals.seriesCandleL[sI][i])\n            columns.push(w.globals.seriesCandleC[sI][i])\n          }\n\n          if (w.config.chart.type === 'rangeBar') {\n            columns.pop()\n            columns.push(w.globals.seriesRangeStart[sI][i])\n            columns.push(w.globals.seriesRangeEnd[sI][i])\n          }\n\n          if (w.config.chart.type === 'gantt') {\n            columns.pop()\n            columns.push(w.globals.seriesRangeStart[sI][i])\n            columns.push(w.globals.seriesRangeEnd[sI][i])\n          }\n\n          if (columns.length) {\n            rows.push(columns.join(columnDelimiter))\n          }\n        }\n      }\n    }\n\n    columns.push(w.config.chart.toolbar.export.csv.headerCategory)\n    series.map((s, sI) => {\n      const sname = s.name ? s.name : `series-${sI}`\n      if (w.globals.axisCharts) {\n        columns.push(\n          sname.split(columnDelimiter).join('')\n            ? sname.split(columnDelimiter).join('')\n            : `series-${sI}`\n        )\n      }\n    })\n\n    if (!w.globals.axisCharts) {\n      columns.push(w.config.chart.toolbar.export.csv.headerValue)\n      rows.push(columns.join(columnDelimiter))\n    }\n    series.map((s, sI) => {\n      if (w.globals.axisCharts) {\n        handleAxisRowsColumns(s, sI)\n      } else {\n        columns = []\n\n        columns.push(w.globals.labels[sI].split(columnDelimiter).join(''))\n        columns.push(w.globals.series[sI])\n        rows.push(columns.join(columnDelimiter))\n      }\n    })\n\n    result += rows.join(lineDelimiter)\n\n    this.triggerDownload(\n      encodeURI(result),\n      w.config.chart.toolbar.export.csv.filename,\n      '.csv'\n    )\n  }\n\n  triggerDownload(href, filename, ext) {\n    const downloadLink = document.createElement('a')\n    downloadLink.href = href\n    downloadLink.download = (filename ? filename : this.w.globals.chartID) + ext\n    document.body.appendChild(downloadLink)\n    downloadLink.click()\n    document.body.removeChild(downloadLink)\n  }\n}\n\nexport default Exports\n","import Graphics from '../Graphics'\nimport AxesUtils from './AxesUtils'\n\n/**\n * ApexCharts XAxis Class for drawing X-Axis.\n *\n * @module XAxis\n **/\n\nexport default class XAxis {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    const w = this.w\n    this.axesUtils = new AxesUtils(ctx)\n\n    this.xaxisLabels = w.globals.labels.slice()\n    if (w.globals.timescaleLabels.length > 0 && !w.globals.isBarHorizontal) {\n      //  timeline labels are there and chart is not rangeabr timeline\n      this.xaxisLabels = w.globals.timescaleLabels.slice()\n    }\n\n    if (w.config.xaxis.overwriteCategories) {\n      this.xaxisLabels = w.config.xaxis.overwriteCategories\n    }\n    this.drawnLabels = []\n    this.drawnLabelsRects = []\n\n    if (w.config.xaxis.position === 'top') {\n      this.offY = 0\n    } else {\n      this.offY = w.globals.gridHeight + 1\n    }\n    this.offY = this.offY + w.config.xaxis.axisBorder.offsetY\n    this.isCategoryBarHorizontal =\n      w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal\n\n    this.xaxisFontSize = w.config.xaxis.labels.style.fontSize\n    this.xaxisFontFamily = w.config.xaxis.labels.style.fontFamily\n    this.xaxisForeColors = w.config.xaxis.labels.style.colors\n    this.xaxisBorderWidth = w.config.xaxis.axisBorder.width\n    if (this.isCategoryBarHorizontal) {\n      this.xaxisBorderWidth = w.config.yaxis[0].axisBorder.width.toString()\n    }\n\n    if (this.xaxisBorderWidth.indexOf('%') > -1) {\n      this.xaxisBorderWidth =\n        (w.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10)) / 100\n    } else {\n      this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)\n    }\n    this.xaxisBorderHeight = w.config.xaxis.axisBorder.height\n\n    // For bars, we will only consider single y xais,\n    // as we are not providing multiple yaxis for bar charts\n    this.yaxis = w.config.yaxis[0]\n  }\n\n  drawXaxis() {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    let elXaxis = graphics.group({\n      class: 'apexcharts-xaxis',\n      transform: `translate(${w.config.xaxis.offsetX}, ${w.config.xaxis.offsetY})`\n    })\n\n    let elXaxisTexts = graphics.group({\n      class: 'apexcharts-xaxis-texts-g',\n      transform: `translate(${w.globals.translateXAxisX}, ${w.globals.translateXAxisY})`\n    })\n\n    elXaxis.add(elXaxisTexts)\n\n    let colWidth\n\n    // initial x Position (keep adding column width in the loop)\n    let xPos = w.globals.padHorizontal\n    let labels = []\n\n    for (let i = 0; i < this.xaxisLabels.length; i++) {\n      labels.push(this.xaxisLabels[i])\n    }\n\n    let labelsLen = labels.length\n\n    if (w.globals.isXNumeric) {\n      let len = labelsLen > 1 ? labelsLen - 1 : labelsLen\n      colWidth = w.globals.gridWidth / len\n      xPos = xPos + colWidth / 2 + w.config.xaxis.labels.offsetX\n    } else {\n      colWidth = w.globals.gridWidth / labels.length\n      xPos = xPos + colWidth + w.config.xaxis.labels.offsetX\n    }\n\n    for (let i = 0; i <= labelsLen - 1; i++) {\n      let x = xPos - colWidth / 2 + w.config.xaxis.labels.offsetX\n\n      if (\n        i === 0 &&\n        labelsLen === 1 &&\n        colWidth / 2 === xPos &&\n        w.globals.dataPoints === 1\n      ) {\n        // single datapoint\n        x = w.globals.gridWidth / 2\n      }\n      let label = this.axesUtils.getLabel(\n        labels,\n        w.globals.timescaleLabels,\n        x,\n        i,\n        this.drawnLabels,\n        this.xaxisFontSize\n      )\n\n      let offsetYCorrection = 28\n      if (w.globals.rotateXLabels) {\n        offsetYCorrection = 22\n      }\n\n      const isCategoryTickAmounts =\n        typeof w.config.xaxis.tickAmount !== 'undefined' &&\n        w.config.xaxis.tickAmount !== 'dataPoints' &&\n        w.config.xaxis.type !== 'datetime'\n\n      if (isCategoryTickAmounts) {\n        label = this.axesUtils.checkLabelBasedOnTickamount(i, label, labelsLen)\n      } else {\n        label = this.axesUtils.checkForOverflowingLabels(\n          i,\n          label,\n          labelsLen,\n          this.drawnLabels,\n          this.drawnLabelsRects\n        )\n      }\n\n      const getCatForeColor = () => {\n        return w.config.xaxis.convertedCatToNumeric\n          ? this.xaxisForeColors[w.globals.minX + i - 1]\n          : this.xaxisForeColors[i]\n      }\n\n      if (label.text) {\n        w.globals.xaxisLabelsCount++\n      }\n\n      if (w.config.xaxis.labels.show) {\n        let elText = graphics.drawText({\n          x: label.x,\n          y:\n            this.offY +\n            w.config.xaxis.labels.offsetY +\n            offsetYCorrection -\n            (w.config.xaxis.position === 'top'\n              ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2\n              : 0),\n          text: label.text,\n          textAnchor: 'middle',\n          fontWeight: label.isBold\n            ? 600\n            : w.config.xaxis.labels.style.fontWeight,\n          fontSize: this.xaxisFontSize,\n          fontFamily: this.xaxisFontFamily,\n          foreColor: Array.isArray(this.xaxisForeColors)\n            ? getCatForeColor()\n            : this.xaxisForeColors,\n          isPlainText: false,\n          cssClass:\n            'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n        })\n        elXaxisTexts.add(elText)\n\n        let elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title')\n        elTooltipTitle.textContent = Array.isArray(label.text)\n          ? label.text.join(' ')\n          : label.text\n        elText.node.appendChild(elTooltipTitle)\n        if (label.text !== '') {\n          this.drawnLabels.push(label.text)\n          this.drawnLabelsRects.push(label)\n        }\n      }\n      xPos = xPos + colWidth\n    }\n\n    if (w.config.xaxis.title.text !== undefined) {\n      let elXaxisTitle = graphics.group({\n        class: 'apexcharts-xaxis-title'\n      })\n\n      let elXAxisTitleText = graphics.drawText({\n        x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n        y:\n          this.offY +\n          parseFloat(this.xaxisFontSize) +\n          w.globals.xAxisLabelsHeight +\n          w.config.xaxis.title.offsetY,\n        text: w.config.xaxis.title.text,\n        textAnchor: 'middle',\n        fontSize: w.config.xaxis.title.style.fontSize,\n        fontFamily: w.config.xaxis.title.style.fontFamily,\n        fontWeight: w.config.xaxis.title.style.fontWeight,\n        foreColor: w.config.xaxis.title.style.color,\n        cssClass:\n          'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n      })\n\n      elXaxisTitle.add(elXAxisTitleText)\n\n      elXaxis.add(elXaxisTitle)\n    }\n\n    if (w.config.xaxis.axisBorder.show) {\n      const offX = w.globals.barPadForNumericAxis\n      let elHorzLine = graphics.drawLine(\n        w.globals.padHorizontal + w.config.xaxis.axisBorder.offsetX - offX,\n        this.offY,\n        this.xaxisBorderWidth + offX,\n        this.offY,\n        w.config.xaxis.axisBorder.color,\n        0,\n        this.xaxisBorderHeight\n      )\n\n      elXaxis.add(elHorzLine)\n    }\n\n    return elXaxis\n  }\n\n  // this actually becomes the vertical axis (for bar charts)\n  drawXaxisInversed(realIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    let translateYAxisX = w.config.yaxis[0].opposite\n      ? w.globals.translateYAxisX[realIndex]\n      : 0\n\n    let elYaxis = graphics.group({\n      class: 'apexcharts-yaxis apexcharts-xaxis-inversed',\n      rel: realIndex\n    })\n\n    let elYaxisTexts = graphics.group({\n      class: 'apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g',\n      transform: 'translate(' + translateYAxisX + ', 0)'\n    })\n\n    elYaxis.add(elYaxisTexts)\n\n    let colHeight\n\n    // initial x Position (keep adding column width in the loop)\n    let yPos\n    let labels = []\n\n    if (w.config.yaxis[realIndex].show) {\n      for (let i = 0; i < this.xaxisLabels.length; i++) {\n        labels.push(this.xaxisLabels[i])\n      }\n    }\n\n    colHeight = w.globals.gridHeight / labels.length\n    yPos = -(colHeight / 2.2)\n\n    let lbFormatter = w.globals.yLabelFormatters[0]\n\n    const ylabels = w.config.yaxis[0].labels\n\n    if (ylabels.show) {\n      for (let i = 0; i <= labels.length - 1; i++) {\n        let label = typeof labels[i] === 'undefined' ? '' : labels[i]\n\n        label = lbFormatter(label, {\n          seriesIndex: realIndex,\n          dataPointIndex: i,\n          w\n        })\n\n        const yColors = this.axesUtils.getYAxisForeColor(\n          ylabels.style.colors,\n          realIndex\n        )\n        const getForeColor = () => {\n          return Array.isArray(yColors) ? yColors[i] : yColors\n        }\n\n        let multiY = 0\n        if (Array.isArray(label)) {\n          multiY = (label.length / 2) * parseInt(ylabels.style.fontSize, 10)\n        }\n        let elLabel = graphics.drawText({\n          x: ylabels.offsetX - 15,\n          y: yPos + colHeight + ylabels.offsetY - multiY,\n          text: label,\n          textAnchor: this.yaxis.opposite ? 'start' : 'end',\n          foreColor: getForeColor(),\n          fontSize: ylabels.style.fontSize,\n          fontFamily: ylabels.style.fontFamily,\n          fontWeight: ylabels.style.fontWeight,\n          isPlainText: false,\n          cssClass: 'apexcharts-yaxis-label ' + ylabels.style.cssClass\n        })\n\n        elYaxisTexts.add(elLabel)\n\n        let elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title')\n        elTooltipTitle.textContent = Array.isArray(label)\n          ? label.join(' ')\n          : label\n        elLabel.node.appendChild(elTooltipTitle)\n\n        if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n          let labelRotatingCenter = graphics.rotateAroundCenter(elLabel.node)\n          elLabel.node.setAttribute(\n            'transform',\n            `rotate(${w.config.yaxis[realIndex].labels.rotate} 0 ${labelRotatingCenter.y})`\n          )\n        }\n        yPos = yPos + colHeight\n      }\n    }\n\n    if (w.config.yaxis[0].title.text !== undefined) {\n      let elXaxisTitle = graphics.group({\n        class: 'apexcharts-yaxis-title apexcharts-xaxis-title-inversed',\n        transform: 'translate(' + translateYAxisX + ', 0)'\n      })\n\n      let elXAxisTitleText = graphics.drawText({\n        x: 0,\n        y: w.globals.gridHeight / 2,\n        text: w.config.yaxis[0].title.text,\n        textAnchor: 'middle',\n        foreColor: w.config.yaxis[0].title.style.color,\n        fontSize: w.config.yaxis[0].title.style.fontSize,\n        fontWeight: w.config.yaxis[0].title.style.fontWeight,\n        fontFamily: w.config.yaxis[0].title.style.fontFamily,\n        cssClass:\n          'apexcharts-yaxis-title-text ' +\n          w.config.yaxis[0].title.style.cssClass\n      })\n\n      elXaxisTitle.add(elXAxisTitleText)\n\n      elYaxis.add(elXaxisTitle)\n    }\n\n    let offX = 0\n    if (this.isCategoryBarHorizontal && w.config.yaxis[0].opposite) {\n      offX = w.globals.gridWidth\n    }\n    const axisBorder = w.config.xaxis.axisBorder\n    if (axisBorder.show) {\n      let elVerticalLine = graphics.drawLine(\n        w.globals.padHorizontal + axisBorder.offsetX + offX,\n        1 + axisBorder.offsetY,\n        w.globals.padHorizontal + axisBorder.offsetX + offX,\n        w.globals.gridHeight + axisBorder.offsetY,\n        axisBorder.color,\n        0\n      )\n\n      elYaxis.add(elVerticalLine)\n    }\n\n    if (w.config.yaxis[0].axisTicks.show) {\n      this.axesUtils.drawYAxisTicks(\n        offX,\n        labels.length,\n        w.config.yaxis[0].axisBorder,\n        w.config.yaxis[0].axisTicks,\n        0,\n        colHeight,\n        elYaxis\n      )\n    }\n\n    return elYaxis\n  }\n\n  drawXaxisTicks(x1, appendToElement) {\n    let w = this.w\n    let x2 = x1\n\n    if (x1 < 0 || x1 - 2 > w.globals.gridWidth) return\n\n    let y1 = this.offY + w.config.xaxis.axisTicks.offsetY\n    let y2 = y1 + w.config.xaxis.axisTicks.height\n    if (w.config.xaxis.position === 'top') {\n      y2 = y1 - w.config.xaxis.axisTicks.height\n    }\n\n    if (w.config.xaxis.axisTicks.show) {\n      let graphics = new Graphics(this.ctx)\n\n      let line = graphics.drawLine(\n        x1 + w.config.xaxis.axisTicks.offsetX,\n        y1 + w.config.xaxis.offsetY,\n        x2 + w.config.xaxis.axisTicks.offsetX,\n        y2 + w.config.xaxis.offsetY,\n        w.config.xaxis.axisTicks.color\n      )\n\n      // we are not returning anything, but appending directly to the element passed in param\n      appendToElement.add(line)\n      line.node.classList.add('apexcharts-xaxis-tick')\n    }\n  }\n\n  getXAxisTicksPositions() {\n    const w = this.w\n    let xAxisTicksPositions = []\n\n    const xCount = this.xaxisLabels.length\n    let x1 = w.globals.padHorizontal\n\n    if (w.globals.timescaleLabels.length > 0) {\n      for (let i = 0; i < xCount; i++) {\n        x1 = this.xaxisLabels[i].position\n        xAxisTicksPositions.push(x1)\n      }\n    } else {\n      let xCountForCategoryCharts = xCount\n      for (let i = 0; i < xCountForCategoryCharts; i++) {\n        let x1Count = xCountForCategoryCharts\n        if (w.globals.isXNumeric && w.config.chart.type !== 'bar') {\n          x1Count -= 1\n        }\n        x1 = x1 + w.globals.gridWidth / x1Count\n        xAxisTicksPositions.push(x1)\n      }\n    }\n\n    return xAxisTicksPositions\n  }\n\n  // to rotate x-axis labels or to put ... for longer text in xaxis\n  xAxisLabelCorrections() {\n    let w = this.w\n\n    let graphics = new Graphics(this.ctx)\n\n    let xAxis = w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g')\n\n    let xAxisTexts = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-xaxis-texts-g text'\n    )\n    let yAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-yaxis-inversed text'\n    )\n    let xAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-xaxis-inversed-texts-g text tspan'\n    )\n\n    if (w.globals.rotateXLabels || w.config.xaxis.labels.rotateAlways) {\n      for (let xat = 0; xat < xAxisTexts.length; xat++) {\n        let textRotatingCenter = graphics.rotateAroundCenter(xAxisTexts[xat])\n        textRotatingCenter.y = textRotatingCenter.y - 1 // + tickWidth/4;\n        textRotatingCenter.x = textRotatingCenter.x + 1\n\n        xAxisTexts[xat].setAttribute(\n          'transform',\n          `rotate(${w.config.xaxis.labels.rotate} ${textRotatingCenter.x} ${textRotatingCenter.y})`\n        )\n\n        xAxisTexts[xat].setAttribute('text-anchor', `end`)\n\n        let offsetHeight = 10\n\n        xAxis.setAttribute('transform', `translate(0, ${-offsetHeight})`)\n\n        let tSpan = xAxisTexts[xat].childNodes\n\n        if (w.config.xaxis.labels.trim) {\n          Array.prototype.forEach.call(tSpan, (ts) => {\n            graphics.placeTextWithEllipsis(\n              ts,\n              ts.textContent,\n              w.globals.xAxisLabelsHeight -\n              (w.config.legend.position === 'bottom' ? 20 : 10)\n            )\n          })\n        }\n      }\n    } else {\n      let width = w.globals.gridWidth / (w.globals.labels.length + 1)\n\n      for (let xat = 0; xat < xAxisTexts.length; xat++) {\n        let tSpan = xAxisTexts[xat].childNodes\n\n        if (w.config.xaxis.labels.trim && w.config.xaxis.type !== 'datetime') {\n          Array.prototype.forEach.call(tSpan, (ts) => {\n            graphics.placeTextWithEllipsis(ts, ts.textContent, width)\n          })\n        }\n      }\n    }\n\n    if (yAxisTextsInversed.length > 0) {\n      // truncate rotated y axis in bar chart (x axis)\n      let firstLabelPosX = yAxisTextsInversed[\n        yAxisTextsInversed.length - 1\n      ].getBBox()\n      let lastLabelPosX = yAxisTextsInversed[0].getBBox()\n\n      if (firstLabelPosX.x < -20) {\n        yAxisTextsInversed[\n          yAxisTextsInversed.length - 1\n        ].parentNode.removeChild(\n          yAxisTextsInversed[yAxisTextsInversed.length - 1]\n        )\n      }\n\n      if (\n        lastLabelPosX.x + lastLabelPosX.width > w.globals.gridWidth &&\n        !w.globals.isBarHorizontal\n      ) {\n        yAxisTextsInversed[0].parentNode.removeChild(yAxisTextsInversed[0])\n      }\n\n      // truncate rotated x axis in bar chart (y axis)\n      for (let xat = 0; xat < xAxisTextsInversed.length; xat++) {\n        graphics.placeTextWithEllipsis(\n          xAxisTextsInversed[xat],\n          xAxisTextsInversed[xat].textContent,\n          w.config.yaxis[0].labels.maxWidth -\n          parseFloat(w.config.yaxis[0].title.style.fontSize) * 2 -\n          20\n        )\n      }\n    }\n  }\n\n  // renderXAxisBands() {\n  //   let w = this.w;\n\n  //   let plotBand = document.createElementNS(w.globals.SVGNS, 'rect')\n  //   w.globals.dom.elGraphical.add(plotBand)\n  // }\n\n  // this actually becomes the vertical axis (for bar charts)\n  drawGanttXAxis(realIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    let translateYAxisX = w.config.yaxis[0].opposite\n      ? w.globals.translateYAxisX[realIndex]\n      : 0\n\n    let elYaxis = graphics.group({\n      class: 'apexcharts-yaxis apexcharts-xaxis-inversed',\n      rel: realIndex\n    })\n\n    let elYaxisTexts = graphics.group({\n      class: 'apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g',\n      transform: 'translate(' + translateYAxisX + ', 0)'\n    })\n\n    elYaxis.add(elYaxisTexts)\n\n    let colHeight\n\n    // initial x Position (keep adding column width in the loop)\n    let yPos\n    let labels = []\n\n    if (w.config.yaxis[realIndex].show) {\n      for (let i = 0; i < this.xaxisLabels.length; i++) {\n        labels.push(this.xaxisLabels[i])\n      }\n    }\n\n    colHeight = w.globals.gridHeight / labels.length\n    yPos = -(colHeight / 2.2)\n\n    let lbFormatter = w.globals.yLabelFormatters[0]\n\n    const ylabels = w.config.yaxis[0].labels\n\n    if (ylabels.show) {\n      for (let i = 0; i <= labels.length - 1; i++) {\n        let label = typeof labels[i] === 'undefined' ? '' : labels[i]\n\n        label = lbFormatter(label, {\n          seriesIndex: realIndex,\n          dataPointIndex: i,\n          w\n        })\n\n        const yColors = this.axesUtils.getYAxisForeColor(\n          ylabels.style.colors,\n          realIndex\n        )\n        const getForeColor = () => {\n          return Array.isArray(yColors) ? yColors[i] : yColors\n        }\n\n        let multiY = 0\n        if (Array.isArray(label)) {\n          multiY = (label.length / 2) * parseInt(ylabels.style.fontSize, 10)\n        }\n        let elLabel = graphics.drawText({\n          x: ylabels.offsetX - 15,\n          y: yPos + colHeight + ylabels.offsetY - multiY,\n          text: label,\n          textAnchor: this.yaxis.opposite ? 'start' : 'end',\n          foreColor: getForeColor(),\n          fontSize: ylabels.style.fontSize,\n          fontFamily: ylabels.style.fontFamily,\n          fontWeight: ylabels.style.fontWeight,\n          isPlainText: false,\n          cssClass: 'apexcharts-yaxis-label ' + ylabels.style.cssClass\n        })\n\n        // add link\n        const link = w.globals.dom.Paper.link('myText')\n        link.add(elLabel)\n        elLabel = link\n\n        elYaxisTexts.add(elLabel)\n        yPos = yPos + colHeight\n      }\n    }\n\n    if (w.config.yaxis[0].title.text !== undefined) {\n      let elXaxisTitle = graphics.group({\n        class: 'apexcharts-yaxis-title apexcharts-xaxis-title-inversed',\n        transform: 'translate(' + translateYAxisX + ', 0)'\n      })\n\n      let elXAxisTitleText = graphics.drawText({\n        x: 0,\n        y: w.globals.gridHeight / 2,\n        text: w.config.yaxis[0].title.text,\n        textAnchor: 'middle',\n        foreColor: w.config.yaxis[0].title.style.color,\n        fontSize: w.config.yaxis[0].title.style.fontSize,\n        fontWeight: w.config.yaxis[0].title.style.fontWeight,\n        fontFamily: w.config.yaxis[0].title.style.fontFamily,\n        cssClass:\n          'apexcharts-yaxis-title-text ' +\n          w.config.yaxis[0].title.style.cssClass\n      })\n\n      elXaxisTitle.add(elXAxisTitleText)\n\n      elYaxis.add(elXaxisTitle)\n    }\n\n    let offX = 0\n    if (this.isCategoryBarHorizontal && w.config.yaxis[0].opposite) {\n      offX = w.globals.gridWidth\n    }\n    const axisBorder = w.config.xaxis.axisBorder\n    if (axisBorder.show) {\n      let elVerticalLine = graphics.drawLine(\n        w.globals.padHorizontal + axisBorder.offsetX + offX,\n        1 + axisBorder.offsetY,\n        w.globals.padHorizontal + axisBorder.offsetX + offX,\n        w.globals.gridHeight + axisBorder.offsetY,\n        axisBorder.color,\n        0\n      )\n\n      elYaxis.add(elVerticalLine)\n    }\n\n    if (w.config.yaxis[0].axisTicks.show) {\n      this.axesUtils.drawYAxisTicks(\n        offX,\n        labels.length,\n        w.config.yaxis[0].axisBorder,\n        w.config.yaxis[0].axisTicks,\n        0,\n        colHeight,\n        elYaxis\n      )\n    }\n\n    return elYaxis\n  }\n}\n","import CoreUtils from '../CoreUtils'\nimport Graphics from '../Graphics'\nimport XAxis from './XAxis'\nimport AxesUtils from './AxesUtils'\n\n/**\n * ApexCharts Grid Class for drawing Cartesian Grid.\n *\n * @module Grid\n **/\n\nclass Grid {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    const w = this.w\n    this.xaxisLabels = w.globals.labels.slice()\n    this.axesUtils = new AxesUtils(ctx)\n\n    this.isTimelineBar =\n      w.config.xaxis.type === 'datetime' &&\n      w.globals.seriesRangeBarTimeline.length\n\n    if (w.globals.timescaleLabels.length > 0) {\n      //  timescaleLabels labels are there\n      this.xaxisLabels = w.globals.timescaleLabels.slice()\n    }\n  }\n\n  // when using sparklines or when showing no grid, we need to have a grid area which is reused at many places for other calculations as well\n  drawGridArea(elGrid = null) {\n    let w = this.w\n\n    let graphics = new Graphics(this.ctx)\n\n    if (elGrid === null) {\n      elGrid = graphics.group({\n        class: 'apexcharts-grid'\n      })\n    }\n\n    let elVerticalLine = graphics.drawLine(\n      w.globals.padHorizontal,\n      1,\n      w.globals.padHorizontal,\n      w.globals.gridHeight,\n      'transparent'\n    )\n\n    let elHorzLine = graphics.drawLine(\n      w.globals.padHorizontal,\n      w.globals.gridHeight,\n      w.globals.gridWidth,\n      w.globals.gridHeight,\n      'transparent'\n    )\n\n    elGrid.add(elHorzLine)\n    elGrid.add(elVerticalLine)\n\n    return elGrid\n  }\n\n  drawGrid() {\n    let gl = this.w.globals\n\n    let elgrid = null\n\n    if (gl.axisCharts) {\n      // grid is drawn after xaxis and yaxis are drawn\n      elgrid = this.renderGrid()\n\n      this.drawGridArea(elgrid.el)\n    }\n    return elgrid\n  }\n\n  // This mask will clip off overflowing graphics from the drawable area\n  createGridMask() {\n    let w = this.w\n    let gl = w.globals\n    const graphics = new Graphics(this.ctx)\n\n    let strokeSize = Array.isArray(w.config.stroke.width)\n      ? 0\n      : w.config.stroke.width\n\n    if (Array.isArray(w.config.stroke.width)) {\n      let strokeMaxSize = 0\n      w.config.stroke.width.forEach((m) => {\n        strokeMaxSize = Math.max(strokeMaxSize, m)\n      })\n      strokeSize = strokeMaxSize\n    }\n\n    gl.dom.elGridRectMask = document.createElementNS(gl.SVGNS, 'clipPath')\n    gl.dom.elGridRectMask.setAttribute('id', `gridRectMask${gl.cuid}`)\n\n    gl.dom.elGridRectMarkerMask = document.createElementNS(gl.SVGNS, 'clipPath')\n    gl.dom.elGridRectMarkerMask.setAttribute(\n      'id',\n      `gridRectMarkerMask${gl.cuid}`\n    )\n\n    gl.dom.elForecastMask = document.createElementNS(gl.SVGNS, 'clipPath')\n    gl.dom.elForecastMask.setAttribute('id', `forecastMask${gl.cuid}`)\n\n    gl.dom.elNonForecastMask = document.createElementNS(gl.SVGNS, 'clipPath')\n    gl.dom.elNonForecastMask.setAttribute('id', `nonForecastMask${gl.cuid}`)\n\n    // let barHalfWidth = 0\n\n    const type = w.config.chart.type\n    const hasBar =\n      type === 'bar' ||\n      type === 'rangeBar' ||\n      type === 'candlestick' ||\n      type === 'boxPlot' ||\n      type === 'gantt' ||\n      w.globals.comboBarCount > 0\n\n    let barWidthLeft = 0\n    let barWidthRight = 0\n    if (hasBar && w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n      barWidthLeft = w.config.grid.padding.left\n      barWidthRight = w.config.grid.padding.right\n\n      if (gl.barPadForNumericAxis > barWidthLeft) {\n        barWidthLeft = gl.barPadForNumericAxis\n        barWidthRight = gl.barPadForNumericAxis\n      }\n    }\n    gl.dom.elGridRect = graphics.drawRect(\n      -strokeSize / 2 - barWidthLeft - 2,\n      -strokeSize / 2,\n      gl.gridWidth + strokeSize + barWidthRight + barWidthLeft + 4,\n      gl.gridHeight + strokeSize,\n      0,\n      '#fff'\n    )\n\n    const coreUtils = new CoreUtils(this)\n    coreUtils.getLargestMarkerSize()\n\n    let markerSize = w.globals.markers.largestSize + 1\n\n    gl.dom.elGridRectMarker = graphics.drawRect(\n      -markerSize * 2,\n      -markerSize * 2,\n      gl.gridWidth + markerSize * 4,\n      gl.gridHeight + markerSize * 4,\n      0,\n      '#fff'\n    )\n    gl.dom.elGridRectMask.appendChild(gl.dom.elGridRect.node)\n    gl.dom.elGridRectMarkerMask.appendChild(gl.dom.elGridRectMarker.node)\n\n    let defs = gl.dom.baseEl.querySelector('defs')\n    defs.appendChild(gl.dom.elGridRectMask)\n    defs.appendChild(gl.dom.elForecastMask)\n    defs.appendChild(gl.dom.elNonForecastMask)\n    defs.appendChild(gl.dom.elGridRectMarkerMask)\n  }\n\n  _drawGridLines({ i, x1, y1, x2, y2, xCount, parent }) {\n    const w = this.w\n\n    const shouldDraw = () => {\n      if (i === 0 && w.globals.skipFirstTimelinelabel) {\n        return false\n      }\n\n      if (\n        i === xCount - 1 &&\n        w.globals.skipLastTimelinelabel &&\n        !w.config.xaxis.labels.formatter\n      ) {\n        return false\n      }\n      if (w.config.chart.type === 'radar') {\n        return false\n      }\n      return true\n    }\n\n    if (shouldDraw()) {\n      if (w.config.grid.xaxis.lines.show) {\n        this._drawGridLine({ x1, y1, x2, y2, parent })\n      }\n      let xAxis = new XAxis(this.ctx)\n      xAxis.drawXaxisTicks(x1, this.elg)\n    }\n  }\n\n  _drawGridLine({ x1, y1, x2, y2, parent }) {\n    const w = this.w\n\n    const isHorzLine = parent.node.classList.contains(\n      'apexcharts-gridlines-horizontal'\n    )\n\n    let strokeDashArray = w.config.grid.strokeDashArray\n    const offX = w.globals.barPadForNumericAxis\n\n    const graphics = new Graphics(this)\n    let line = graphics.drawLine(\n      x1 - (isHorzLine ? offX : 0),\n      y1,\n      x2 + (isHorzLine ? offX : 0),\n      y2,\n      w.config.grid.borderColor,\n      strokeDashArray\n    )\n    line.node.classList.add('apexcharts-gridline')\n    parent.add(line)\n  }\n\n  _drawGridBandRect({ c, x1, y1, x2, y2, type }) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n    const offX = w.globals.barPadForNumericAxis\n\n    if (type === 'column' && w.config.xaxis.type === 'datetime') return\n\n    const color = w.config.grid[type].colors[c]\n\n    let rect = graphics.drawRect(\n      x1 - (type === 'row' ? offX : 0),\n      y1,\n      x2 + (type === 'row' ? offX * 2 : 0),\n      y2,\n      0,\n      color,\n      w.config.grid[type].opacity\n    )\n    this.elg.add(rect)\n    rect.attr('clip-path', `url(#gridRectMask${w.globals.cuid})`)\n    rect.node.classList.add(`apexcharts-grid-${type}`)\n  }\n\n  _drawXYLines({ xCount, tickAmount }) {\n    const w = this.w\n\n    const datetimeLines = ({ xC, x1, y1, x2, y2 }) => {\n      for (let i = 0; i < xC; i++) {\n        x1 = this.xaxisLabels[i].position\n        x2 = this.xaxisLabels[i].position\n\n        this._drawGridLines({\n          i,\n          x1,\n          y1,\n          x2,\n          y2,\n          xCount,\n          parent: this.elgridLinesV\n        })\n      }\n    }\n\n    const categoryLines = ({ xC, x1, y1, x2, y2 }) => {\n      if (\n        typeof w.config.xaxis.tickAmount !== 'undefined' &&\n        w.config.xaxis.tickAmount !== 'dataPoints'\n      ) {\n        // user has specified tickamount in a category x-axis chart\n        const visibleLabels = w.globals.dom.baseEl.querySelectorAll(\n          '.apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)'\n        )\n\n        visibleLabels.forEach((d, i) => {\n          const textRect = d.getBBox()\n\n          this._drawGridLines({\n            i,\n            x1: textRect.x + textRect.width / 2,\n            y1,\n            x2: textRect.x + textRect.width / 2,\n            y2,\n            xCount,\n            parent: this.elgridLinesV\n          })\n        })\n      } else {\n        for (let i = 0; i < xC + (w.globals.isXNumeric ? 0 : 1); i++) {\n          if (i === 0 && xC === 1 && w.globals.dataPoints === 1) {\n            // single datapoint\n            x1 = w.globals.gridWidth / 2\n            x2 = x1\n          }\n          this._drawGridLines({\n            i,\n            x1,\n            y1,\n            x2,\n            y2,\n            xCount,\n            parent: this.elgridLinesV\n          })\n\n          x1 = x1 + w.globals.gridWidth / (w.globals.isXNumeric ? xC - 1 : xC)\n          x2 = x1\n        }\n      }\n    }\n\n    // draw vertical lines\n    if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n      let x1 = w.globals.padHorizontal\n      let y1 = 0\n      let x2\n      let y2 = w.globals.gridHeight\n\n      if (w.globals.timescaleLabels.length) {\n        datetimeLines({ xC: xCount, x1, y1, x2, y2 })\n      } else {\n        if (w.globals.isXNumeric) {\n          xCount = w.globals.xAxisScale.result.length\n        }\n        if (w.config.xaxis.convertedCatToNumeric) {\n          // in case of a convertedCatToNumeric, some labels might be skipped due to hideOverLapping labels, hence use this var to get the visible ticks\n          xCount = w.globals.xaxisLabelsCount\n        }\n        categoryLines({ xC: xCount, x1, y1, x2, y2 })\n      }\n    }\n\n    // draw horizontal lines\n    if (w.config.grid.yaxis.lines.show) {\n      let x1 = 0\n      let y1 = 0\n      let y2 = 0\n      let x2 = w.globals.gridWidth\n      let tA = tickAmount + 1\n\n      if (this.isTimelineBar) {\n        tA = w.globals.labels.length\n      }\n\n      for (let i = 0; i < tA + (this.isTimelineBar ? 1 : 0); i++) {\n        this._drawGridLine({ x1, y1, x2, y2, parent: this.elgridLinesH })\n\n        y1 = y1 + w.globals.gridHeight / (this.isTimelineBar ? tA : tickAmount)\n\n        y2 = y1\n      }\n    }\n  }\n\n  _drawInvertedXYLines({ xCount }) {\n    const w = this.w\n\n    // draw vertical lines\n    if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n      let x1 = w.globals.padHorizontal\n      let y1 = 0\n      let x2\n      let y2 = w.globals.gridHeight\n      for (let i = 0; i < xCount + 1; i++) {\n        if (w.config.grid.xaxis.lines.show) {\n          this._drawGridLine({ x1, y1, x2, y2, parent: this.elgridLinesV })\n        }\n\n        let xAxis = new XAxis(this.ctx)\n        xAxis.drawXaxisTicks(x1, this.elg)\n        x1 = x1 + w.globals.gridWidth / xCount + 0.3\n        x2 = x1\n      }\n    }\n\n    // draw horizontal lines\n    if (w.config.grid.yaxis.lines.show) {\n      let x1 = 0\n      let y1 = 0\n      let y2 = 0\n      let x2 = w.globals.gridWidth\n\n      for (let i = 0; i < w.globals.dataPoints + 1; i++) {\n        this._drawGridLine({ x1, y1, x2, y2, parent: this.elgridLinesH })\n\n        y1 = y1 + w.globals.gridHeight / w.globals.dataPoints\n        y2 = y1\n      }\n    }\n  }\n\n  // actual grid rendering\n  renderGrid() {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    this.elg = graphics.group({\n      class: 'apexcharts-grid'\n    })\n    this.elgridLinesH = graphics.group({\n      class: 'apexcharts-gridlines-horizontal'\n    })\n    this.elgridLinesV = graphics.group({\n      class: 'apexcharts-gridlines-vertical'\n    })\n\n    this.elg.add(this.elgridLinesH)\n    this.elg.add(this.elgridLinesV)\n\n    if (!w.config.grid.show) {\n      this.elgridLinesV.hide()\n      this.elgridLinesH.hide()\n    }\n\n    let yTickAmount = w.globals.yAxisScale.length\n      ? w.globals.yAxisScale[0].result.length - 1\n      : 5\n    for (let i = 0; i < w.globals.series.length; i++) {\n      if (typeof w.globals.yAxisScale[i] !== 'undefined') {\n        yTickAmount = w.globals.yAxisScale[i].result.length - 1\n      }\n      if (yTickAmount > 2) break\n    }\n\n    let xCount\n\n    if (!w.globals.isBarHorizontal || this.isTimelineBar) {\n      xCount = this.xaxisLabels.length\n\n      if (this.isTimelineBar) {\n        yTickAmount = w.globals.labels.length\n        if (w.config.xaxis.tickAmount && w.config.xaxis.labels.formatter) {\n          xCount = w.config.xaxis.tickAmount\n        }\n      }\n      this._drawXYLines({ xCount, tickAmount: yTickAmount })\n    } else {\n      xCount = yTickAmount\n\n      // for horizontal bar chart, get the xaxis tickamount\n      yTickAmount = w.globals.xTickAmount\n      this._drawInvertedXYLines({ xCount, tickAmount: yTickAmount })\n    }\n\n    this.drawGridBands(xCount, yTickAmount)\n    return {\n      el: this.elg,\n      xAxisTickWidth: w.globals.gridWidth / xCount\n    }\n  }\n\n  drawGridBands(xCount, tickAmount) {\n    const w = this.w\n\n    // rows background bands\n    if (\n      w.config.grid.row.colors !== undefined &&\n      w.config.grid.row.colors.length > 0\n    ) {\n      let x1 = 0\n      let y1 = 0\n      let y2 = w.globals.gridHeight / tickAmount\n      let x2 = w.globals.gridWidth\n\n      for (let i = 0, c = 0; i < tickAmount; i++, c++) {\n        if (c >= w.config.grid.row.colors.length) {\n          c = 0\n        }\n        this._drawGridBandRect({\n          c,\n          x1,\n          y1,\n          x2,\n          y2,\n          type: 'row'\n        })\n\n        y1 = y1 + w.globals.gridHeight / tickAmount\n      }\n    }\n\n    // columns background bands\n    if (\n      w.config.grid.column.colors !== undefined &&\n      w.config.grid.column.colors.length > 0\n    ) {\n      const xc =\n        !w.globals.isBarHorizontal &&\n        (w.config.xaxis.type === 'category' ||\n          w.config.xaxis.convertedCatToNumeric)\n          ? xCount - 1\n          : xCount\n      let x1 = w.globals.padHorizontal\n      let y1 = 0\n      let x2 = w.globals.padHorizontal + w.globals.gridWidth / xc\n      let y2 = w.globals.gridHeight\n      for (let i = 0, c = 0; i < xCount; i++, c++) {\n        if (c >= w.config.grid.column.colors.length) {\n          c = 0\n        }\n        this._drawGridBandRect({\n          c,\n          x1,\n          y1,\n          x2,\n          y2,\n          type: 'column'\n        })\n\n        x1 = x1 + w.globals.gridWidth / xc\n      }\n    }\n  }\n}\n\nexport default Grid\n","import Utils from '../utils/Utils'\n\nexport default class Range {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  // http://stackoverflow.com/questions/326679/choosing-an-attractive-linear-scale-for-a-graphs-y-axiss\n  // This routine creates the Y axis values for a graph.\n  niceScale(yMin, yMax, ticks = 10, index = 0, NO_MIN_MAX_PROVIDED) {\n    const w = this.w\n    // Determine Range\n    let range = Math.abs(yMax - yMin)\n\n    ticks = this._adjustTicksForSmallRange(ticks, index, range)\n\n    if (ticks === 'dataPoints') {\n      ticks = w.globals.dataPoints - 1\n    }\n\n    if (\n      (yMin === Number.MIN_VALUE && yMax === 0) ||\n      (!Utils.isNumber(yMin) && !Utils.isNumber(yMax)) ||\n      (yMin === Number.MIN_VALUE && yMax === -Number.MAX_VALUE)\n    ) {\n      // when all values are 0\n      yMin = 0\n      yMax = ticks\n      let linearScale = this.linearScale(yMin, yMax, ticks)\n      return linearScale\n    }\n\n    if (yMin > yMax) {\n      // if somehow due to some wrong config, user sent max less than min,\n      // adjust the min/max again\n      console.warn('axis.min cannot be greater than axis.max')\n      yMax = yMin + 0.1\n    } else if (yMin === yMax) {\n      // If yMin and yMax are identical, then\n      // adjust the yMin and yMax values to actually\n      // make a graph. Also avoids division by zero errors.\n      yMin = yMin === 0 ? 0 : yMin - 0.5 // some small value\n      yMax = yMax === 0 ? 2 : yMax + 0.5 // some small value\n    }\n\n    // Calculate Min amd Max graphical labels and graph\n    // increments.  The number of ticks defaults to\n    // 10 which is the SUGGESTED value.  Any tick value\n    // entered is used as a suggested value which is\n    // adjusted to be a 'pretty' value.\n    //\n    // Output will be an array of the Y axis values that\n    // encompass the Y values.\n    let result = []\n\n    if (\n      range < 1 &&\n      NO_MIN_MAX_PROVIDED &&\n      (w.config.chart.type === 'candlestick' ||\n        w.config.series[index].type === 'candlestick' ||\n        w.config.chart.type === 'boxPlot' ||\n        w.config.series[index].type === 'boxPlot' ||\n        w.globals.isRangeData)\n    ) {\n      /* fix https://github.com/apexcharts/apexcharts.js/issues/430 */\n      yMax = yMax * 1.01\n    }\n\n    let tiks = ticks + 1\n    // Adjust ticks if needed\n    if (tiks < 2) {\n      tiks = 2\n    } else if (tiks > 2) {\n      tiks -= 2\n    }\n\n    // Get raw step value\n    let tempStep = range / tiks\n    // Calculate pretty step value\n\n    let mag = Math.floor(Utils.log10(tempStep))\n    let magPow = Math.pow(10, mag)\n    let magMsd = Math.round(tempStep / magPow)\n    if (magMsd < 1) {\n      magMsd = 1\n    }\n    let stepSize = magMsd * magPow\n\n    // build Y label array.\n    // Lower and upper bounds calculations\n    let lb = stepSize * Math.floor(yMin / stepSize)\n    let ub = stepSize * Math.ceil(yMax / stepSize)\n    // Build array\n    let val = lb\n\n    if (NO_MIN_MAX_PROVIDED && range > 2) {\n      while (1) {\n        result.push(val)\n        val += stepSize\n        if (val > ub) {\n          break\n        }\n      }\n\n      return {\n        result,\n        niceMin: result[0],\n        niceMax: result[result.length - 1]\n      }\n    } else {\n      result = []\n      let v = yMin\n      result.push(v)\n      let valuesDivider = Math.abs(yMax - yMin) / ticks\n      for (let i = 0; i <= ticks; i++) {\n        v = v + valuesDivider\n        result.push(v)\n      }\n\n      if (result[result.length - 2] >= yMax) {\n        result.pop()\n      }\n\n      return {\n        result,\n        niceMin: result[0],\n        niceMax: result[result.length - 1]\n      }\n    }\n  }\n\n  linearScale(yMin, yMax, ticks = 10, index) {\n    let range = Math.abs(yMax - yMin)\n\n    ticks = this._adjustTicksForSmallRange(ticks, index, range)\n\n    if (ticks === 'dataPoints') {\n      ticks = this.w.globals.dataPoints - 1\n    }\n\n    let step = range / ticks\n    if (ticks === Number.MAX_VALUE) {\n      ticks = 10\n      step = 1\n    }\n\n    let result = []\n    let v = yMin\n\n    while (ticks >= 0) {\n      result.push(v)\n      v = v + step\n      ticks -= 1\n    }\n\n    return {\n      result,\n      niceMin: result[0],\n      niceMax: result[result.length - 1]\n    }\n  }\n\n  logarithmicScale(yMax) {\n    const logs = []\n\n    const ticks = Math.ceil(Math.log10(yMax)) + 1 // Get powers of 10 up to our max, and then one more\n\n    for (let i = 0; i < ticks; i++) {\n      logs.push(Math.pow(10, i))\n    }\n\n    return {\n      result: logs,\n      niceMin: logs[0],\n      niceMax: logs[logs.length - 1]\n    }\n  }\n\n  _adjustTicksForSmallRange(ticks, index, range) {\n    let newTicks = ticks\n    if (\n      typeof index !== 'undefined' &&\n      this.w.config.yaxis[index].labels.formatter &&\n      this.w.config.yaxis[index].tickAmount === undefined\n    ) {\n      const formattedVal = this.w.config.yaxis[index].labels.formatter(1)\n      if (\n        Utils.isNumber(Number(formattedVal)) &&\n        !Utils.isFloat(formattedVal)\n      ) {\n        newTicks = Math.ceil(range)\n      }\n    }\n    return newTicks < ticks ? newTicks : ticks\n  }\n\n  setYScaleForIndex(index, minY, maxY) {\n    const gl = this.w.globals\n    const cnf = this.w.config\n\n    let y = gl.isBarHorizontal ? cnf.xaxis : cnf.yaxis[index]\n\n    if (typeof gl.yAxisScale[index] === 'undefined') {\n      gl.yAxisScale[index] = []\n    }\n\n    let diff = Math.abs(maxY - minY)\n\n    if (y.logarithmic && diff <= 5) {\n      gl.invalidLogScale = true\n    }\n\n    if (y.logarithmic && diff > 5) {\n      gl.allSeriesCollapsed = false\n      gl.yAxisScale[index] = this.logarithmicScale(maxY)\n    } else {\n      if (maxY === -Number.MAX_VALUE || !Utils.isNumber(maxY)) {\n        // no data in the chart. Either all series collapsed or user passed a blank array\n        gl.yAxisScale[index] = this.linearScale(0, 5, 5)\n      } else {\n        // there is some data. Turn off the allSeriesCollapsed flag\n        gl.allSeriesCollapsed = false\n\n        if ((y.min !== undefined || y.max !== undefined) && !y.forceNiceScale) {\n          // fix https://github.com/apexcharts/apexcharts.js/issues/492\n          gl.yAxisScale[index] = this.linearScale(\n            minY,\n            maxY,\n            y.tickAmount,\n            index\n          )\n        } else {\n          const noMinMaxProvided =\n            (cnf.yaxis[index].max === undefined &&\n              cnf.yaxis[index].min === undefined) ||\n            cnf.yaxis[index].forceNiceScale\n          gl.yAxisScale[index] = this.niceScale(\n            minY,\n            maxY,\n            y.tickAmount ? y.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5,\n            index,\n            // fix https://github.com/apexcharts/apexcharts.js/issues/397\n            noMinMaxProvided\n          )\n        }\n      }\n    }\n  }\n\n  setXScale(minX, maxX) {\n    const w = this.w\n    const gl = w.globals\n    const x = w.config.xaxis\n    let diff = Math.abs(maxX - minX)\n    if (maxX === -Number.MAX_VALUE || !Utils.isNumber(maxX)) {\n      // no data in the chart. Either all series collapsed or user passed a blank array\n      gl.xAxisScale = this.linearScale(0, 5, 5)\n    } else {\n      gl.xAxisScale = this.linearScale(\n        minX,\n        maxX,\n        x.tickAmount ? x.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5,\n        0\n      )\n    }\n    return gl.xAxisScale\n  }\n\n  setMultipleYScales() {\n    const gl = this.w.globals\n    const cnf = this.w.config\n\n    const minYArr = gl.minYArr.concat([])\n    const maxYArr = gl.maxYArr.concat([])\n\n    let scalesIndices = []\n    // here, we loop through the yaxis array and find the item which has \"seriesName\" property\n    cnf.yaxis.forEach((yaxe, i) => {\n      let index = i\n      cnf.series.forEach((s, si) => {\n        // if seriesName matches and that series is not collapsed, we use that scale\n        // fix issue #1215\n        // proceed even if si is in gl.collapsedSeriesIndices\n        if (s.name === yaxe.seriesName) {\n          index = si\n\n          if (i !== si) {\n            scalesIndices.push({\n              index: si,\n              similarIndex: i,\n              alreadyExists: true\n            })\n          } else {\n            scalesIndices.push({\n              index: si\n            })\n          }\n        }\n      })\n\n      let minY = minYArr[index]\n      let maxY = maxYArr[index]\n\n      this.setYScaleForIndex(i, minY, maxY)\n    })\n\n    this.sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices)\n  }\n\n  sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices) {\n    const cnf = this.w.config\n    const gl = this.w.globals\n\n    // we got the scalesIndices array in the above code, but we need to filter out the items which doesn't have same scales\n    let similarIndices = []\n    scalesIndices.forEach((scale) => {\n      if (scale.alreadyExists) {\n        if (typeof similarIndices[scale.index] === 'undefined') {\n          similarIndices[scale.index] = []\n        }\n        similarIndices[scale.index].push(scale.index)\n        similarIndices[scale.index].push(scale.similarIndex)\n      }\n    })\n\n    function intersect(a, b) {\n      return a.filter((value) => b.indexOf(value) !== -1)\n    }\n\n    gl.yAxisSameScaleIndices = similarIndices\n\n    similarIndices.forEach((si, i) => {\n      similarIndices.forEach((sj, j) => {\n        if (i !== j) {\n          if (intersect(si, sj).length > 0) {\n            similarIndices[i] = similarIndices[i].concat(similarIndices[j])\n          }\n        }\n      })\n    })\n\n    // then, we remove duplicates from the similarScale array\n    let uniqueSimilarIndices = similarIndices.map((item) => {\n      return item.filter((i, pos) => item.indexOf(i) === pos)\n    })\n\n    // sort further to remove whole duplicate arrays later\n    let sortedIndices = uniqueSimilarIndices.map((s) => s.sort())\n\n    // remove undefined items\n    similarIndices = similarIndices.filter((s) => !!s)\n\n    let indices = sortedIndices.slice()\n    let stringIndices = indices.map((ind) => JSON.stringify(ind))\n    indices = indices.filter(\n      (ind, p) => stringIndices.indexOf(JSON.stringify(ind)) === p\n    )\n\n    let sameScaleMinYArr = []\n    let sameScaleMaxYArr = []\n    minYArr.forEach((minYValue, yi) => {\n      indices.forEach((scale, i) => {\n        // we compare only the yIndex which exists in the indices array\n        if (scale.indexOf(yi) > -1) {\n          if (typeof sameScaleMinYArr[i] === 'undefined') {\n            sameScaleMinYArr[i] = []\n            sameScaleMaxYArr[i] = []\n          }\n          sameScaleMinYArr[i].push({\n            key: yi,\n            value: minYValue\n          })\n          sameScaleMaxYArr[i].push({\n            key: yi,\n            value: maxYArr[yi]\n          })\n        }\n      })\n    })\n\n    let sameScaleMin = Array.apply(null, Array(indices.length)).map(\n      Number.prototype.valueOf,\n      Number.MIN_VALUE\n    )\n    let sameScaleMax = Array.apply(null, Array(indices.length)).map(\n      Number.prototype.valueOf,\n      -Number.MAX_VALUE\n    )\n\n    sameScaleMinYArr.forEach((s, i) => {\n      s.forEach((sc, j) => {\n        sameScaleMin[i] = Math.min(sc.value, sameScaleMin[i])\n      })\n    })\n\n    sameScaleMaxYArr.forEach((s, i) => {\n      s.forEach((sc, j) => {\n        sameScaleMax[i] = Math.max(sc.value, sameScaleMax[i])\n      })\n    })\n\n    minYArr.forEach((min, i) => {\n      sameScaleMaxYArr.forEach((s, si) => {\n        let minY = sameScaleMin[si]\n        let maxY = sameScaleMax[si]\n\n        if (cnf.chart.stacked) {\n          // for stacked charts, we need to add the values\n          maxY = 0\n\n          s.forEach((ind, k) => {\n            // fix incorrectly adjust y scale issue #1215\n            if (ind.value !== -Number.MAX_VALUE) {\n              maxY += ind.value\n            }\n            if (minY !== Number.MIN_VALUE) {\n              minY += sameScaleMinYArr[si][k].value\n            }\n          })\n        }\n\n        s.forEach((ind, k) => {\n          if (s[k].key === i) {\n            if (cnf.yaxis[i].min !== undefined) {\n              if (typeof cnf.yaxis[i].min === 'function') {\n                minY = cnf.yaxis[i].min(gl.minY)\n              } else {\n                minY = cnf.yaxis[i].min\n              }\n            }\n            if (cnf.yaxis[i].max !== undefined) {\n              if (typeof cnf.yaxis[i].max === 'function') {\n                maxY = cnf.yaxis[i].max(gl.maxY)\n              } else {\n                maxY = cnf.yaxis[i].max\n              }\n            }\n\n            this.setYScaleForIndex(i, minY, maxY)\n          }\n        })\n      })\n    })\n  }\n\n  // experimental feature which scales the y-axis to a min/max based on x-axis range\n  autoScaleY(ctx, yaxis, e) {\n    if (!ctx) {\n      ctx = this\n    }\n\n    const w = ctx.w\n\n    if (w.globals.isMultipleYAxis || w.globals.collapsedSeries.length) {\n      // The autoScale option for multiple y-axis is turned off as it leads to buggy behavior.\n      // Also, when a series is collapsed, it results in incorrect behavior. Hence turned it off for that too - fixes apexcharts.js#795\n      console.warn('autoScaleYaxis is not supported in a multi-yaxis chart.')\n      return yaxis\n    }\n\n    const seriesX = w.globals.seriesX[0]\n\n    let isStacked = w.config.chart.stacked\n\n    yaxis.forEach((yaxe, yi) => {\n      let firstXIndex = 0\n\n      for (let xi = 0; xi < seriesX.length; xi++) {\n        if (seriesX[xi] >= e.xaxis.min) {\n          firstXIndex = xi\n          break\n        }\n      }\n\n      let initialMin = w.globals.minYArr[yi]\n      let initialMax = w.globals.maxYArr[yi]\n      let min, max\n\n      let stackedSer = w.globals.stackedSeriesTotals\n\n      w.globals.series.forEach((serie, sI) => {\n        let firstValue = serie[firstXIndex]\n\n        if (isStacked) {\n          firstValue = stackedSer[firstXIndex]\n          min = max = firstValue\n\n          stackedSer.forEach((y, yI) => {\n            if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n              if (y > max && y !== null) max = y\n              if (serie[yI] < min && serie[yI] !== null) min = serie[yI]\n            }\n          })\n        } else {\n          min = max = firstValue\n\n          serie.forEach((y, yI) => {\n            if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n              let valMin = y\n              let valMax = y\n              w.globals.series.forEach((wS, wSI) => {\n                if (y !== null) {\n                  valMin = Math.min(wS[yI], valMin)\n                  valMax = Math.max(wS[yI], valMax)\n                }\n              })\n              if (valMax > max && valMax !== null) max = valMax\n              if (valMin < min && valMin !== null) min = valMin\n            }\n          })\n        }\n\n        if (min === undefined && max === undefined) {\n          min = initialMin\n          max = initialMax\n        }\n        min *= min < 0 ? 1.1 : 0.9\n        max *= max < 0 ? 0.9 : 1.1\n\n        if (max < 0 && max < initialMax) {\n          max = initialMax\n        }\n        if (min < 0 && min > initialMin) {\n          min = initialMin\n        }\n\n        if (yaxis.length > 1) {\n          yaxis[sI].min = yaxe.min === undefined ? min : yaxe.min\n          yaxis[sI].max = yaxe.max === undefined ? max : yaxe.max\n        } else {\n          yaxis[0].min = yaxe.min === undefined ? min : yaxe.min\n          yaxis[0].max = yaxe.max === undefined ? max : yaxe.max\n        }\n      })\n    })\n\n    return yaxis\n  }\n}\n","import Utils from '../utils/Utils'\nimport DateTime from '../utils/DateTime'\nimport Scales from './Scales'\n\n/**\n * Range is used to generates values between min and max.\n *\n * @module Range\n **/\n\nclass Range {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.scales = new Scales(ctx)\n  }\n\n  init() {\n    this.setYRange()\n    this.setXRange()\n    this.setZRange()\n  }\n\n  getMinYMaxY(\n    startingIndex,\n    lowestY = Number.MAX_VALUE,\n    highestY = -Number.MAX_VALUE,\n    len = null\n  ) {\n    const cnf = this.w.config\n    const gl = this.w.globals\n    let maxY = -Number.MAX_VALUE\n    let minY = Number.MIN_VALUE\n\n    if (len === null) {\n      len = startingIndex + 1\n    }\n    const series = gl.series\n    let seriesMin = series\n    let seriesMax = series\n\n    if (cnf.chart.type === 'candlestick') {\n      seriesMin = gl.seriesCandleL\n      seriesMax = gl.seriesCandleH\n    } else if (cnf.chart.type === 'boxPlot') {\n      seriesMin = gl.seriesCandleO\n      seriesMax = gl.seriesCandleC\n    } else if (gl.isRangeData) {\n      seriesMin = gl.seriesRangeStart\n      seriesMax = gl.seriesRangeEnd\n    }\n\n    for (let i = startingIndex; i < len; i++) {\n      gl.dataPoints = Math.max(gl.dataPoints, series[i].length)\n\n      for (let j = 0; j < gl.series[i].length; j++) {\n        let val = series[i][j]\n        if (val !== null && Utils.isNumber(val)) {\n          if (typeof seriesMax[i][j] !== 'undefined') {\n            maxY = Math.max(maxY, seriesMax[i][j])\n          }\n          if (typeof seriesMin[i][j] !== 'undefined') {\n            lowestY = Math.min(lowestY, seriesMin[i][j])\n            highestY = Math.max(highestY, seriesMin[i][j])\n          }\n\n          if (\n            this.w.config.chart.type === 'candlestick' ||\n            this.w.config.chart.type === 'boxPlot'\n          ) {\n            if (typeof gl.seriesCandleC[i][j] !== 'undefined') {\n              maxY = Math.max(maxY, gl.seriesCandleO[i][j])\n              maxY = Math.max(maxY, gl.seriesCandleH[i][j])\n              maxY = Math.max(maxY, gl.seriesCandleL[i][j])\n              maxY = Math.max(maxY, gl.seriesCandleC[i][j])\n              if (this.w.config.chart.type === 'boxPlot') {\n                maxY = Math.max(maxY, gl.seriesCandleM[i][j])\n              }\n            }\n\n            // there is a combo chart and the specified series in not either candlestick or boxplot, find the max there\n            if (\n              cnf.series[i].type &&\n              (cnf.series[i].type !== 'candlestick' ||\n                cnf.series[i].type !== 'boxPlot')\n            ) {\n              maxY = Math.max(maxY, gl.series[i][j])\n              lowestY = Math.min(lowestY, gl.series[i][j])\n            }\n\n            highestY = maxY\n          }\n\n          if (\n            gl.seriesGoals[i] &&\n            gl.seriesGoals[i][j] &&\n            Array.isArray(gl.seriesGoals[i][j])\n          ) {\n            gl.seriesGoals[i][j].forEach((g) => {\n              if (minY !== Number.MIN_VALUE) {\n                minY = Math.min(minY, g.value)\n                lowestY = minY\n              }\n              maxY = Math.max(maxY, g.value)\n              highestY = maxY\n            })\n          }\n\n          if (Utils.isFloat(val)) {\n            val = Utils.noExponents(val)\n            gl.yValueDecimal = Math.max(\n              gl.yValueDecimal,\n              val.toString().split('.')[1].length\n            )\n          }\n          if (minY > seriesMin[i][j] && seriesMin[i][j] < 0) {\n            minY = seriesMin[i][j]\n          }\n        } else {\n          gl.hasNullValues = true\n        }\n      }\n    }\n\n    if (\n      (cnf.chart.type === 'rangeBar' || cnf.chart.type === 'gannt') &&\n      gl.seriesRangeStart.length &&\n      gl.isBarHorizontal &&\n      cnf.xaxis.type === 'datetime'\n    ) {\n      minY = lowestY\n    }\n\n    if (cnf.chart.type === 'bar') {\n      if (minY < 0 && maxY < 0) {\n        // all negative values in a bar chart, hence make the max to 0\n        maxY = 0\n      }\n      if (minY === Number.MIN_VALUE) {\n        minY = 0\n      }\n    }\n\n    return {\n      minY,\n      maxY,\n      lowestY,\n      highestY\n    }\n  }\n\n  setYRange() {\n    let gl = this.w.globals\n    let cnf = this.w.config\n    gl.maxY = -Number.MAX_VALUE\n    gl.minY = Number.MIN_VALUE\n\n    let lowestYInAllSeries = Number.MAX_VALUE\n\n    if (gl.isMultipleYAxis) {\n      // we need to get minY and maxY for multiple y axis\n      for (let i = 0; i < gl.series.length; i++) {\n        const minYMaxYArr = this.getMinYMaxY(i, lowestYInAllSeries, null, i + 1)\n        gl.minYArr.push(minYMaxYArr.minY)\n        gl.maxYArr.push(minYMaxYArr.maxY)\n        lowestYInAllSeries = minYMaxYArr.lowestY\n      }\n    }\n\n    // and then, get the minY and maxY from all series\n    const minYMaxY = this.getMinYMaxY(\n      0,\n      lowestYInAllSeries,\n      null,\n      gl.series.length\n    )\n    gl.minY = minYMaxY.minY\n    gl.maxY = minYMaxY.maxY\n    lowestYInAllSeries = minYMaxY.lowestY\n\n    if (cnf.chart.stacked) {\n      this._setStackedMinMax()\n    }\n\n    // if the numbers are too big, reduce the range\n    // for eg, if number is between 100000-110000, putting 0 as the lowest value is not so good idea. So change the gl.minY for line/area/candlesticks/boxPlot\n    if (\n      cnf.chart.type === 'line' ||\n      cnf.chart.type === 'area' ||\n      cnf.chart.type === 'candlestick' ||\n      cnf.chart.type === 'boxPlot' ||\n      cnf.chart.type === 'gantt' ||\n      (cnf.chart.type === 'rangeBar' && !gl.isBarHorizontal)\n    ) {\n      if (\n        gl.minY === Number.MIN_VALUE &&\n        lowestYInAllSeries !== -Number.MAX_VALUE &&\n        lowestYInAllSeries !== gl.maxY // single value possibility\n      ) {\n        let diff = gl.maxY - lowestYInAllSeries\n        if (\n          (lowestYInAllSeries >= 0 && lowestYInAllSeries <= 10) ||\n          cnf.yaxis[0].min !== undefined ||\n          cnf.yaxis[0].max !== undefined\n        ) {\n          // if minY is already 0/low value, we don't want to go negatives here - so this check is essential.\n          diff = 0\n        }\n\n        gl.minY = lowestYInAllSeries - (diff * 5) / 100\n\n        /* fix https://github.com/apexcharts/apexcharts.js/issues/614 */\n        /* fix https://github.com/apexcharts/apexcharts.js/issues/968 */\n        if (lowestYInAllSeries > 0 && gl.minY < 0) {\n          gl.minY = 0\n        }\n\n        /* fix https://github.com/apexcharts/apexcharts.js/issues/426 */\n        gl.maxY = gl.maxY + (diff * 5) / 100\n      }\n    }\n\n    cnf.yaxis.forEach((yaxe, index) => {\n      // override all min/max values by user defined values (y axis)\n      if (yaxe.max !== undefined) {\n        if (typeof yaxe.max === 'number') {\n          gl.maxYArr[index] = yaxe.max\n        } else if (typeof yaxe.max === 'function') {\n          // fixes apexcharts.js/issues/2098\n          gl.maxYArr[index] = yaxe.max(\n            gl.isMultipleYAxis ? gl.maxYArr[index] : gl.maxY\n          )\n        }\n\n        // gl.maxY is for single y-axis chart, it will be ignored in multi-yaxis\n        gl.maxY = gl.maxYArr[index]\n      }\n      if (yaxe.min !== undefined) {\n        if (typeof yaxe.min === 'number') {\n          gl.minYArr[index] = yaxe.min\n        } else if (typeof yaxe.min === 'function') {\n          // fixes apexcharts.js/issues/2098\n          gl.minYArr[index] = yaxe.min(\n            gl.isMultipleYAxis\n              ? gl.minYArr[index] === Number.MIN_VALUE\n                ? 0\n                : gl.minYArr[index]\n              : gl.minY\n          )\n        }\n        // gl.minY is for single y-axis chart, it will be ignored in multi-yaxis\n        gl.minY = gl.minYArr[index]\n      }\n    })\n\n    // for horizontal bar charts, we need to check xaxis min/max as user may have specified there\n    if (gl.isBarHorizontal) {\n      const minmax = ['min', 'max']\n      minmax.forEach((m) => {\n        if (cnf.xaxis[m] !== undefined && typeof cnf.xaxis[m] === 'number') {\n          m === 'min' ? (gl.minY = cnf.xaxis[m]) : (gl.maxY = cnf.xaxis[m])\n        }\n      })\n    }\n\n    // for multi y-axis we need different scales for each\n    if (gl.isMultipleYAxis) {\n      this.scales.setMultipleYScales()\n      gl.minY = lowestYInAllSeries\n      gl.yAxisScale.forEach((scale, i) => {\n        gl.minYArr[i] = scale.niceMin\n        gl.maxYArr[i] = scale.niceMax\n      })\n    } else {\n      this.scales.setYScaleForIndex(0, gl.minY, gl.maxY)\n      gl.minY = gl.yAxisScale[0].niceMin\n      gl.maxY = gl.yAxisScale[0].niceMax\n      gl.minYArr[0] = gl.yAxisScale[0].niceMin\n      gl.maxYArr[0] = gl.yAxisScale[0].niceMax\n    }\n\n    return {\n      minY: gl.minY,\n      maxY: gl.maxY,\n      minYArr: gl.minYArr,\n      maxYArr: gl.maxYArr,\n      yAxisScale: gl.yAxisScale\n    }\n  }\n\n  setXRange() {\n    let gl = this.w.globals\n    let cnf = this.w.config\n\n    const isXNumeric =\n      cnf.xaxis.type === 'numeric' ||\n      cnf.xaxis.type === 'datetime' ||\n      (cnf.xaxis.type === 'category' && !gl.noLabelsProvided) ||\n      gl.noLabelsProvided ||\n      gl.isXNumeric\n\n    const getInitialMinXMaxX = () => {\n      for (let i = 0; i < gl.series.length; i++) {\n        if (gl.labels[i]) {\n          for (let j = 0; j < gl.labels[i].length; j++) {\n            if (gl.labels[i][j] !== null && Utils.isNumber(gl.labels[i][j])) {\n              gl.maxX = Math.max(gl.maxX, gl.labels[i][j])\n              gl.initialMaxX = Math.max(gl.maxX, gl.labels[i][j])\n              gl.minX = Math.min(gl.minX, gl.labels[i][j])\n              gl.initialMinX = Math.min(gl.minX, gl.labels[i][j])\n            }\n          }\n        }\n      }\n    }\n    // minX maxX starts here\n    if (gl.isXNumeric) {\n      getInitialMinXMaxX()\n    }\n\n    if (gl.noLabelsProvided) {\n      if (cnf.xaxis.categories.length === 0) {\n        gl.maxX = gl.labels[gl.labels.length - 1]\n        gl.initialMaxX = gl.labels[gl.labels.length - 1]\n        gl.minX = 1\n        gl.initialMinX = 1\n      }\n    }\n\n    if (gl.isXNumeric || gl.noLabelsProvided || gl.dataFormatXNumeric) {\n      let ticks\n\n      if (cnf.xaxis.tickAmount === undefined) {\n        ticks = Math.round(gl.svgWidth / 150)\n\n        // no labels provided and total number of dataPoints is less than 30\n        if (cnf.xaxis.type === 'numeric' && gl.dataPoints < 30) {\n          ticks = gl.dataPoints - 1\n        }\n\n        // this check is for when ticks exceeds total datapoints and that would result in duplicate labels\n        if (ticks > gl.dataPoints && gl.dataPoints !== 0) {\n          ticks = gl.dataPoints - 1\n        }\n      } else if (cnf.xaxis.tickAmount === 'dataPoints') {\n        if (gl.series.length > 1) {\n          ticks = gl.series[gl.maxValsInArrayIndex].length - 1\n        }\n        if (gl.isXNumeric) {\n          ticks = gl.maxX - gl.minX - 1\n        }\n      } else {\n        ticks = cnf.xaxis.tickAmount\n      }\n      gl.xTickAmount = ticks\n\n      // override all min/max values by user defined values (x axis)\n      if (cnf.xaxis.max !== undefined && typeof cnf.xaxis.max === 'number') {\n        gl.maxX = cnf.xaxis.max\n      }\n      if (cnf.xaxis.min !== undefined && typeof cnf.xaxis.min === 'number') {\n        gl.minX = cnf.xaxis.min\n      }\n\n      // if range is provided, adjust the new minX\n      if (cnf.xaxis.range !== undefined) {\n        gl.minX = gl.maxX - cnf.xaxis.range\n      }\n\n      if (gl.minX !== Number.MAX_VALUE && gl.maxX !== -Number.MAX_VALUE) {\n        if (cnf.xaxis.convertedCatToNumeric && !gl.dataFormatXNumeric) {\n          let catScale = []\n          for (let i = gl.minX - 1; i < gl.maxX; i++) {\n            catScale.push(i + 1)\n          }\n          gl.xAxisScale = {\n            result: catScale,\n            niceMin: catScale[0],\n            niceMax: catScale[catScale.length - 1]\n          }\n        } else {\n          gl.xAxisScale = this.scales.setXScale(gl.minX, gl.maxX)\n        }\n      } else {\n        gl.xAxisScale = this.scales.linearScale(1, ticks, ticks)\n        if (gl.noLabelsProvided && gl.labels.length > 0) {\n          gl.xAxisScale = this.scales.linearScale(\n            1,\n            gl.labels.length,\n            ticks - 1\n          )\n\n          // this is the only place seriesX is again mutated\n          gl.seriesX = gl.labels.slice()\n        }\n      }\n      // we will still store these labels as the count for this will be different (to draw grid and labels placement)\n      if (isXNumeric) {\n        gl.labels = gl.xAxisScale.result.slice()\n      }\n    }\n\n    if (gl.isBarHorizontal && gl.labels.length) {\n      gl.xTickAmount = gl.labels.length\n    }\n\n    // single dataPoint\n    this._handleSingleDataPoint()\n\n    // minimum x difference to calculate bar width in numeric bars\n    this._getMinXDiff()\n\n    return {\n      minX: gl.minX,\n      maxX: gl.maxX\n    }\n  }\n\n  setZRange() {\n    // minZ, maxZ starts here\n    let gl = this.w.globals\n\n    if (!gl.isDataXYZ) return\n    for (let i = 0; i < gl.series.length; i++) {\n      if (typeof gl.seriesZ[i] !== 'undefined') {\n        for (let j = 0; j < gl.seriesZ[i].length; j++) {\n          if (gl.seriesZ[i][j] !== null && Utils.isNumber(gl.seriesZ[i][j])) {\n            gl.maxZ = Math.max(gl.maxZ, gl.seriesZ[i][j])\n            gl.minZ = Math.min(gl.minZ, gl.seriesZ[i][j])\n          }\n        }\n      }\n    }\n  }\n\n  _handleSingleDataPoint() {\n    const gl = this.w.globals\n    const cnf = this.w.config\n\n    if (gl.minX === gl.maxX) {\n      let datetimeObj = new DateTime(this.ctx)\n\n      if (cnf.xaxis.type === 'datetime') {\n        const newMinX = datetimeObj.getDate(gl.minX)\n        newMinX.setUTCDate(newMinX.getDate() - 2)\n        gl.minX = new Date(newMinX).getTime()\n\n        const newMaxX = datetimeObj.getDate(gl.maxX)\n        newMaxX.setUTCDate(newMaxX.getDate() + 2)\n        gl.maxX = new Date(newMaxX).getTime()\n      } else if (\n        cnf.xaxis.type === 'numeric' ||\n        (cnf.xaxis.type === 'category' && !gl.noLabelsProvided)\n      ) {\n        gl.minX = gl.minX - 2\n        gl.initialMinX = gl.minX\n        gl.maxX = gl.maxX + 2\n        gl.initialMaxX = gl.maxX\n      }\n    }\n  }\n\n  _getMinXDiff() {\n    const gl = this.w.globals\n\n    if (gl.isXNumeric) {\n      // get the least x diff if numeric x axis is present\n      gl.seriesX.forEach((sX, i) => {\n        if (sX.length === 1) {\n          // a small hack to prevent overlapping multiple bars when there is just 1 datapoint in bar series.\n          // fix #811\n          sX.push(\n            gl.seriesX[gl.maxValsInArrayIndex][\n              gl.seriesX[gl.maxValsInArrayIndex].length - 1\n            ]\n          )\n        }\n\n        // fix #983 (clone the array to avoid side effects)\n        const seriesX = sX.slice()\n        seriesX.sort((a, b) => a - b)\n\n        seriesX.forEach((s, j) => {\n          if (j > 0) {\n            let xDiff = s - seriesX[j - 1]\n            if (xDiff > 0) {\n              gl.minXDiff = Math.min(xDiff, gl.minXDiff)\n            }\n          }\n        })\n        if (gl.dataPoints === 1 && gl.minXDiff === Number.MAX_VALUE) {\n          // fixes apexcharts.js #1221\n          gl.minXDiff = 0.5\n        }\n      })\n    }\n  }\n\n  _setStackedMinMax() {\n    const gl = this.w.globals\n    // for stacked charts, we calculate each series's parallel values. i.e, series[0][j] + series[1][j] .... [series[i.length][j]] and get the max out of it\n    let stackedPoss = []\n    let stackedNegs = []\n\n    if (gl.series.length) {\n      for (let j = 0; j < gl.series[gl.maxValsInArrayIndex].length; j++) {\n        let poss = 0\n        let negs = 0\n        for (let i = 0; i < gl.series.length; i++) {\n          if (gl.series[i][j] !== null && Utils.isNumber(gl.series[i][j])) {\n            // 0.0001 fixes #185 when values are very small\n            gl.series[i][j] > 0\n              ? (poss = poss + parseFloat(gl.series[i][j]) + 0.0001)\n              : (negs = negs + parseFloat(gl.series[i][j]))\n          }\n\n          if (i === gl.series.length - 1) {\n            // push all the totals to the array for future use\n            stackedPoss.push(poss)\n            stackedNegs.push(negs)\n          }\n        }\n      }\n    }\n\n    // get the max/min out of the added parallel values\n    for (let z = 0; z < stackedPoss.length; z++) {\n      gl.maxY = Math.max(gl.maxY, stackedPoss[z])\n      gl.minY = Math.min(gl.minY, stackedNegs[z])\n    }\n  }\n}\n\nexport default Range\n","import Graphics from '../Graphics'\nimport Utils from '../../utils/Utils'\nimport AxesUtils from './AxesUtils'\n\n/**\n * ApexCharts YAxis Class for drawing Y-Axis.\n *\n * @module YAxis\n **/\n\nexport default class YAxis {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    const w = this.w\n\n    this.xaxisFontSize = w.config.xaxis.labels.style.fontSize\n    this.axisFontFamily = w.config.xaxis.labels.style.fontFamily\n\n    this.xaxisForeColors = w.config.xaxis.labels.style.colors\n    this.isCategoryBarHorizontal =\n      w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal\n\n    this.xAxisoffX = 0\n    if (w.config.xaxis.position === 'bottom') {\n      this.xAxisoffX = w.globals.gridHeight\n    }\n    this.drawnLabels = []\n    this.axesUtils = new AxesUtils(ctx)\n  }\n\n  drawYaxis(realIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    const yaxisStyle = w.config.yaxis[realIndex].labels.style\n    let yaxisFontSize = yaxisStyle.fontSize\n    let yaxisFontFamily = yaxisStyle.fontFamily\n    let yaxisFontWeight = yaxisStyle.fontWeight\n\n    let elYaxis = graphics.group({\n      class: 'apexcharts-yaxis',\n      rel: realIndex,\n      transform: 'translate(' + w.globals.translateYAxisX[realIndex] + ', 0)'\n    })\n\n    if (this.axesUtils.isYAxisHidden(realIndex)) {\n      return elYaxis\n    }\n\n    let elYaxisTexts = graphics.group({\n      class: 'apexcharts-yaxis-texts-g'\n    })\n\n    elYaxis.add(elYaxisTexts)\n\n    let tickAmount = w.globals.yAxisScale[realIndex].result.length - 1\n\n    // labelsDivider is simply svg height/number of ticks\n    let labelsDivider = w.globals.gridHeight / tickAmount\n\n    // initial label position = 0;\n    let l = w.globals.translateY\n    let lbFormatter = w.globals.yLabelFormatters[realIndex]\n\n    let labels = w.globals.yAxisScale[realIndex].result.slice()\n\n    labels = this.axesUtils.checkForReversedLabels(realIndex, labels)\n\n    let firstLabel = ''\n    if (w.config.yaxis[realIndex].labels.show) {\n      for (let i = tickAmount; i >= 0; i--) {\n        let val = labels[i]\n\n        val = lbFormatter(val, i, w)\n\n        let xPad = w.config.yaxis[realIndex].labels.padding\n        if (w.config.yaxis[realIndex].opposite && w.config.yaxis.length !== 0) {\n          xPad = xPad * -1\n        }\n\n        const yColors = this.axesUtils.getYAxisForeColor(\n          yaxisStyle.colors,\n          realIndex\n        )\n        const getForeColor = () => {\n          return Array.isArray(yColors) ? yColors[i] : yColors\n        }\n\n        let label = graphics.drawText({\n          x: xPad,\n          y: l + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY + 1,\n          text: val,\n          textAnchor: w.config.yaxis[realIndex].opposite ? 'start' : 'end',\n          fontSize: yaxisFontSize,\n          fontFamily: yaxisFontFamily,\n          fontWeight: yaxisFontWeight,\n          foreColor: getForeColor(),\n          isPlainText: false,\n          cssClass: 'apexcharts-yaxis-label ' + yaxisStyle.cssClass\n        })\n        if (i === tickAmount) {\n          firstLabel = label\n        }\n        elYaxisTexts.add(label)\n\n        let elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title')\n        elTooltipTitle.textContent = Array.isArray(val) ? val.join(' ') : val\n        label.node.appendChild(elTooltipTitle)\n\n        if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n          let firstabelRotatingCenter = graphics.rotateAroundCenter(\n            firstLabel.node\n          )\n          let labelRotatingCenter = graphics.rotateAroundCenter(label.node)\n          label.node.setAttribute(\n            'transform',\n            `rotate(${w.config.yaxis[realIndex].labels.rotate} ${firstabelRotatingCenter.x} ${labelRotatingCenter.y})`\n          )\n        }\n        l = l + labelsDivider\n      }\n    }\n\n    if (w.config.yaxis[realIndex].title.text !== undefined) {\n      let elYaxisTitle = graphics.group({\n        class: 'apexcharts-yaxis-title'\n      })\n\n      let x = 0\n      if (w.config.yaxis[realIndex].opposite) {\n        x = w.globals.translateYAxisX[realIndex]\n      }\n      let elYAxisTitleText = graphics.drawText({\n        x,\n        y:\n          w.globals.gridHeight / 2 +\n          w.globals.translateY +\n          w.config.yaxis[realIndex].title.offsetY,\n        text: w.config.yaxis[realIndex].title.text,\n        textAnchor: 'end',\n        foreColor: w.config.yaxis[realIndex].title.style.color,\n        fontSize: w.config.yaxis[realIndex].title.style.fontSize,\n        fontWeight: w.config.yaxis[realIndex].title.style.fontWeight,\n        fontFamily: w.config.yaxis[realIndex].title.style.fontFamily,\n        cssClass:\n          'apexcharts-yaxis-title-text ' +\n          w.config.yaxis[realIndex].title.style.cssClass\n      })\n\n      elYaxisTitle.add(elYAxisTitleText)\n\n      elYaxis.add(elYaxisTitle)\n    }\n\n    let axisBorder = w.config.yaxis[realIndex].axisBorder\n\n    let x = 31 + axisBorder.offsetX\n    if (w.config.yaxis[realIndex].opposite) {\n      x = -31 - axisBorder.offsetX\n    }\n\n    if (axisBorder.show) {\n      let elVerticalLine = graphics.drawLine(\n        x,\n        w.globals.translateY + axisBorder.offsetY - 2,\n        x,\n        w.globals.gridHeight + w.globals.translateY + axisBorder.offsetY + 2,\n        axisBorder.color,\n        0,\n        axisBorder.width\n      )\n\n      elYaxis.add(elVerticalLine)\n    }\n    if (w.config.yaxis[realIndex].axisTicks.show) {\n      this.axesUtils.drawYAxisTicks(\n        x,\n        tickAmount,\n        axisBorder,\n        w.config.yaxis[realIndex].axisTicks,\n        realIndex,\n        labelsDivider,\n        elYaxis\n      )\n    }\n\n    return elYaxis\n  }\n\n  // This actually becomes horizontal axis (for bar charts)\n  drawYaxisInversed(realIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    let elXaxis = graphics.group({\n      class: 'apexcharts-xaxis apexcharts-yaxis-inversed'\n    })\n\n    let elXaxisTexts = graphics.group({\n      class: 'apexcharts-xaxis-texts-g',\n      transform: `translate(${w.globals.translateXAxisX}, ${w.globals.translateXAxisY})`\n    })\n\n    elXaxis.add(elXaxisTexts)\n\n    let tickAmount = w.globals.yAxisScale[realIndex].result.length - 1\n\n    // labelsDivider is simply svg width/number of ticks\n    let labelsDivider = w.globals.gridWidth / tickAmount + 0.1\n\n    // initial label position;\n    let l = labelsDivider + w.config.xaxis.labels.offsetX\n\n    let lbFormatter = w.globals.xLabelFormatter\n\n    let labels = w.globals.yAxisScale[realIndex].result.slice()\n\n    let timescaleLabels = w.globals.timescaleLabels\n    if (timescaleLabels.length > 0) {\n      this.xaxisLabels = timescaleLabels.slice()\n      labels = timescaleLabels.slice()\n      tickAmount = labels.length\n    }\n\n    labels = this.axesUtils.checkForReversedLabels(realIndex, labels)\n\n    const tl = timescaleLabels.length\n\n    if (w.config.xaxis.labels.show) {\n      for (let i = tl ? 0 : tickAmount; tl ? i < tl : i >= 0; tl ? i++ : i--) {\n        let val = labels[i]\n        val = lbFormatter(val, i, w)\n\n        let x =\n          w.globals.gridWidth +\n          w.globals.padHorizontal -\n          (l - labelsDivider + w.config.xaxis.labels.offsetX)\n\n        if (timescaleLabels.length) {\n          let label = this.axesUtils.getLabel(\n            labels,\n            timescaleLabels,\n            x,\n            i,\n            this.drawnLabels,\n            this.xaxisFontSize\n          )\n          x = label.x\n          val = label.text\n          this.drawnLabels.push(label.text)\n\n          if (i === 0 && w.globals.skipFirstTimelinelabel) {\n            val = ''\n          }\n          if (i === labels.length - 1 && w.globals.skipLastTimelinelabel) {\n            val = ''\n          }\n        }\n        let elTick = graphics.drawText({\n          x,\n          y:\n            this.xAxisoffX +\n            w.config.xaxis.labels.offsetY +\n            30 -\n            (w.config.xaxis.position === 'top'\n              ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2\n              : 0),\n          text: val,\n          textAnchor: 'middle',\n          foreColor: Array.isArray(this.xaxisForeColors)\n            ? this.xaxisForeColors[realIndex]\n            : this.xaxisForeColors,\n          fontSize: this.xaxisFontSize,\n          fontFamily: this.xaxisFontFamily,\n          fontWeight: w.config.xaxis.labels.style.fontWeight,\n          isPlainText: false,\n          cssClass:\n            'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n        })\n\n        elXaxisTexts.add(elTick)\n\n        elTick.tspan(val)\n\n        let elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title')\n        elTooltipTitle.textContent = val\n        elTick.node.appendChild(elTooltipTitle)\n\n        l = l + labelsDivider\n      }\n    }\n\n    this.inversedYAxisTitleText(elXaxis)\n    this.inversedYAxisBorder(elXaxis)\n\n    return elXaxis\n  }\n\n  inversedYAxisBorder(parent) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    let axisBorder = w.config.xaxis.axisBorder\n    if (axisBorder.show) {\n      let lineCorrection = 0\n      if (w.config.chart.type === 'bar' && w.globals.isXNumeric) {\n        lineCorrection = lineCorrection - 15\n      }\n      let elHorzLine = graphics.drawLine(\n        w.globals.padHorizontal + lineCorrection + axisBorder.offsetX,\n        this.xAxisoffX,\n        w.globals.gridWidth,\n        this.xAxisoffX,\n        axisBorder.color,\n        0,\n        axisBorder.height\n      )\n\n      parent.add(elHorzLine)\n    }\n  }\n\n  inversedYAxisTitleText(parent) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n    if (w.config.xaxis.title.text !== undefined) {\n      let elYaxisTitle = graphics.group({\n        class: 'apexcharts-xaxis-title apexcharts-yaxis-title-inversed'\n      })\n\n      let elYAxisTitleText = graphics.drawText({\n        x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n        y:\n          this.xAxisoffX +\n          parseFloat(this.xaxisFontSize) +\n          parseFloat(w.config.xaxis.title.style.fontSize) +\n          w.config.xaxis.title.offsetY +\n          20,\n        text: w.config.xaxis.title.text,\n        textAnchor: 'middle',\n        fontSize: w.config.xaxis.title.style.fontSize,\n        fontFamily: w.config.xaxis.title.style.fontFamily,\n        fontWeight: w.config.xaxis.title.style.fontWeight,\n        foreColor: w.config.xaxis.title.style.color,\n        cssClass:\n          'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n      })\n\n      elYaxisTitle.add(elYAxisTitleText)\n\n      parent.add(elYaxisTitle)\n    }\n  }\n\n  yAxisTitleRotate(realIndex, yAxisOpposite) {\n    let w = this.w\n\n    let graphics = new Graphics(this.ctx)\n\n    let yAxisLabelsCoord = {\n      width: 0,\n      height: 0\n    }\n    let yAxisTitleCoord = {\n      width: 0,\n      height: 0\n    }\n\n    let elYAxisLabelsWrap = w.globals.dom.baseEl.querySelector(\n      ` .apexcharts-yaxis[rel='${realIndex}'] .apexcharts-yaxis-texts-g`\n    )\n\n    if (elYAxisLabelsWrap !== null) {\n      yAxisLabelsCoord = elYAxisLabelsWrap.getBoundingClientRect()\n    }\n\n    let yAxisTitle = w.globals.dom.baseEl.querySelector(\n      `.apexcharts-yaxis[rel='${realIndex}'] .apexcharts-yaxis-title text`\n    )\n\n    if (yAxisTitle !== null) {\n      yAxisTitleCoord = yAxisTitle.getBoundingClientRect()\n    }\n\n    if (yAxisTitle !== null) {\n      let x = this.xPaddingForYAxisTitle(\n        realIndex,\n        yAxisLabelsCoord,\n        yAxisTitleCoord,\n        yAxisOpposite\n      )\n\n      yAxisTitle.setAttribute('x', x.xPos - (yAxisOpposite ? 10 : 0))\n    }\n\n    if (yAxisTitle !== null) {\n      let titleRotatingCenter = graphics.rotateAroundCenter(yAxisTitle)\n      yAxisTitle.setAttribute(\n        'transform',\n        `rotate(${yAxisOpposite\n          ? w.config.yaxis[realIndex].title.rotate * -1\n          : w.config.yaxis[realIndex].title.rotate\n        } ${titleRotatingCenter.x} ${titleRotatingCenter.y})`\n      )\n    }\n  }\n\n  xPaddingForYAxisTitle(\n    realIndex,\n    yAxisLabelsCoord,\n    yAxisTitleCoord,\n    yAxisOpposite\n  ) {\n    let w = this.w\n    let oppositeAxisCount = 0\n\n    let x = 0\n    let padd = 10\n\n    if (w.config.yaxis[realIndex].title.text === undefined || realIndex < 0) {\n      return {\n        xPos: x,\n        padd: 0\n      }\n    }\n\n    if (yAxisOpposite) {\n      x =\n        yAxisLabelsCoord.width +\n        w.config.yaxis[realIndex].title.offsetX +\n        yAxisTitleCoord.width / 2 +\n        padd / 2\n\n      oppositeAxisCount += 1\n\n      if (oppositeAxisCount === 0) {\n        x = x - padd / 2\n      }\n    } else {\n      x =\n        yAxisLabelsCoord.width * -1 +\n        w.config.yaxis[realIndex].title.offsetX +\n        padd / 2 +\n        yAxisTitleCoord.width / 2\n\n      if (w.globals.isBarHorizontal) {\n        padd = 25\n        x =\n          yAxisLabelsCoord.width * -1 -\n          w.config.yaxis[realIndex].title.offsetX -\n          padd\n      }\n    }\n\n    return {\n      xPos: x,\n      padd\n    }\n  }\n\n  // sets the x position of the y-axis by counting the labels width, title width and any offset\n  setYAxisXPosition(yaxisLabelCoords, yTitleCoords) {\n    let w = this.w\n\n    let xLeft = 0\n    let xRight = 0\n    let leftOffsetX = 18\n    let rightOffsetX = 1\n\n    if (w.config.yaxis.length > 1) {\n      this.multipleYs = true\n    }\n\n    w.config.yaxis.map((yaxe, index) => {\n      let shouldNotDrawAxis =\n        w.globals.ignoreYAxisIndexes.indexOf(index) > -1 ||\n        !yaxe.show ||\n        yaxe.floating ||\n        yaxisLabelCoords[index].width === 0\n\n      let axisWidth = yaxisLabelCoords[index].width + yTitleCoords[index].width\n\n      if (!yaxe.opposite) {\n        xLeft = w.globals.translateX - leftOffsetX\n\n        if (!shouldNotDrawAxis) {\n          leftOffsetX = leftOffsetX + axisWidth + 20\n        }\n\n        w.globals.translateYAxisX[index] = xLeft + yaxe.labels.offsetX\n      } else {\n        if (w.globals.isBarHorizontal) {\n          xRight = w.globals.gridWidth + w.globals.translateX - 1\n\n          w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX\n        } else {\n          xRight = w.globals.gridWidth + w.globals.translateX + rightOffsetX\n\n          if (!shouldNotDrawAxis) {\n            rightOffsetX = rightOffsetX + axisWidth + 20\n          }\n\n          w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX + 20\n        }\n      }\n    })\n  }\n\n  setYAxisTextAlignments() {\n    const w = this.w\n\n    let yaxis = w.globals.dom.baseEl.getElementsByClassName(`apexcharts-yaxis`)\n    yaxis = Utils.listToArray(yaxis)\n    yaxis.forEach((y, index) => {\n      const yaxe = w.config.yaxis[index]\n      // proceed only if user has specified alignment\n      if (yaxe && yaxe.labels.align !== undefined) {\n        const yAxisInner = w.globals.dom.baseEl.querySelector(\n          `.apexcharts-yaxis[rel='${index}'] .apexcharts-yaxis-texts-g`\n        )\n        let yAxisTexts = w.globals.dom.baseEl.querySelectorAll(\n          `.apexcharts-yaxis[rel='${index}'] .apexcharts-yaxis-label`\n        )\n\n        yAxisTexts = Utils.listToArray(yAxisTexts)\n\n        const rect = yAxisInner.getBoundingClientRect()\n\n        if (yaxe.labels.align === 'left') {\n          yAxisTexts.forEach((label, lI) => {\n            label.setAttribute('text-anchor', 'start')\n          })\n          if (!yaxe.opposite) {\n            yAxisInner.setAttribute('transform', `translate(-${rect.width}, 0)`)\n          }\n        } else if (yaxe.labels.align === 'center') {\n          yAxisTexts.forEach((label, lI) => {\n            label.setAttribute('text-anchor', 'middle')\n          })\n          yAxisInner.setAttribute(\n            'transform',\n            `translate(${(rect.width / 2) * (!yaxe.opposite ? -1 : 1)}, 0)`\n          )\n        } else if (yaxe.labels.align === 'right') {\n          yAxisTexts.forEach((label, lI) => {\n            label.setAttribute('text-anchor', 'end')\n          })\n          if (yaxe.opposite) {\n            yAxisInner.setAttribute('transform', `translate(${rect.width}, 0)`)\n          }\n        }\n      }\n    })\n  }\n\n  drawGanttYAxis() { }\n}\n","import Utils from '../utils/Utils'\n\nexport default class Events {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.documentEvent = Utils.bind(this.documentEvent, this)\n  }\n\n  addEventListener(name, handler) {\n    const w = this.w\n\n    if (w.globals.events.hasOwnProperty(name)) {\n      w.globals.events[name].push(handler)\n    } else {\n      w.globals.events[name] = [handler]\n    }\n  }\n\n  removeEventListener(name, handler) {\n    const w = this.w\n    if (!w.globals.events.hasOwnProperty(name)) {\n      return\n    }\n\n    let index = w.globals.events[name].indexOf(handler)\n    if (index !== -1) {\n      w.globals.events[name].splice(index, 1)\n    }\n  }\n\n  fireEvent(name, args) {\n    const w = this.w\n\n    if (!w.globals.events.hasOwnProperty(name)) {\n      return\n    }\n\n    if (!args || !args.length) {\n      args = []\n    }\n\n    let evs = w.globals.events[name]\n    let l = evs.length\n\n    for (let i = 0; i < l; i++) {\n      evs[i].apply(null, args)\n    }\n  }\n\n  setupEventHandlers() {\n    const w = this.w\n    const me = this.ctx\n\n    let clickableArea = w.globals.dom.baseEl.querySelector(w.globals.chartClass)\n\n    this.ctx.eventList.forEach((event) => {\n      clickableArea.addEventListener(\n        event,\n        (e) => {\n          const opts = Object.assign({}, w, {\n            seriesIndex: w.globals.capturedSeriesIndex,\n            dataPointIndex: w.globals.capturedDataPointIndex\n          })\n\n          if (e.type === 'mousemove' || e.type === 'touchmove') {\n            if (typeof w.config.chart.events.mouseMove === 'function') {\n              w.config.chart.events.mouseMove(e, me, opts)\n            }\n          } else if (e.type === 'mouseleave' || e.type === 'touchleave') {\n            if (typeof w.config.chart.events.mouseLeave === 'function') {\n              w.config.chart.events.mouseLeave(e, me, opts)\n            }\n          } else if (\n            (e.type === 'mouseup' && e.which === 1) ||\n            e.type === 'touchend'\n          ) {\n            if (typeof w.config.chart.events.click === 'function') {\n              w.config.chart.events.click(e, me, opts)\n            }\n            me.ctx.events.fireEvent('click', [e, me, opts])\n          }\n        },\n        { capture: false, passive: true }\n      )\n    })\n\n    this.ctx.eventList.forEach((event) => {\n      w.globals.dom.baseEl.addEventListener(event, this.documentEvent, {\n        passive: true\n      })\n    })\n\n    this.ctx.core.setupBrushHandler()\n  }\n\n  documentEvent(e) {\n    const w = this.w\n    const target = e.target.className\n\n    if (e.type === 'click') {\n      let elMenu = w.globals.dom.baseEl.querySelector('.apexcharts-menu')\n      if (\n        elMenu &&\n        elMenu.classList.contains('apexcharts-menu-open') &&\n        target !== 'apexcharts-menu-icon'\n      ) {\n        elMenu.classList.remove('apexcharts-menu-open')\n      }\n    }\n\n    w.globals.clientX =\n      e.type === 'touchmove' ? e.touches[0].clientX : e.clientX\n    w.globals.clientY =\n      e.type === 'touchmove' ? e.touches[0].clientY : e.clientY\n  }\n}\n","import Utils from '../../utils/Utils'\n\nimport en from '../../locales/en.json'\n\nexport default class Localization {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  setCurrentLocaleValues(localeName) {\n    let locales = this.w.config.chart.locales\n\n    // check if user has specified locales in global Apex variable\n    // if yes - then extend those with local chart's locale\n    if (\n      window.Apex.chart &&\n      window.Apex.chart.locales &&\n      window.Apex.chart.locales.length > 0\n    ) {\n      locales = this.w.config.chart.locales.concat(window.Apex.chart.locales)\n    }\n\n    // find the locale from the array of locales which user has set (either by chart.defaultLocale or by calling setLocale() method.)\n    const selectedLocale = locales.filter((c) => c.name === localeName)[0]\n\n    if (selectedLocale) {\n      // create a complete locale object by extending defaults so you don't get undefined errors.\n      let ret = Utils.extend(en, selectedLocale)\n\n      // store these locale options in global var for ease access\n      this.w.globals.locale = ret.options\n    } else {\n      throw new Error(\n        'Wrong locale name provided. Please make sure you set the correct locale name in options'\n      )\n    }\n  }\n}\n","import XAxis from './XAxis'\nimport YAxis from './YAxis'\n\nexport default class Axes {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  drawAxis(type, xyRatios) {\n    let gl = this.w.globals\n    let cnf = this.w.config\n\n    let xAxis = new XAxis(this.ctx)\n    let yAxis = new YAxis(this.ctx)\n    let elXaxis, elYaxis\n    if (this.w.config.chart.type === 'gantt') {\n      elYaxis = yAxis.drawGanttYAxis(0)\n      elXaxis = xAxis.drawGanttXAxis(0)\n\n      gl.dom.elGraphical.add(elXaxis)\n      gl.dom.elGraphical.add(elYaxis)\n      return\n    }\n\n    if (gl.axisCharts && type !== 'radar') {\n      if (gl.isBarHorizontal) {\n        elYaxis = yAxis.drawYaxisInversed(0)\n        elXaxis = xAxis.drawXaxisInversed(0)\n\n        gl.dom.elGraphical.add(elXaxis)\n        gl.dom.elGraphical.add(elYaxis)\n      } else {\n        elXaxis = xAxis.drawXaxis()\n        gl.dom.elGraphical.add(elXaxis)\n\n        cnf.yaxis.map((yaxe, index) => {\n          if (gl.ignoreYAxisIndexes.indexOf(index) === -1) {\n            elYaxis = yAxis.drawYaxis(index)\n            gl.dom.Paper.add(elYaxis)\n          }\n        })\n      }\n    }\n  }\n}\n","import Graphics from './Graphics'\nimport Filters from './Filters'\nimport Utils from '../utils/Utils'\n\nclass Crosshairs {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  drawXCrosshairs() {\n    const w = this.w\n\n    let graphics = new Graphics(this.ctx)\n    let filters = new Filters(this.ctx)\n\n    let crosshairGradient = w.config.xaxis.crosshairs.fill.gradient\n    let crosshairShadow = w.config.xaxis.crosshairs.dropShadow\n\n    let fillType = w.config.xaxis.crosshairs.fill.type\n    let gradientFrom = crosshairGradient.colorFrom\n    let gradientTo = crosshairGradient.colorTo\n    let opacityFrom = crosshairGradient.opacityFrom\n    let opacityTo = crosshairGradient.opacityTo\n    let stops = crosshairGradient.stops\n\n    let shadow = 'none'\n    let dropShadow = crosshairShadow.enabled\n    let shadowLeft = crosshairShadow.left\n    let shadowTop = crosshairShadow.top\n    let shadowBlur = crosshairShadow.blur\n    let shadowColor = crosshairShadow.color\n    let shadowOpacity = crosshairShadow.opacity\n\n    let xcrosshairsFill = w.config.xaxis.crosshairs.fill.color\n\n    if (w.config.xaxis.crosshairs.show) {\n      if (fillType === 'gradient') {\n        xcrosshairsFill = graphics.drawGradient(\n          'vertical',\n          gradientFrom,\n          gradientTo,\n          opacityFrom,\n          opacityTo,\n          null,\n          stops,\n          null\n        )\n      }\n\n      let xcrosshairs = graphics.drawRect()\n      if (w.config.xaxis.crosshairs.width === 1) {\n        // to prevent drawing 2 lines, convert rect to line\n        xcrosshairs = graphics.drawLine()\n      }\n\n      let gridHeight = w.globals.gridHeight\n      if (!Utils.isNumber(gridHeight) || gridHeight < 0) {\n        gridHeight = 0\n      }\n      let crosshairsWidth = w.config.xaxis.crosshairs.width\n      if (!Utils.isNumber(crosshairsWidth) || crosshairsWidth < 0) {\n        crosshairsWidth = 0\n      }\n\n      xcrosshairs.attr({\n        class: 'apexcharts-xcrosshairs',\n        x: 0,\n        y: 0,\n        y2: gridHeight,\n        width: crosshairsWidth,\n        height: gridHeight,\n        fill: xcrosshairsFill,\n        filter: shadow,\n        'fill-opacity': w.config.xaxis.crosshairs.opacity,\n        stroke: w.config.xaxis.crosshairs.stroke.color,\n        'stroke-width': w.config.xaxis.crosshairs.stroke.width,\n        'stroke-dasharray': w.config.xaxis.crosshairs.stroke.dashArray\n      })\n\n      if (dropShadow) {\n        xcrosshairs = filters.dropShadow(xcrosshairs, {\n          left: shadowLeft,\n          top: shadowTop,\n          blur: shadowBlur,\n          color: shadowColor,\n          opacity: shadowOpacity\n        })\n      }\n\n      w.globals.dom.elGraphical.add(xcrosshairs)\n    }\n  }\n\n  drawYCrosshairs() {\n    const w = this.w\n\n    let graphics = new Graphics(this.ctx)\n\n    let crosshair = w.config.yaxis[0].crosshairs\n    const offX = w.globals.barPadForNumericAxis\n\n    if (w.config.yaxis[0].crosshairs.show) {\n      let ycrosshairs = graphics.drawLine(\n        -offX,\n        0,\n        w.globals.gridWidth + offX,\n        0,\n        crosshair.stroke.color,\n        crosshair.stroke.dashArray,\n        crosshair.stroke.width\n      )\n      ycrosshairs.attr({\n        class: 'apexcharts-ycrosshairs'\n      })\n\n      w.globals.dom.elGraphical.add(ycrosshairs)\n    }\n\n    // draw an invisible crosshair to help in positioning the yaxis tooltip\n    let ycrosshairsHidden = graphics.drawLine(\n      -offX,\n      0,\n      w.globals.gridWidth + offX,\n      0,\n      crosshair.stroke.color,\n      0,\n      0\n    )\n    ycrosshairsHidden.attr({\n      class: 'apexcharts-ycrosshairs-hidden'\n    })\n\n    w.globals.dom.elGraphical.add(ycrosshairsHidden)\n  }\n}\n\nexport default Crosshairs\n","import Config from './settings/Config'\nimport Utils from '../utils/Utils'\nimport CoreUtils from './CoreUtils'\n\n/**\n * ApexCharts Responsive Class to override options for different screen sizes.\n *\n * @module Responsive\n **/\n\nexport default class Responsive {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  // the opts parameter if not null has to be set overriding everything\n  // as the opts is set by user externally\n  checkResponsiveConfig(opts) {\n    const w = this.w\n    const cnf = w.config\n\n    // check if responsive config exists\n    if (cnf.responsive.length === 0) return\n\n    let res = cnf.responsive.slice()\n    res\n      .sort((a, b) =>\n        a.breakpoint > b.breakpoint ? 1 : b.breakpoint > a.breakpoint ? -1 : 0\n      )\n      .reverse()\n\n    let config = new Config({})\n\n    const iterateResponsiveOptions = (newOptions = {}) => {\n      let largestBreakpoint = res[0].breakpoint\n      const width = window.innerWidth > 0 ? window.innerWidth : screen.width\n\n      if (width > largestBreakpoint) {\n        let options = CoreUtils.extendArrayProps(\n          config,\n          w.globals.initialConfig,\n          w\n        )\n        newOptions = Utils.extend(options, newOptions)\n        newOptions = Utils.extend(w.config, newOptions)\n        this.overrideResponsiveOptions(newOptions)\n      } else {\n        for (let i = 0; i < res.length; i++) {\n          if (width < res[i].breakpoint) {\n            newOptions = CoreUtils.extendArrayProps(config, res[i].options, w)\n            newOptions = Utils.extend(w.config, newOptions)\n            this.overrideResponsiveOptions(newOptions)\n          }\n        }\n      }\n    }\n\n    if (opts) {\n      let options = CoreUtils.extendArrayProps(config, opts, w)\n      options = Utils.extend(w.config, options)\n      options = Utils.extend(options, opts)\n      iterateResponsiveOptions(options)\n    } else {\n      iterateResponsiveOptions({})\n    }\n  }\n\n  overrideResponsiveOptions(newOptions) {\n    let newConfig = new Config(newOptions).init({ responsiveOverride: true })\n    this.w.config = newConfig\n  }\n}\n","import Utils from '../utils/Utils'\n\n/**\n * ApexCharts Theme Class for setting the colors and palettes.\n *\n * @module Theme\n **/\n\nexport default class Theme {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.colors = []\n    this.w = ctx.w\n    const w = this.w\n\n    this.isColorFn = false\n    this.isHeatmapDistributed =\n      (w.config.chart.type === 'treemap' &&\n        w.config.plotOptions.treemap.distributed) ||\n      (w.config.chart.type === 'heatmap' &&\n        w.config.plotOptions.heatmap.distributed)\n    this.isBarDistributed =\n      w.config.plotOptions.bar.distributed &&\n      (w.config.chart.type === 'bar' ||\n        w.config.chart.type === 'rangeBar' ||\n        w.config.chart.type === 'gantt')\n  }\n\n  init() {\n    this.setDefaultColors()\n  }\n\n  setDefaultColors() {\n    let w = this.w\n    let utils = new Utils()\n\n    w.globals.dom.elWrap.classList.add(\n      `apexcharts-theme-${w.config.theme.mode}`\n    )\n\n    if (w.config.colors === undefined) {\n      w.globals.colors = this.predefined()\n    } else {\n      w.globals.colors = w.config.colors\n\n      // if user provided a function in colors, we need to eval here\n      if (\n        Array.isArray(w.config.colors) &&\n        w.config.colors.length > 0 &&\n        typeof w.config.colors[0] === 'function'\n      ) {\n        w.globals.colors = w.config.series.map((s, i) => {\n          let c = w.config.colors[i]\n          if (!c) c = w.config.colors[0]\n          if (typeof c === 'function') {\n            this.isColorFn = true\n            return c({\n              value: w.globals.axisCharts\n                ? w.globals.series[i][0]\n                  ? w.globals.series[i][0]\n                  : 0\n                : w.globals.series[i],\n              seriesIndex: i,\n              dataPointIndex: i,\n              w\n            })\n          }\n          return c\n        })\n      }\n    }\n\n    // user defined colors in series array\n    w.globals.seriesColors.map((c, i) => {\n      if (c) {\n        w.globals.colors[i] = c\n      }\n    })\n\n    if (w.config.theme.monochrome.enabled) {\n      let monoArr = []\n      let glsCnt = w.globals.series.length\n      if (this.isBarDistributed || this.isHeatmapDistributed) {\n        glsCnt = w.globals.series[0].length * w.globals.series.length\n      }\n\n      let mainColor = w.config.theme.monochrome.color\n      let part = 1 / (glsCnt / w.config.theme.monochrome.shadeIntensity)\n      let shade = w.config.theme.monochrome.shadeTo\n      let percent = 0\n\n      for (let gsl = 0; gsl < glsCnt; gsl++) {\n        let newColor\n\n        if (shade === 'dark') {\n          newColor = utils.shadeColor(percent * -1, mainColor)\n          percent = percent + part\n        } else {\n          newColor = utils.shadeColor(percent, mainColor)\n          percent = percent + part\n        }\n\n        monoArr.push(newColor)\n      }\n      w.globals.colors = monoArr.slice()\n    }\n    const defaultColors = w.globals.colors.slice()\n\n    // if user specified fewer colors than no. of series, push the same colors again\n    this.pushExtraColors(w.globals.colors)\n\n    const colorTypes = ['fill', 'stroke']\n    colorTypes.forEach((c) => {\n      if (w.config[c].colors === undefined) {\n        w.globals[c].colors = this.isColorFn ? w.config.colors : defaultColors\n      } else {\n        w.globals[c].colors = w.config[c].colors.slice()\n      }\n      this.pushExtraColors(w.globals[c].colors)\n    })\n\n    if (w.config.dataLabels.style.colors === undefined) {\n      w.globals.dataLabels.style.colors = defaultColors\n    } else {\n      w.globals.dataLabels.style.colors = w.config.dataLabels.style.colors.slice()\n    }\n    this.pushExtraColors(w.globals.dataLabels.style.colors, 50)\n\n    if (w.config.plotOptions.radar.polygons.fill.colors === undefined) {\n      w.globals.radarPolygons.fill.colors = [\n        w.config.theme.mode === 'dark' ? '#424242' : 'none'\n      ]\n    } else {\n      w.globals.radarPolygons.fill.colors = w.config.plotOptions.radar.polygons.fill.colors.slice()\n    }\n    this.pushExtraColors(w.globals.radarPolygons.fill.colors, 20)\n\n    // The point colors\n    if (w.config.markers.colors === undefined) {\n      w.globals.markers.colors = defaultColors\n    } else {\n      w.globals.markers.colors = w.config.markers.colors.slice()\n    }\n    this.pushExtraColors(w.globals.markers.colors)\n  }\n\n  // When the number of colors provided is less than the number of series, this method\n  // will push same colors to the list\n  // params:\n  // distributed is only valid for distributed column/bar charts\n  pushExtraColors(colorSeries, length, distributed = null) {\n    let w = this.w\n\n    let len = length || w.globals.series.length\n\n    if (distributed === null) {\n      distributed =\n        this.isBarDistributed ||\n        this.isHeatmapDistributed ||\n        (w.config.chart.type === 'heatmap' &&\n          w.config.plotOptions.heatmap.colorScale.inverse)\n    }\n\n    if (distributed && w.globals.series.length) {\n      len =\n        w.globals.series[w.globals.maxValsInArrayIndex].length *\n        w.globals.series.length\n    }\n\n    if (colorSeries.length < len) {\n      let diff = len - colorSeries.length\n      for (let i = 0; i < diff; i++) {\n        colorSeries.push(colorSeries[i])\n      }\n    }\n  }\n\n  updateThemeOptions(options) {\n    options.chart = options.chart || {}\n    options.tooltip = options.tooltip || {}\n    const mode = options.theme.mode || 'light'\n    const palette = options.theme.palette\n      ? options.theme.palette\n      : mode === 'dark'\n      ? 'palette4'\n      : 'palette1'\n    const foreColor = options.chart.foreColor\n      ? options.chart.foreColor\n      : mode === 'dark'\n      ? '#f6f7f8'\n      : '#373d3f'\n\n    options.tooltip.theme = mode\n    options.chart.foreColor = foreColor\n    options.theme.palette = palette\n\n    return options\n  }\n\n  predefined() {\n    let palette = this.w.config.theme.palette\n\n    // D6E3F8, FCEFEF, DCE0D9, A5978B, EDDDD4, D6E3F8, FEF5EF\n    switch (palette) {\n      case 'palette1':\n        this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0']\n        break\n      case 'palette2':\n        this.colors = ['#3f51b5', '#03a9f4', '#4caf50', '#f9ce1d', '#FF9800']\n        break\n      case 'palette3':\n        this.colors = ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B']\n        break\n      case 'palette4':\n        this.colors = ['#4ecdc4', '#c7f464', '#81D4FA', '#fd6a6a', '#546E7A']\n        break\n      case 'palette5':\n        this.colors = ['#2b908f', '#f9a3a4', '#90ee7e', '#fa4443', '#69d2e7']\n        break\n      case 'palette6':\n        this.colors = ['#449DD1', '#F86624', '#EA3546', '#662E9B', '#C5D86D']\n        break\n      case 'palette7':\n        this.colors = ['#D7263D', '#1B998B', '#2E294E', '#F46036', '#E2C044']\n        break\n      case 'palette8':\n        this.colors = ['#662E9B', '#F86624', '#F9C80E', '#EA3546', '#43BCCD']\n        break\n      case 'palette9':\n        this.colors = ['#5C4742', '#A5978B', '#8D5B4C', '#5A2A27', '#C4BBAF']\n        break\n      case 'palette10':\n        this.colors = ['#A300D6', '#7D02EB', '#5653FE', '#2983FF', '#00B1F2']\n        break\n      default:\n        this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0']\n        break\n    }\n    return this.colors\n  }\n}\n","import Graphics from './Graphics'\n\nexport default class TitleSubtitle {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  draw() {\n    this.drawTitleSubtitle('title')\n    this.drawTitleSubtitle('subtitle')\n  }\n\n  drawTitleSubtitle(type) {\n    let w = this.w\n    const tsConfig = type === 'title' ? w.config.title : w.config.subtitle\n\n    let x = w.globals.svgWidth / 2\n    let y = tsConfig.offsetY\n    let textAnchor = 'middle'\n\n    if (tsConfig.align === 'left') {\n      x = 10\n      textAnchor = 'start'\n    } else if (tsConfig.align === 'right') {\n      x = w.globals.svgWidth - 10\n      textAnchor = 'end'\n    }\n\n    x = x + tsConfig.offsetX\n    y = y + parseInt(tsConfig.style.fontSize, 10) + tsConfig.margin / 2\n\n    if (tsConfig.text !== undefined) {\n      let graphics = new Graphics(this.ctx)\n      let titleText = graphics.drawText({\n        x,\n        y,\n        text: tsConfig.text,\n        textAnchor,\n        fontSize: tsConfig.style.fontSize,\n        fontFamily: tsConfig.style.fontFamily,\n        fontWeight: tsConfig.style.fontWeight,\n        foreColor: tsConfig.style.color,\n        opacity: 1\n      })\n\n      titleText.node.setAttribute('class', `apexcharts-${type}-text`)\n\n      w.globals.dom.Paper.add(titleText)\n    }\n  }\n}\n","import Utils from '../../utils/Utils'\n\nexport default class Helpers {\n  constructor(dCtx) {\n    this.w = dCtx.w\n    this.dCtx = dCtx\n  }\n\n  /**\n   * Get Chart Title/Subtitle Dimensions\n   * @memberof Dimensions\n   * @return {{width, height}}\n   **/\n  getTitleSubtitleCoords(type) {\n    let w = this.w\n    let width = 0\n    let height = 0\n\n    const floating =\n      type === 'title' ? w.config.title.floating : w.config.subtitle.floating\n\n    let el = w.globals.dom.baseEl.querySelector(`.apexcharts-${type}-text`)\n\n    if (el !== null && !floating) {\n      let coord = el.getBoundingClientRect()\n      width = coord.width\n      height = w.globals.axisCharts ? coord.height + 5 : coord.height\n    }\n\n    return {\n      width,\n      height\n    }\n  }\n\n  getLegendsRect() {\n    let w = this.w\n\n    let elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend')\n\n    if (\n      !w.config.legend.height &&\n      (w.config.legend.position === 'top' ||\n        w.config.legend.position === 'bottom')\n    ) {\n      // avoid legend to take up all the space\n      elLegendWrap.style.maxHeight = w.globals.svgHeight / 2 + 'px'\n    }\n\n    let lgRect = Object.assign({}, Utils.getBoundingClientRect(elLegendWrap))\n\n    if (\n      elLegendWrap !== null &&\n      !w.config.legend.floating &&\n      w.config.legend.show\n    ) {\n      this.dCtx.lgRect = {\n        x: lgRect.x,\n        y: lgRect.y,\n        height: lgRect.height,\n        width: lgRect.height === 0 ? 0 : lgRect.width\n      }\n    } else {\n      this.dCtx.lgRect = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0\n      }\n    }\n\n    // if legend takes up all of the chart space, we need to restrict it.\n    if (\n      w.config.legend.position === 'left' ||\n      w.config.legend.position === 'right'\n    ) {\n      if (this.dCtx.lgRect.width * 1.5 > w.globals.svgWidth) {\n        this.dCtx.lgRect.width = w.globals.svgWidth / 1.5\n      }\n    }\n\n    return this.dCtx.lgRect\n  }\n\n  getLargestStringFromMultiArr(val, arr) {\n    const w = this.w\n    let valArr = val\n    if (w.globals.isMultiLineX) {\n      // if the xaxis labels has multiline texts (array)\n      let maxArrs = arr.map((xl, idx) => {\n        return Array.isArray(xl) ? xl.length : 1\n      })\n      let maxArrLen = Math.max(...maxArrs)\n      let maxArrIndex = maxArrs.indexOf(maxArrLen)\n      valArr = arr[maxArrIndex]\n    }\n\n    return valArr\n  }\n}\n","import Formatters from '../Formatters'\nimport Graphics from '../Graphics'\nimport Utils from '../../utils/Utils'\nimport DateTime from '../../utils/DateTime'\n\nexport default class DimXAxis {\n  constructor(dCtx) {\n    this.w = dCtx.w\n    this.dCtx = dCtx\n  }\n\n  /**\n   * Get X Axis Dimensions\n   * @memberof Dimensions\n   * @return {{width, height}}\n   **/\n  getxAxisLabelsCoords() {\n    let w = this.w\n\n    let xaxisLabels = w.globals.labels.slice()\n    if (w.config.xaxis.convertedCatToNumeric && xaxisLabels.length === 0) {\n      xaxisLabels = w.globals.categoryLabels\n    }\n\n    let rect\n\n    if (w.globals.timescaleLabels.length > 0) {\n      const coords = this.getxAxisTimeScaleLabelsCoords()\n      rect = {\n        width: coords.width,\n        height: coords.height\n      }\n      w.globals.rotateXLabels = false\n    } else {\n      this.dCtx.lgWidthForSideLegends =\n        (w.config.legend.position === 'left' ||\n          w.config.legend.position === 'right') &&\n        !w.config.legend.floating\n          ? this.dCtx.lgRect.width\n          : 0\n\n      // get the longest string from the labels array and also apply label formatter\n      let xlbFormatter = w.globals.xLabelFormatter\n      // prevent changing xaxisLabels to avoid issues in multi-yaxes - fix #522\n      let val = Utils.getLargestStringFromArr(xaxisLabels)\n      let valArr = this.dCtx.dimHelpers.getLargestStringFromMultiArr(\n        val,\n        xaxisLabels\n      )\n\n      // the labels gets changed for bar charts\n      if (w.globals.isBarHorizontal) {\n        val = w.globals.yAxisScale[0].result.reduce(\n          (a, b) => (a.length > b.length ? a : b),\n          0\n        )\n        valArr = val\n      }\n\n      let xFormat = new Formatters(this.dCtx.ctx)\n      let timestamp = val\n      val = xFormat.xLabelFormat(xlbFormatter, val, timestamp, {\n        i: undefined,\n        dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n        w\n      })\n      valArr = xFormat.xLabelFormat(xlbFormatter, valArr, timestamp, {\n        i: undefined,\n        dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n        w\n      })\n\n      if (\n        (w.config.xaxis.convertedCatToNumeric && typeof val === 'undefined') ||\n        String(val).trim() === ''\n      ) {\n        val = '1'\n        valArr = val\n      }\n\n      let graphics = new Graphics(this.dCtx.ctx)\n      let xLabelrect = graphics.getTextRects(\n        val,\n        w.config.xaxis.labels.style.fontSize\n      )\n      let xArrLabelrect = xLabelrect\n      if (val !== valArr) {\n        xArrLabelrect = graphics.getTextRects(\n          valArr,\n          w.config.xaxis.labels.style.fontSize\n        )\n      }\n\n      rect = {\n        width:\n          xLabelrect.width >= xArrLabelrect.width\n            ? xLabelrect.width\n            : xArrLabelrect.width,\n        height:\n          xLabelrect.height >= xArrLabelrect.height\n            ? xLabelrect.height\n            : xArrLabelrect.height\n      }\n\n      if (\n        (rect.width * xaxisLabels.length >\n          w.globals.svgWidth -\n            this.dCtx.lgWidthForSideLegends -\n            this.dCtx.yAxisWidth -\n            this.dCtx.gridPad.left -\n            this.dCtx.gridPad.right &&\n          w.config.xaxis.labels.rotate !== 0) ||\n        w.config.xaxis.labels.rotateAlways\n      ) {\n        if (!w.globals.isBarHorizontal) {\n          w.globals.rotateXLabels = true\n          const getRotatedTextRects = (text) => {\n            return graphics.getTextRects(\n              text,\n              w.config.xaxis.labels.style.fontSize,\n              w.config.xaxis.labels.style.fontFamily,\n              `rotate(${w.config.xaxis.labels.rotate} 0 0)`,\n              false\n            )\n          }\n          xLabelrect = getRotatedTextRects(val)\n          if (val !== valArr) {\n            xArrLabelrect = getRotatedTextRects(valArr)\n          }\n\n          rect.height =\n            (xLabelrect.height > xArrLabelrect.height\n              ? xLabelrect.height\n              : xArrLabelrect.height) / 1.5\n          rect.width =\n            xLabelrect.width > xArrLabelrect.width\n              ? xLabelrect.width\n              : xArrLabelrect.width\n        }\n      } else {\n        w.globals.rotateXLabels = false\n      }\n    }\n\n    if (!w.config.xaxis.labels.show) {\n      rect = {\n        width: 0,\n        height: 0\n      }\n    }\n\n    return {\n      width: rect.width,\n      height: rect.height\n    }\n  }\n\n  /**\n   * Get X Axis Title Dimensions\n   * @memberof Dimensions\n   * @return {{width, height}}\n   **/\n  getxAxisTitleCoords() {\n    let w = this.w\n    let width = 0\n    let height = 0\n\n    if (w.config.xaxis.title.text !== undefined) {\n      let graphics = new Graphics(this.dCtx.ctx)\n\n      let rect = graphics.getTextRects(\n        w.config.xaxis.title.text,\n        w.config.xaxis.title.style.fontSize\n      )\n\n      width = rect.width\n      height = rect.height\n    }\n\n    return {\n      width,\n      height\n    }\n  }\n\n  getxAxisTimeScaleLabelsCoords() {\n    let w = this.w\n    let rect\n\n    this.dCtx.timescaleLabels = w.globals.timescaleLabels.slice()\n\n    let labels = this.dCtx.timescaleLabels.map((label) => label.value)\n\n    //  get the longest string from the labels array and also apply label formatter to it\n    let val = labels.reduce((a, b) => {\n      // if undefined, maybe user didn't pass the datetime(x) values\n      if (typeof a === 'undefined') {\n        console.error(\n          'You have possibly supplied invalid Date format. Please supply a valid JavaScript Date'\n        )\n        return 0\n      } else {\n        return a.length > b.length ? a : b\n      }\n    }, 0)\n\n    let graphics = new Graphics(this.dCtx.ctx)\n    rect = graphics.getTextRects(val, w.config.xaxis.labels.style.fontSize)\n\n    let totalWidthRotated = rect.width * 1.05 * labels.length\n\n    if (\n      totalWidthRotated > w.globals.gridWidth &&\n      w.config.xaxis.labels.rotate !== 0\n    ) {\n      w.globals.overlappingXLabels = true\n    }\n\n    return rect\n  }\n\n  // In certain cases, the last labels gets cropped in xaxis.\n  // Hence, we add some additional padding based on the label length to avoid the last label being cropped or we don't draw it at all\n  additionalPaddingXLabels(xaxisLabelCoords) {\n    const w = this.w\n    const gl = w.globals\n    const cnf = w.config\n    const xtype = cnf.xaxis.type\n\n    let lbWidth = xaxisLabelCoords.width\n\n    gl.skipLastTimelinelabel = false\n    gl.skipFirstTimelinelabel = false\n    const isBarOpposite =\n      w.config.yaxis[0].opposite && w.globals.isBarHorizontal\n\n    const isCollapsed = (i) => gl.collapsedSeriesIndices.indexOf(i) !== -1\n\n    const rightPad = (yaxe) => {\n      if (this.dCtx.timescaleLabels && this.dCtx.timescaleLabels.length) {\n        // for timeline labels, we take the last label and check if it exceeds gridWidth\n        const firstimescaleLabel = this.dCtx.timescaleLabels[0]\n        const lastTimescaleLabel = this.dCtx.timescaleLabels[\n          this.dCtx.timescaleLabels.length - 1\n        ]\n\n        const lastLabelPosition =\n          lastTimescaleLabel.position +\n          lbWidth / 1.75 -\n          this.dCtx.yAxisWidthRight\n\n        const firstLabelPosition =\n          firstimescaleLabel.position -\n          lbWidth / 1.75 +\n          this.dCtx.yAxisWidthLeft\n\n        let lgRightRectWidth =\n          w.config.legend.position === 'right' && this.dCtx.lgRect.width > 0\n            ? this.dCtx.lgRect.width\n            : 0\n        if (\n          lastLabelPosition >\n          gl.svgWidth - gl.translateX - lgRightRectWidth\n        ) {\n          gl.skipLastTimelinelabel = true\n        }\n\n        if (\n          firstLabelPosition <\n          -((!yaxe.show || yaxe.floating) &&\n          (cnf.chart.type === 'bar' ||\n            cnf.chart.type === 'candlestick' ||\n            cnf.chart.type === 'rangeBar' ||\n            cnf.chart.type === 'gantt' ||\n            cnf.chart.type === 'boxPlot')\n            ? lbWidth / 1.75\n            : 10)\n        ) {\n          gl.skipFirstTimelinelabel = true\n        }\n      } else if (xtype === 'datetime') {\n        // If user has enabled DateTime, but uses own's formatter\n        if (this.dCtx.gridPad.right < lbWidth && !gl.rotateXLabels) {\n          gl.skipLastTimelinelabel = true\n        }\n      } else if (xtype !== 'datetime') {\n        if (\n          this.dCtx.gridPad.right < lbWidth / 2 - this.dCtx.yAxisWidthRight &&\n          !gl.rotateXLabels &&\n          !w.config.xaxis.labels.trim &&\n          (w.config.xaxis.tickPlacement !== 'between' ||\n            w.globals.isBarHorizontal)\n        ) {\n          this.dCtx.xPadRight = lbWidth / 2 + 1\n        }\n      }\n    }\n\n    const padYAxe = (yaxe, i) => {\n      if (isCollapsed(i)) return\n\n      // the code below causes issue apexcharts.js#1989\n      // after testing with other use-cases, this has no actual value, hence commented\n      // if (xtype !== 'datetime') {\n      //   if (\n      //     this.dCtx.gridPad.left < lbWidth / 2 - this.dCtx.yAxisWidthLeft &&\n      //     !gl.rotateXLabels &&\n      //     !cnf.xaxis.labels.trim\n      //   ) {\n      //     this.dCtx.xPadLeft = lbWidth / 2 + 1\n      //   }\n      // }\n\n      rightPad(yaxe)\n    }\n\n    cnf.yaxis.forEach((yaxe, i) => {\n      if (isBarOpposite) {\n        if (this.dCtx.gridPad.left < lbWidth) {\n          this.dCtx.xPadLeft = lbWidth / 2 + 1\n        }\n        this.dCtx.xPadRight = lbWidth / 2 + 1\n      } else {\n        padYAxe(yaxe, i)\n      }\n    })\n  }\n}\n","import Graphics from '../Graphics'\nimport Utils from '../../utils/Utils'\nimport AxesUtils from '../axes/AxesUtils'\n\nexport default class DimYAxis {\n  constructor(dCtx) {\n    this.w = dCtx.w\n    this.dCtx = dCtx\n  }\n\n  /**\n   * Get Y Axis Dimensions\n   * @memberof Dimensions\n   * @return {{width, height}}\n   **/\n  getyAxisLabelsCoords() {\n    let w = this.w\n\n    let width = 0\n    let height = 0\n    let ret = []\n    let labelPad = 10\n    const axesUtils = new AxesUtils(this.dCtx.ctx)\n\n    w.config.yaxis.map((yaxe, index) => {\n      const yS = w.globals.yAxisScale[index]\n      let yAxisMinWidth = 0\n      if (\n        !axesUtils.isYAxisHidden(index) &&\n        yaxe.labels.show &&\n        yaxe.labels.minWidth !== undefined\n      )\n        yAxisMinWidth = yaxe.labels.minWidth\n\n      if (\n        !axesUtils.isYAxisHidden(index) &&\n        yaxe.labels.show &&\n        yS.result.length\n      ) {\n        let lbFormatter = w.globals.yLabelFormatters[index]\n        let minV = yS.niceMin === Number.MIN_VALUE ? 0 : yS.niceMin\n        const longestStr =\n          String(minV).length > String(yS.niceMax).length ? minV : yS.niceMax\n\n        // the second parameter -1 is the index of tick which user can use in the formatter\n        let val = lbFormatter(longestStr, {\n          seriesIndex: index,\n          dataPointIndex: -1,\n          w\n        })\n        let valArr = val\n\n        // if user has specified a custom formatter, and the result is null or empty, we need to discard the formatter and take the value as it is.\n        if (typeof val === 'undefined' || val.length === 0) {\n          val = longestStr\n        }\n\n        if (w.globals.isBarHorizontal) {\n          labelPad = 0\n\n          let barYaxisLabels = w.globals.labels.slice()\n\n          //  get the longest string from the labels array and also apply label formatter to it\n          val = Utils.getLargestStringFromArr(barYaxisLabels)\n\n          val = lbFormatter(val, { seriesIndex: index, dataPointIndex: -1, w })\n          valArr = this.dCtx.dimHelpers.getLargestStringFromMultiArr(\n            val,\n            barYaxisLabels\n          )\n        }\n\n        let graphics = new Graphics(this.dCtx.ctx)\n\n        let rotateStr = 'rotate('.concat(yaxe.labels.rotate, ' 0 0)')\n        let rect = graphics.getTextRects(\n          val,\n          yaxe.labels.style.fontSize,\n          yaxe.labels.style.fontFamily,\n          rotateStr,\n          false\n        )\n\n        let arrLabelrect = rect\n\n        if (val !== valArr) {\n          arrLabelrect = graphics.getTextRects(\n            valArr,\n            yaxe.labels.style.fontSize,\n            yaxe.labels.style.fontFamily,\n            rotateStr,\n            false\n          )\n        }\n\n        ret.push({\n          width:\n            (yAxisMinWidth > arrLabelrect.width || yAxisMinWidth > rect.width\n              ? yAxisMinWidth\n              : arrLabelrect.width > rect.width\n              ? arrLabelrect.width\n              : rect.width) + labelPad,\n          height:\n            arrLabelrect.height > rect.height\n              ? arrLabelrect.height\n              : rect.height\n        })\n      } else {\n        ret.push({\n          width,\n          height\n        })\n      }\n    })\n\n    return ret\n  }\n\n  /**\n   * Get Y Axis Dimensions\n   * @memberof Dimensions\n   * @return {{width, height}}\n   **/\n  getyAxisTitleCoords() {\n    let w = this.w\n    let ret = []\n\n    w.config.yaxis.map((yaxe, index) => {\n      if (yaxe.show && yaxe.title.text !== undefined) {\n        let graphics = new Graphics(this.dCtx.ctx)\n        let rotateStr = 'rotate('.concat(yaxe.title.rotate, ' 0 0)')\n        let rect = graphics.getTextRects(\n          yaxe.title.text,\n          yaxe.title.style.fontSize,\n          yaxe.title.style.fontFamily,\n          rotateStr,\n          false\n        )\n\n        ret.push({\n          width: rect.width,\n          height: rect.height\n        })\n      } else {\n        ret.push({\n          width: 0,\n          height: 0\n        })\n      }\n    })\n\n    return ret\n  }\n\n  getTotalYAxisWidth() {\n    let w = this.w\n    let yAxisWidth = 0\n    let yAxisWidthLeft = 0\n    let yAxisWidthRight = 0\n    let padding = w.globals.yAxisScale.length > 1 ? 10 : 0\n    const axesUtils = new AxesUtils(this.dCtx.ctx)\n\n    const isHiddenYAxis = function(index) {\n      return w.globals.ignoreYAxisIndexes.indexOf(index) > -1\n    }\n\n    const padForLabelTitle = (coord, index) => {\n      let floating = w.config.yaxis[index].floating\n      let width = 0\n\n      if (coord.width > 0 && !floating) {\n        width = coord.width + padding\n        if (isHiddenYAxis(index)) {\n          width = width - coord.width - padding\n        }\n      } else {\n        width = floating || axesUtils.isYAxisHidden(index) ? 0 : 5\n      }\n\n      w.config.yaxis[index].opposite\n        ? (yAxisWidthRight = yAxisWidthRight + width)\n        : (yAxisWidthLeft = yAxisWidthLeft + width)\n\n      yAxisWidth = yAxisWidth + width\n    }\n\n    w.globals.yLabelsCoords.map((yLabelCoord, index) => {\n      padForLabelTitle(yLabelCoord, index)\n    })\n\n    w.globals.yTitleCoords.map((yTitleCoord, index) => {\n      padForLabelTitle(yTitleCoord, index)\n    })\n\n    if (w.globals.isBarHorizontal && !w.config.yaxis[0].floating) {\n      yAxisWidth =\n        w.globals.yLabelsCoords[0].width + w.globals.yTitleCoords[0].width + 15\n    }\n\n    this.dCtx.yAxisWidthLeft = yAxisWidthLeft\n    this.dCtx.yAxisWidthRight = yAxisWidthRight\n\n    return yAxisWidth\n  }\n}\n","import AxesUtils from '../axes/AxesUtils'\n\nexport default class DimGrid {\n  constructor(dCtx) {\n    this.w = dCtx.w\n    this.dCtx = dCtx\n  }\n\n  gridPadForColumnsInNumericAxis(gridWidth) {\n    const w = this.w\n\n    if (w.globals.noData || w.globals.allSeriesCollapsed) {\n      return 0\n    }\n\n    const hasBar = (type) => {\n      return (\n        type === 'bar' ||\n        type === 'rangeBar' ||\n        type === 'candlestick' ||\n        type === 'boxPlot' ||\n        type === 'gantt'\n      )\n    }\n\n    const type = w.config.chart.type\n\n    let barWidth = 0\n    let seriesLen = hasBar(type) ? w.config.series.length : 1\n\n    if (w.globals.comboBarCount > 0) {\n      seriesLen = w.globals.comboBarCount\n    }\n    w.globals.collapsedSeries.forEach((c) => {\n      if (hasBar(c.type)) {\n        seriesLen = seriesLen - 1\n      }\n    })\n    if (w.config.chart.stacked) {\n      seriesLen = 1\n    }\n\n    const barsPresent = hasBar(type) || w.globals.comboBarCount > 0\n\n    if (\n      barsPresent &&\n      w.globals.isXNumeric &&\n      !w.globals.isBarHorizontal &&\n      seriesLen > 0\n    ) {\n      let xRatio = 0\n      let xRange = Math.abs(w.globals.initialMaxX - w.globals.initialMinX)\n\n      if (xRange <= 3) {\n        xRange = w.globals.dataPoints\n      }\n\n      xRatio = xRange / gridWidth\n\n      let xDivision\n      // max barwidth should be equal to minXDiff to avoid overlap\n      if (w.globals.minXDiff && w.globals.minXDiff / xRatio > 0) {\n        xDivision = w.globals.minXDiff / xRatio\n      }\n\n      if (xDivision > gridWidth / 2) {\n        xDivision = xDivision / 2\n      }\n\n      barWidth =\n        ((xDivision / seriesLen) *\n          parseInt(w.config.plotOptions.bar.columnWidth, 10)) /\n        100\n\n      if (barWidth < 1) {\n        barWidth = 1\n      }\n\n      barWidth = barWidth / (seriesLen > 1 ? 1 : 1.5) + 5\n\n      w.globals.barPadForNumericAxis = barWidth\n    }\n    return barWidth\n  }\n\n  gridPadFortitleSubtitle() {\n    const w = this.w\n    const gl = w.globals\n    let gridShrinkOffset =\n      this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 10\n\n    const titleSubtitle = ['title', 'subtitle']\n\n    titleSubtitle.forEach((t) => {\n      if (w.config[t].text !== undefined) {\n        gridShrinkOffset += w.config[t].margin\n      } else {\n        gridShrinkOffset +=\n          this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 5\n      }\n    })\n\n    if (\n      w.config.legend.show &&\n      w.config.legend.position === 'bottom' &&\n      !w.config.legend.floating &&\n      !w.globals.axisCharts\n    ) {\n      gridShrinkOffset += 10\n    }\n\n    let titleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('title')\n    let subtitleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('subtitle')\n\n    gl.gridHeight =\n      gl.gridHeight -\n      titleCoords.height -\n      subtitleCoords.height -\n      gridShrinkOffset\n\n    gl.translateY =\n      gl.translateY +\n      titleCoords.height +\n      subtitleCoords.height +\n      gridShrinkOffset\n  }\n\n  setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords) {\n    let w = this.w\n    const axesUtils = new AxesUtils(this.dCtx.ctx)\n\n    w.config.yaxis.map((yaxe, index) => {\n      if (\n        w.globals.ignoreYAxisIndexes.indexOf(index) === -1 &&\n        !yaxe.floating &&\n        !axesUtils.isYAxisHidden(index)\n      ) {\n        if (yaxe.opposite) {\n          w.globals.translateX =\n            w.globals.translateX -\n            (yaxisLabelCoords[index].width + yTitleCoords[index].width) -\n            parseInt(w.config.yaxis[index].labels.style.fontSize, 10) / 1.2 -\n            12\n        }\n\n        // fixes apexcharts.js#1599\n        if (w.globals.translateX < 2) {\n          w.globals.translateX = 2\n        }\n      }\n    })\n  }\n}\n","import YAxis from '../axes/YAxis'\nimport Helpers from './Helpers'\nimport DimXAxis from './XAxis'\nimport DimYAxis from './YAxis'\nimport Grid from './Grid'\n\n/**\n * ApexCharts Dimensions Class for calculating rects of all elements that are drawn and will be drawn.\n *\n * @module Dimensions\n **/\n\nexport default class Dimensions {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    this.lgRect = {}\n    this.yAxisWidth = 0\n    this.yAxisWidthLeft = 0\n    this.yAxisWidthRight = 0\n    this.xAxisHeight = 0\n    this.isSparkline = this.w.config.chart.sparkline.enabled\n\n    this.dimHelpers = new Helpers(this)\n    this.dimYAxis = new DimYAxis(this)\n    this.dimXAxis = new DimXAxis(this)\n    this.dimGrid = new Grid(this)\n    this.lgWidthForSideLegends = 0\n    this.gridPad = this.w.config.grid.padding\n    this.xPadRight = 0\n    this.xPadLeft = 0\n  }\n\n  /**\n   * @memberof Dimensions\n   * @param {object} w - chart context\n   **/\n  plotCoords() {\n    let w = this.w\n    let gl = w.globals\n\n    this.lgRect = this.dimHelpers.getLegendsRect()\n\n    if (gl.axisCharts) {\n      // for line / area / scatter / column\n      this.setDimensionsForAxisCharts()\n    } else {\n      // for pie / donuts / circle\n      this.setDimensionsForNonAxisCharts()\n    }\n\n    this.dimGrid.gridPadFortitleSubtitle()\n\n    // after calculating everything, apply padding set by user\n    gl.gridHeight = gl.gridHeight - this.gridPad.top - this.gridPad.bottom\n\n    gl.gridWidth =\n      gl.gridWidth -\n      this.gridPad.left -\n      this.gridPad.right -\n      this.xPadRight -\n      this.xPadLeft\n\n    let barWidth = this.dimGrid.gridPadForColumnsInNumericAxis(gl.gridWidth)\n\n    gl.gridWidth = gl.gridWidth - barWidth * 2\n\n    gl.translateX =\n      gl.translateX +\n      this.gridPad.left +\n      this.xPadLeft +\n      (barWidth > 0 ? barWidth + 4 : 0)\n    gl.translateY = gl.translateY + this.gridPad.top\n  }\n\n  setDimensionsForAxisCharts() {\n    let w = this.w\n    let gl = w.globals\n\n    let yaxisLabelCoords = this.dimYAxis.getyAxisLabelsCoords()\n    let yTitleCoords = this.dimYAxis.getyAxisTitleCoords()\n\n    w.globals.yLabelsCoords = []\n    w.globals.yTitleCoords = []\n    w.config.yaxis.map((yaxe, index) => {\n      // store the labels and titles coords in global vars\n      w.globals.yLabelsCoords.push({\n        width: yaxisLabelCoords[index].width,\n        index\n      })\n      w.globals.yTitleCoords.push({\n        width: yTitleCoords[index].width,\n        index\n      })\n    })\n\n    this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth()\n\n    let xaxisLabelCoords = this.dimXAxis.getxAxisLabelsCoords()\n    let xtitleCoords = this.dimXAxis.getxAxisTitleCoords()\n\n    this.conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords)\n\n    gl.translateXAxisY = w.globals.rotateXLabels ? this.xAxisHeight / 8 : -4\n    gl.translateXAxisX =\n      w.globals.rotateXLabels &&\n      w.globals.isXNumeric &&\n      w.config.xaxis.labels.rotate <= -45\n        ? -this.xAxisWidth / 4\n        : 0\n\n    if (w.globals.isBarHorizontal) {\n      gl.rotateXLabels = false\n      gl.translateXAxisY =\n        -1 * (parseInt(w.config.xaxis.labels.style.fontSize, 10) / 1.5)\n    }\n\n    gl.translateXAxisY = gl.translateXAxisY + w.config.xaxis.labels.offsetY\n    gl.translateXAxisX = gl.translateXAxisX + w.config.xaxis.labels.offsetX\n\n    let yAxisWidth = this.yAxisWidth\n    let xAxisHeight = this.xAxisHeight\n    gl.xAxisLabelsHeight = this.xAxisHeight - xtitleCoords.height\n    gl.xAxisLabelsWidth = this.xAxisWidth\n    gl.xAxisHeight = this.xAxisHeight\n    let translateY = 10\n\n    if (w.config.chart.type === 'radar' || this.isSparkline) {\n      yAxisWidth = 0\n      xAxisHeight = gl.goldenPadding\n    }\n\n    if (this.isSparkline) {\n      this.lgRect = {\n        height: 0,\n        width: 0\n      }\n    }\n\n    if (this.isSparkline || w.config.chart.type === 'treemap') {\n      yAxisWidth = 0\n      xAxisHeight = 0\n      translateY = 0\n    }\n\n    if (!this.isSparkline) {\n      this.dimXAxis.additionalPaddingXLabels(xaxisLabelCoords)\n    }\n\n    const legendTopBottom = () => {\n      gl.translateX = yAxisWidth\n      gl.gridHeight =\n        gl.svgHeight -\n        this.lgRect.height -\n        xAxisHeight -\n        (!this.isSparkline && w.config.chart.type !== 'treemap'\n          ? w.globals.rotateXLabels\n            ? 10\n            : 15\n          : 0)\n      gl.gridWidth = gl.svgWidth - yAxisWidth\n    }\n\n    if (w.config.xaxis.position === 'top')\n      translateY = gl.xAxisHeight - w.config.xaxis.axisTicks.height - 5\n\n    switch (w.config.legend.position) {\n      case 'bottom':\n        gl.translateY = translateY\n        legendTopBottom()\n        break\n      case 'top':\n        gl.translateY = this.lgRect.height + translateY\n        legendTopBottom()\n        break\n      case 'left':\n        gl.translateY = translateY\n        gl.translateX = this.lgRect.width + yAxisWidth\n        gl.gridHeight = gl.svgHeight - xAxisHeight - 12\n        gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth\n        break\n      case 'right':\n        gl.translateY = translateY\n        gl.translateX = yAxisWidth\n        gl.gridHeight = gl.svgHeight - xAxisHeight - 12\n        gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth - 5\n        break\n      default:\n        throw new Error('Legend position not supported')\n    }\n\n    this.dimGrid.setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords)\n\n    // after drawing everything, set the Y axis positions\n    let objyAxis = new YAxis(this.ctx)\n    objyAxis.setYAxisXPosition(yaxisLabelCoords, yTitleCoords)\n  }\n\n  setDimensionsForNonAxisCharts() {\n    let w = this.w\n    let gl = w.globals\n    let cnf = w.config\n    let xPad = 0\n\n    if (w.config.legend.show && !w.config.legend.floating) {\n      xPad = 20\n    }\n\n    const type =\n      cnf.chart.type === 'pie' ||\n      cnf.chart.type === 'polarArea' ||\n      cnf.chart.type === 'donut'\n        ? 'pie'\n        : 'radialBar'\n\n    let offY = cnf.plotOptions[type].offsetY\n    let offX = cnf.plotOptions[type].offsetX\n\n    if (!cnf.legend.show || cnf.legend.floating) {\n      gl.gridHeight =\n        gl.svgHeight - cnf.grid.padding.left + cnf.grid.padding.right\n      gl.gridWidth = gl.gridHeight\n\n      gl.translateY = offY\n      gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2\n\n      return\n    }\n\n    switch (cnf.legend.position) {\n      case 'bottom':\n        gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding\n        gl.gridWidth = gl.svgWidth\n        gl.translateY = offY - 10\n        gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2\n        break\n      case 'top':\n        gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding\n        gl.gridWidth = gl.svgWidth\n        gl.translateY = this.lgRect.height + offY + 10\n        gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2\n        break\n      case 'left':\n        gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad\n        gl.gridHeight =\n          cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth\n        gl.translateY = offY\n        gl.translateX = offX + this.lgRect.width + xPad\n        break\n      case 'right':\n        gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad - 5\n        gl.gridHeight =\n          cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth\n        gl.translateY = offY\n        gl.translateX = offX + 10\n        break\n      default:\n        throw new Error('Legend position not supported')\n    }\n  }\n\n  conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords) {\n    const w = this.w\n    this.xAxisHeight =\n      (xaxisLabelCoords.height + xtitleCoords.height) *\n        (w.globals.isMultiLineX ? 1.2 : w.globals.LINE_HEIGHT_RATIO) +\n      (w.globals.rotateXLabels ? 22 : 10)\n\n    this.xAxisWidth = xaxisLabelCoords.width\n\n    if (\n      this.xAxisHeight - xtitleCoords.height >\n      w.config.xaxis.labels.maxHeight\n    ) {\n      this.xAxisHeight = w.config.xaxis.labels.maxHeight\n    }\n\n    if (\n      w.config.xaxis.labels.minHeight &&\n      this.xAxisHeight < w.config.xaxis.labels.minHeight\n    ) {\n      this.xAxisHeight = w.config.xaxis.labels.minHeight\n    }\n\n    if (w.config.xaxis.floating) {\n      this.xAxisHeight = 0\n    }\n\n    let minYAxisWidth = 0\n    let maxYAxisWidth = 0\n    w.config.yaxis.forEach((y) => {\n      minYAxisWidth += y.labels.minWidth\n      maxYAxisWidth += y.labels.maxWidth\n    })\n    if (this.yAxisWidth < minYAxisWidth) {\n      this.yAxisWidth = minYAxisWidth\n    }\n    if (this.yAxisWidth > maxYAxisWidth) {\n      this.yAxisWidth = maxYAxisWidth\n    }\n  }\n}\n","import Graphics from '../Graphics'\nimport Utils from '../../utils/Utils'\n\nexport default class Helpers {\n  constructor(lgCtx) {\n    this.w = lgCtx.w\n    this.lgCtx = lgCtx\n  }\n\n  getLegendStyles() {\n    let stylesheet = document.createElement('style')\n    stylesheet.setAttribute('type', 'text/css')\n\n    const text = `\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.position-bottom, .apexcharts-legend.position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.position-right, .apexcharts-legend.position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-left, .apexcharts-legend.position-top.apexcharts-align-left, .apexcharts-legend.position-right, .apexcharts-legend.position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-center, .apexcharts-legend.position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-right, .apexcharts-legend.position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.position-bottom .apexcharts-legend-series, .apexcharts-legend.position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }`\n\n    let rules = document.createTextNode(text)\n\n    stylesheet.appendChild(rules)\n\n    return stylesheet\n  }\n\n  getLegendBBox() {\n    const w = this.w\n    let currLegendsWrap = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-legend'\n    )\n    let currLegendsWrapRect = currLegendsWrap.getBoundingClientRect()\n\n    let currLegendsWrapWidth = currLegendsWrapRect.width\n    let currLegendsWrapHeight = currLegendsWrapRect.height\n\n    return {\n      clwh: currLegendsWrapHeight,\n      clww: currLegendsWrapWidth\n    }\n  }\n\n  appendToForeignObject() {\n    const gl = this.w.globals\n\n    gl.dom.elLegendForeign = document.createElementNS(gl.SVGNS, 'foreignObject')\n\n    let elForeign = gl.dom.elLegendForeign\n\n    elForeign.setAttribute('x', 0)\n    elForeign.setAttribute('y', 0)\n    elForeign.setAttribute('width', gl.svgWidth)\n    elForeign.setAttribute('height', gl.svgHeight)\n    gl.dom.elLegendWrap.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml')\n\n    elForeign.appendChild(gl.dom.elLegendWrap)\n    elForeign.appendChild(this.getLegendStyles())\n\n    //gl.dom.elGraphical.node.insertAdjacentElement('afterend', elForeign)\n    // the above line causes issue #1907\n    gl.dom.Paper.node.insertBefore(elForeign, gl.dom.elGraphical.node)\n  }\n\n  toggleDataSeries(seriesCnt, isHidden) {\n    const w = this.w\n    if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n      w.globals.resized = true // we don't want initial animations again\n\n      let seriesEl = null\n\n      let realIndex = null\n\n      // yes, make it null. 1 series will rise at a time\n      w.globals.risingSeries = []\n\n      if (w.globals.axisCharts) {\n        seriesEl = w.globals.dom.baseEl.querySelector(\n          `.apexcharts-series[data\\\\:realIndex='${seriesCnt}']`\n        )\n        realIndex = parseInt(seriesEl.getAttribute('data:realIndex'), 10)\n      } else {\n        seriesEl = w.globals.dom.baseEl.querySelector(\n          `.apexcharts-series[rel='${seriesCnt + 1}']`\n        )\n        realIndex = parseInt(seriesEl.getAttribute('rel'), 10) - 1\n      }\n\n      if (isHidden) {\n        const seriesToMakeVisible = [\n          {\n            cs: w.globals.collapsedSeries,\n            csi: w.globals.collapsedSeriesIndices\n          },\n          {\n            cs: w.globals.ancillaryCollapsedSeries,\n            csi: w.globals.ancillaryCollapsedSeriesIndices\n          }\n        ]\n        seriesToMakeVisible.forEach((r) => {\n          this.riseCollapsedSeries(r.cs, r.csi, realIndex)\n        })\n      } else {\n        this.hideSeries({ seriesEl, realIndex })\n      }\n    } else {\n      // for non-axis charts i.e pie / donuts\n      let seriesEl = w.globals.dom.Paper.select(\n        ` .apexcharts-series[rel='${seriesCnt + 1}'] path`\n      )\n\n      const type = w.config.chart.type\n      if (type === 'pie' || type === 'polarArea' || type === 'donut') {\n        let dataLabels = w.config.plotOptions.pie.donut.labels\n\n        const graphics = new Graphics(this.lgCtx.ctx)\n        graphics.pathMouseDown(seriesEl.members[0], null)\n        this.lgCtx.ctx.pie.printDataLabelsInner(\n          seriesEl.members[0].node,\n          dataLabels\n        )\n      }\n\n      seriesEl.fire('click')\n    }\n  }\n\n  hideSeries({ seriesEl, realIndex }) {\n    const w = this.w\n\n    let series = Utils.clone(w.config.series)\n\n    if (w.globals.axisCharts) {\n      let shouldNotHideYAxis = false\n\n      if (\n        w.config.yaxis[realIndex] &&\n        w.config.yaxis[realIndex].show &&\n        w.config.yaxis[realIndex].showAlways\n      ) {\n        shouldNotHideYAxis = true\n        if (w.globals.ancillaryCollapsedSeriesIndices.indexOf(realIndex) < 0) {\n          w.globals.ancillaryCollapsedSeries.push({\n            index: realIndex,\n            data: series[realIndex].data.slice(),\n            type: seriesEl.parentNode.className.baseVal.split('-')[1]\n          })\n          w.globals.ancillaryCollapsedSeriesIndices.push(realIndex)\n        }\n      }\n\n      if (!shouldNotHideYAxis) {\n        w.globals.collapsedSeries.push({\n          index: realIndex,\n          data: series[realIndex].data.slice(),\n          type: seriesEl.parentNode.className.baseVal.split('-')[1]\n        })\n        w.globals.collapsedSeriesIndices.push(realIndex)\n\n        let removeIndexOfRising = w.globals.risingSeries.indexOf(realIndex)\n\n        w.globals.risingSeries.splice(removeIndexOfRising, 1)\n      }\n    } else {\n      w.globals.collapsedSeries.push({\n        index: realIndex,\n        data: series[realIndex]\n      })\n      w.globals.collapsedSeriesIndices.push(realIndex)\n    }\n\n    let seriesChildren = seriesEl.childNodes\n    for (let sc = 0; sc < seriesChildren.length; sc++) {\n      if (\n        seriesChildren[sc].classList.contains('apexcharts-series-markers-wrap')\n      ) {\n        if (seriesChildren[sc].classList.contains('apexcharts-hide')) {\n          seriesChildren[sc].classList.remove('apexcharts-hide')\n        } else {\n          seriesChildren[sc].classList.add('apexcharts-hide')\n        }\n      }\n    }\n\n    w.globals.allSeriesCollapsed =\n      w.globals.collapsedSeries.length === w.config.series.length\n\n    series = this._getSeriesBasedOnCollapsedState(series)\n    this.lgCtx.ctx.updateHelpers._updateSeries(\n      series,\n      w.config.chart.animations.dynamicAnimation.enabled\n    )\n  }\n\n  riseCollapsedSeries(collapsedSeries, seriesIndices, realIndex) {\n    const w = this.w\n    let series = Utils.clone(w.config.series)\n\n    if (collapsedSeries.length > 0) {\n      for (let c = 0; c < collapsedSeries.length; c++) {\n        if (collapsedSeries[c].index === realIndex) {\n          if (w.globals.axisCharts) {\n            series[realIndex].data = collapsedSeries[c].data.slice()\n            collapsedSeries.splice(c, 1)\n            seriesIndices.splice(c, 1)\n            w.globals.risingSeries.push(realIndex)\n          } else {\n            series[realIndex] = collapsedSeries[c].data\n            collapsedSeries.splice(c, 1)\n            seriesIndices.splice(c, 1)\n            w.globals.risingSeries.push(realIndex)\n          }\n        }\n      }\n\n      series = this._getSeriesBasedOnCollapsedState(series)\n\n      this.lgCtx.ctx.updateHelpers._updateSeries(\n        series,\n        w.config.chart.animations.dynamicAnimation.enabled\n      )\n    }\n  }\n\n  _getSeriesBasedOnCollapsedState(series) {\n    const w = this.w\n\n    if (w.globals.axisCharts) {\n      series.forEach((s, sI) => {\n        if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n          series[sI].data = []\n        }\n      })\n    } else {\n      series.forEach((s, sI) => {\n        if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n          series[sI] = 0\n        }\n      })\n    }\n\n    return series\n  }\n}\n","import CoreUtils from '../CoreUtils'\nimport Dimensions from '../dimensions/Dimensions'\nimport Graphics from '../Graphics'\nimport Series from '../Series'\nimport Utils from '../../utils/Utils'\nimport Helpers from './Helpers'\n\n/**\n * ApexCharts Legend Class to draw legend.\n *\n * @module Legend\n **/\n\nclass Legend {\n  constructor(ctx, opts) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.onLegendClick = this.onLegendClick.bind(this)\n    this.onLegendHovered = this.onLegendHovered.bind(this)\n\n    this.isBarsDistributed =\n      this.w.config.chart.type === 'bar' &&\n      this.w.config.plotOptions.bar.distributed &&\n      this.w.config.series.length === 1\n\n    this.legendHelpers = new Helpers(this)\n  }\n\n  init() {\n    const w = this.w\n\n    const gl = w.globals\n    const cnf = w.config\n\n    const showLegendAlways =\n      (cnf.legend.showForSingleSeries && gl.series.length === 1) ||\n      this.isBarsDistributed ||\n      gl.series.length > 1\n\n    if ((showLegendAlways || !gl.axisCharts) && cnf.legend.show) {\n      while (gl.dom.elLegendWrap.firstChild) {\n        gl.dom.elLegendWrap.removeChild(gl.dom.elLegendWrap.firstChild)\n      }\n\n      this.drawLegends()\n      if (!Utils.isIE11()) {\n        this.legendHelpers.appendToForeignObject()\n      } else {\n        // IE11 doesn't supports foreignObject, hence append it to <head>\n        document\n          .getElementsByTagName('head')[0]\n          .appendChild(this.legendHelpers.getLegendStyles())\n      }\n\n      if (cnf.legend.position === 'bottom' || cnf.legend.position === 'top') {\n        this.legendAlignHorizontal()\n      } else if (\n        cnf.legend.position === 'right' ||\n        cnf.legend.position === 'left'\n      ) {\n        this.legendAlignVertical()\n      }\n    }\n  }\n\n  drawLegends() {\n    let me = this\n    let w = this.w\n\n    let fontFamily = w.config.legend.fontFamily\n\n    let legendNames = w.globals.seriesNames\n    let fillcolor = w.globals.colors.slice()\n\n    if (w.config.chart.type === 'heatmap') {\n      const ranges = w.config.plotOptions.heatmap.colorScale.ranges\n      legendNames = ranges.map((colorScale) => {\n        return colorScale.name\n          ? colorScale.name\n          : colorScale.from + ' - ' + colorScale.to\n      })\n      fillcolor = ranges.map((color) => color.color)\n    } else if (this.isBarsDistributed) {\n      legendNames = w.globals.labels.slice()\n    }\n\n    if (w.config.legend.customLegendItems.length) {\n      legendNames = w.config.legend.customLegendItems\n    }\n    let legendFormatter = w.globals.legendFormatter\n\n    let isLegendInversed = w.config.legend.inverseOrder\n\n    for (\n      let i = isLegendInversed ? legendNames.length - 1 : 0;\n      isLegendInversed ? i >= 0 : i <= legendNames.length - 1;\n      isLegendInversed ? i-- : i++\n    ) {\n      let text = legendFormatter(legendNames[i], { seriesIndex: i, w })\n\n      let collapsedSeries = false\n      let ancillaryCollapsedSeries = false\n      if (w.globals.collapsedSeries.length > 0) {\n        for (let c = 0; c < w.globals.collapsedSeries.length; c++) {\n          if (w.globals.collapsedSeries[c].index === i) {\n            collapsedSeries = true\n          }\n        }\n      }\n\n      if (w.globals.ancillaryCollapsedSeriesIndices.length > 0) {\n        for (\n          let c = 0;\n          c < w.globals.ancillaryCollapsedSeriesIndices.length;\n          c++\n        ) {\n          if (w.globals.ancillaryCollapsedSeriesIndices[c] === i) {\n            ancillaryCollapsedSeries = true\n          }\n        }\n      }\n\n      let elMarker = document.createElement('span')\n      elMarker.classList.add('apexcharts-legend-marker')\n\n      let mOffsetX = w.config.legend.markers.offsetX\n      let mOffsetY = w.config.legend.markers.offsetY\n      let mHeight = w.config.legend.markers.height\n      let mWidth = w.config.legend.markers.width\n      let mBorderWidth = w.config.legend.markers.strokeWidth\n      let mBorderColor = w.config.legend.markers.strokeColor\n      let mBorderRadius = w.config.legend.markers.radius\n\n      let mStyle = elMarker.style\n\n      mStyle.background = fillcolor[i]\n      mStyle.color = fillcolor[i]\n      mStyle.setProperty('background', fillcolor[i], 'important')\n\n      // override fill color with custom legend.markers.fillColors\n      if (\n        w.config.legend.markers.fillColors &&\n        w.config.legend.markers.fillColors[i]\n      ) {\n        mStyle.background = w.config.legend.markers.fillColors[i]\n      }\n\n      // override with data color\n      if (w.globals.seriesColors[i] !== undefined) {\n        mStyle.background = w.globals.seriesColors[i]\n        mStyle.color = w.globals.seriesColors[i]\n      }\n\n      mStyle.height = Array.isArray(mHeight)\n        ? parseFloat(mHeight[i]) + 'px'\n        : parseFloat(mHeight) + 'px'\n      mStyle.width = Array.isArray(mWidth)\n        ? parseFloat(mWidth[i]) + 'px'\n        : parseFloat(mWidth) + 'px'\n      mStyle.left =\n        (Array.isArray(mOffsetX)\n          ? parseFloat(mOffsetX[i])\n          : parseFloat(mOffsetX)) + 'px'\n      mStyle.top =\n        (Array.isArray(mOffsetY)\n          ? parseFloat(mOffsetY[i])\n          : parseFloat(mOffsetY)) + 'px'\n      mStyle.borderWidth = Array.isArray(mBorderWidth)\n        ? mBorderWidth[i]\n        : mBorderWidth\n      mStyle.borderColor = Array.isArray(mBorderColor)\n        ? mBorderColor[i]\n        : mBorderColor\n      mStyle.borderRadius = Array.isArray(mBorderRadius)\n        ? parseFloat(mBorderRadius[i]) + 'px'\n        : parseFloat(mBorderRadius) + 'px'\n\n      if (w.config.legend.markers.customHTML) {\n        if (Array.isArray(w.config.legend.markers.customHTML)) {\n          if (w.config.legend.markers.customHTML[i]) {\n            elMarker.innerHTML = w.config.legend.markers.customHTML[i]()\n          }\n        } else {\n          elMarker.innerHTML = w.config.legend.markers.customHTML()\n        }\n      }\n\n      Graphics.setAttrs(elMarker, {\n        rel: i + 1,\n        'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n      })\n\n      if (collapsedSeries || ancillaryCollapsedSeries) {\n        elMarker.classList.add('apexcharts-inactive-legend')\n      }\n\n      let elLegend = document.createElement('div')\n\n      let elLegendText = document.createElement('span')\n      elLegendText.classList.add('apexcharts-legend-text')\n      elLegendText.innerHTML = Array.isArray(text)\n        ? Utils.sanitizeDom(text.join(' '))\n        : Utils.sanitizeDom(text)\n\n      let textColor = w.config.legend.labels.useSeriesColors\n        ? w.globals.colors[i]\n        : w.config.legend.labels.colors\n\n      if (!textColor) {\n        textColor = w.config.chart.foreColor\n      }\n\n      elLegendText.style.color = textColor\n\n      elLegendText.style.fontSize = parseFloat(w.config.legend.fontSize) + 'px'\n      elLegendText.style.fontWeight = w.config.legend.fontWeight\n      elLegendText.style.fontFamily = fontFamily || w.config.chart.fontFamily\n\n      Graphics.setAttrs(elLegendText, {\n        rel: i + 1,\n        i,\n        'data:default-text': encodeURIComponent(text),\n        'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n      })\n\n      elLegend.appendChild(elMarker)\n      elLegend.appendChild(elLegendText)\n\n      const coreUtils = new CoreUtils(this.ctx)\n      if (!w.config.legend.showForZeroSeries) {\n        const total = coreUtils.getSeriesTotalByIndex(i)\n\n        if (\n          total === 0 &&\n          coreUtils.seriesHaveSameValues(i) &&\n          !coreUtils.isSeriesNull(i) &&\n          w.globals.collapsedSeriesIndices.indexOf(i) === -1 &&\n          w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1\n        ) {\n          elLegend.classList.add('apexcharts-hidden-zero-series')\n        }\n      }\n\n      if (!w.config.legend.showForNullSeries) {\n        if (\n          coreUtils.isSeriesNull(i) &&\n          w.globals.collapsedSeriesIndices.indexOf(i) === -1 &&\n          w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1\n        ) {\n          elLegend.classList.add('apexcharts-hidden-null-series')\n        }\n      }\n\n      w.globals.dom.elLegendWrap.appendChild(elLegend)\n      w.globals.dom.elLegendWrap.classList.add(\n        `apexcharts-align-${w.config.legend.horizontalAlign}`\n      )\n      w.globals.dom.elLegendWrap.classList.add(\n        'position-' + w.config.legend.position\n      )\n\n      elLegend.classList.add('apexcharts-legend-series')\n      elLegend.style.margin = `${w.config.legend.itemMargin.vertical}px ${w.config.legend.itemMargin.horizontal}px`\n      w.globals.dom.elLegendWrap.style.width = w.config.legend.width\n        ? w.config.legend.width + 'px'\n        : ''\n      w.globals.dom.elLegendWrap.style.height = w.config.legend.height\n        ? w.config.legend.height + 'px'\n        : ''\n\n      Graphics.setAttrs(elLegend, {\n        rel: i + 1,\n        seriesName: Utils.escapeString(legendNames[i]),\n        'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n      })\n\n      if (collapsedSeries || ancillaryCollapsedSeries) {\n        elLegend.classList.add('apexcharts-inactive-legend')\n      }\n\n      if (!w.config.legend.onItemClick.toggleDataSeries) {\n        elLegend.classList.add('apexcharts-no-click')\n      }\n    }\n\n    w.globals.dom.elWrap.addEventListener('click', me.onLegendClick, true)\n\n    if (\n      w.config.legend.onItemHover.highlightDataSeries &&\n      w.config.legend.customLegendItems.length === 0\n    ) {\n      w.globals.dom.elWrap.addEventListener(\n        'mousemove',\n        me.onLegendHovered,\n        true\n      )\n      w.globals.dom.elWrap.addEventListener(\n        'mouseout',\n        me.onLegendHovered,\n        true\n      )\n    }\n  }\n\n  setLegendWrapXY(offsetX, offsetY) {\n    let w = this.w\n\n    let elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend')\n\n    const legendRect = elLegendWrap.getBoundingClientRect()\n\n    let x = 0\n    let y = 0\n\n    if (w.config.legend.position === 'bottom') {\n      y = y + (w.globals.svgHeight - legendRect.height / 2)\n    } else if (w.config.legend.position === 'top') {\n      const dim = new Dimensions(this.ctx)\n      const titleH = dim.dimHelpers.getTitleSubtitleCoords('title').height\n      const subtitleH = dim.dimHelpers.getTitleSubtitleCoords('subtitle').height\n\n      y =\n        y +\n        (titleH > 0 ? titleH - 10 : 0) +\n        (subtitleH > 0 ? subtitleH - 10 : 0)\n    }\n\n    elLegendWrap.style.position = 'absolute'\n\n    x = x + offsetX + w.config.legend.offsetX\n    y = y + offsetY + w.config.legend.offsetY\n\n    elLegendWrap.style.left = x + 'px'\n    elLegendWrap.style.top = y + 'px'\n\n    if (w.config.legend.position === 'bottom') {\n      elLegendWrap.style.top = 'auto'\n      elLegendWrap.style.bottom = 5 - w.config.legend.offsetY + 'px'\n    } else if (w.config.legend.position === 'right') {\n      elLegendWrap.style.left = 'auto'\n      elLegendWrap.style.right = 25 + w.config.legend.offsetX + 'px'\n    }\n\n    const fixedHeigthWidth = ['width', 'height']\n    fixedHeigthWidth.forEach((hw) => {\n      if (elLegendWrap.style[hw]) {\n        elLegendWrap.style[hw] = parseInt(w.config.legend[hw], 10) + 'px'\n      }\n    })\n  }\n\n  legendAlignHorizontal() {\n    let w = this.w\n\n    let elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend')\n\n    elLegendWrap.style.right = 0\n\n    let lRect = this.legendHelpers.getLegendBBox()\n\n    let dimensions = new Dimensions(this.ctx)\n    let titleRect = dimensions.dimHelpers.getTitleSubtitleCoords('title')\n    let subtitleRect = dimensions.dimHelpers.getTitleSubtitleCoords('subtitle')\n\n    let offsetX = 20\n    let offsetY = 0\n\n    // the whole legend box is set to bottom\n    if (w.config.legend.position === 'bottom') {\n      offsetY = -lRect.clwh / 1.8\n    } else if (w.config.legend.position === 'top') {\n      offsetY =\n        titleRect.height +\n        subtitleRect.height +\n        w.config.title.margin +\n        w.config.subtitle.margin -\n        10\n    }\n\n    this.setLegendWrapXY(offsetX, offsetY)\n  }\n\n  legendAlignVertical() {\n    let w = this.w\n\n    let lRect = this.legendHelpers.getLegendBBox()\n\n    let offsetY = 20\n    let offsetX = 0\n\n    if (w.config.legend.position === 'left') {\n      offsetX = 20\n    }\n\n    if (w.config.legend.position === 'right') {\n      offsetX = w.globals.svgWidth - lRect.clww - 10\n    }\n\n    this.setLegendWrapXY(offsetX, offsetY)\n  }\n\n  onLegendHovered(e) {\n    const w = this.w\n\n    const hoverOverLegend =\n      e.target.classList.contains('apexcharts-legend-text') ||\n      e.target.classList.contains('apexcharts-legend-marker')\n\n    if (w.config.chart.type !== 'heatmap' && !this.isBarsDistributed) {\n      if (\n        !e.target.classList.contains('apexcharts-inactive-legend') &&\n        hoverOverLegend\n      ) {\n        let series = new Series(this.ctx)\n        series.toggleSeriesOnHover(e, e.target)\n      }\n    } else {\n      // for heatmap handling\n      if (hoverOverLegend) {\n        let seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1\n        this.ctx.events.fireEvent('legendHover', [this.ctx, seriesCnt, this.w])\n\n        let series = new Series(this.ctx)\n        series.highlightRangeInSeries(e, e.target)\n      }\n    }\n  }\n\n  onLegendClick(e) {\n    const w = this.w\n\n    if (w.config.legend.customLegendItems.length) return\n\n    if (\n      e.target.classList.contains('apexcharts-legend-text') ||\n      e.target.classList.contains('apexcharts-legend-marker')\n    ) {\n      let seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1\n      let isHidden = e.target.getAttribute('data:collapsed') === 'true'\n\n      const legendClick = this.w.config.chart.events.legendClick\n      if (typeof legendClick === 'function') {\n        legendClick(this.ctx, seriesCnt, this.w)\n      }\n\n      this.ctx.events.fireEvent('legendClick', [this.ctx, seriesCnt, this.w])\n\n      const markerClick = this.w.config.legend.markers.onClick\n      if (\n        typeof markerClick === 'function' &&\n        e.target.classList.contains('apexcharts-legend-marker')\n      ) {\n        markerClick(this.ctx, seriesCnt, this.w)\n        this.ctx.events.fireEvent('legendMarkerClick', [\n          this.ctx,\n          seriesCnt,\n          this.w\n        ])\n      }\n\n      // for now - just prevent click on heatmap legend - and allow hover only\n      const clickAllowed =\n        w.config.chart.type !== 'treemap' &&\n        w.config.chart.type !== 'heatmap' &&\n        !this.isBarsDistributed\n\n      if (clickAllowed && w.config.legend.onItemClick.toggleDataSeries) {\n        this.legendHelpers.toggleDataSeries(seriesCnt, isHidden)\n      }\n    }\n  }\n}\n\nexport default Legend\n","import Graphics from './Graphics'\nimport Exports from './Exports'\nimport Scales from './Scales'\nimport Utils from './../utils/Utils'\nimport icoPan from './../assets/ico-pan-hand.svg'\nimport icoZoom from './../assets/ico-zoom-in.svg'\nimport icoReset from './../assets/ico-home.svg'\nimport icoZoomIn from './../assets/ico-plus.svg'\nimport icoZoomOut from './../assets/ico-minus.svg'\nimport icoSelect from './../assets/ico-select.svg'\nimport icoMenu from './../assets/ico-menu.svg'\n\n/**\n * ApexCharts Toolbar Class for creating toolbar in axis based charts.\n *\n * @module Toolbar\n **/\n\nexport default class Toolbar {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    const w = this.w\n\n    this.ev = this.w.config.chart.events\n    this.selectedClass = 'apexcharts-selected'\n\n    this.localeValues = this.w.globals.locale.toolbar\n\n    this.minX = w.globals.minX\n    this.maxX = w.globals.maxX\n  }\n\n  createToolbar() {\n    let w = this.w\n\n    const createDiv = () => {\n      return document.createElement('div')\n    }\n    const elToolbarWrap = createDiv()\n    elToolbarWrap.setAttribute('class', 'apexcharts-toolbar')\n    elToolbarWrap.style.top = w.config.chart.toolbar.offsetY + 'px'\n    elToolbarWrap.style.right = -w.config.chart.toolbar.offsetX + 3 + 'px'\n    w.globals.dom.elWrap.appendChild(elToolbarWrap)\n\n    this.elZoom = createDiv()\n    this.elZoomIn = createDiv()\n    this.elZoomOut = createDiv()\n    this.elPan = createDiv()\n    this.elSelection = createDiv()\n    this.elZoomReset = createDiv()\n    this.elMenuIcon = createDiv()\n    this.elMenu = createDiv()\n    this.elCustomIcons = []\n\n    this.t = w.config.chart.toolbar.tools\n\n    if (Array.isArray(this.t.customIcons)) {\n      for (let i = 0; i < this.t.customIcons.length; i++) {\n        this.elCustomIcons.push(createDiv())\n      }\n    }\n\n    let toolbarControls = []\n\n    const appendZoomControl = (type, el, ico) => {\n      const tool = type.toLowerCase()\n      if (this.t[tool] && w.config.chart.zoom.enabled) {\n        toolbarControls.push({\n          el,\n          icon: typeof this.t[tool] === 'string' ? this.t[tool] : ico,\n          title: this.localeValues[type],\n          class: `apexcharts-${tool}-icon`\n        })\n      }\n    }\n\n    appendZoomControl('zoomIn', this.elZoomIn, icoZoomIn)\n    appendZoomControl('zoomOut', this.elZoomOut, icoZoomOut)\n\n    const zoomSelectionCtrls = (z) => {\n      if (this.t[z] && w.config.chart[z].enabled) {\n        toolbarControls.push({\n          el: z === 'zoom' ? this.elZoom : this.elSelection,\n          icon:\n            typeof this.t[z] === 'string'\n              ? this.t[z]\n              : z === 'zoom'\n              ? icoZoom\n              : icoSelect,\n          title: this.localeValues[\n            z === 'zoom' ? 'selectionZoom' : 'selection'\n          ],\n          class: w.globals.isTouchDevice\n            ? 'apexcharts-element-hidden'\n            : `apexcharts-${z}-icon`\n        })\n      }\n    }\n    zoomSelectionCtrls('zoom')\n    zoomSelectionCtrls('selection')\n\n    if (this.t.pan && w.config.chart.zoom.enabled) {\n      toolbarControls.push({\n        el: this.elPan,\n        icon: typeof this.t.pan === 'string' ? this.t.pan : icoPan,\n        title: this.localeValues.pan,\n        class: w.globals.isTouchDevice\n          ? 'apexcharts-element-hidden'\n          : 'apexcharts-pan-icon'\n      })\n    }\n\n    appendZoomControl('reset', this.elZoomReset, icoReset)\n\n    if (this.t.download) {\n      toolbarControls.push({\n        el: this.elMenuIcon,\n        icon: typeof this.t.download === 'string' ? this.t.download : icoMenu,\n        title: this.localeValues.menu,\n        class: 'apexcharts-menu-icon'\n      })\n    }\n\n    for (let i = 0; i < this.elCustomIcons.length; i++) {\n      toolbarControls.push({\n        el: this.elCustomIcons[i],\n        icon: this.t.customIcons[i].icon,\n        title: this.t.customIcons[i].title,\n        index: this.t.customIcons[i].index,\n        class: 'apexcharts-toolbar-custom-icon ' + this.t.customIcons[i].class\n      })\n    }\n\n    toolbarControls.forEach((t, index) => {\n      if (t.index) {\n        Utils.moveIndexInArray(toolbarControls, index, t.index)\n      }\n    })\n\n    for (let i = 0; i < toolbarControls.length; i++) {\n      Graphics.setAttrs(toolbarControls[i].el, {\n        class: toolbarControls[i].class,\n        title: toolbarControls[i].title\n      })\n\n      toolbarControls[i].el.innerHTML = toolbarControls[i].icon\n      elToolbarWrap.appendChild(toolbarControls[i].el)\n    }\n\n    this._createHamburgerMenu(elToolbarWrap)\n\n    if (w.globals.zoomEnabled) {\n      this.elZoom.classList.add(this.selectedClass)\n    } else if (w.globals.panEnabled) {\n      this.elPan.classList.add(this.selectedClass)\n    } else if (w.globals.selectionEnabled) {\n      this.elSelection.classList.add(this.selectedClass)\n    }\n\n    this.addToolbarEventListeners()\n  }\n\n  _createHamburgerMenu(parent) {\n    this.elMenuItems = []\n    parent.appendChild(this.elMenu)\n\n    Graphics.setAttrs(this.elMenu, {\n      class: 'apexcharts-menu'\n    })\n\n    const menuItems = [\n      {\n        name: 'exportSVG',\n        title: this.localeValues.exportToSVG\n      },\n      {\n        name: 'exportPNG',\n        title: this.localeValues.exportToPNG\n      },\n      {\n        name: 'exportCSV',\n        title: this.localeValues.exportToCSV\n      }\n    ]\n\n    if (!this.w.globals.allSeriesHasEqualX) {\n      // if it is a multi series, and all series have variable x values, export CSV won't work\n      menuItems.splice(2, 1)\n    }\n    for (let i = 0; i < menuItems.length; i++) {\n      this.elMenuItems.push(document.createElement('div'))\n      this.elMenuItems[i].innerHTML = menuItems[i].title\n      Graphics.setAttrs(this.elMenuItems[i], {\n        class: `apexcharts-menu-item ${menuItems[i].name}`,\n        title: menuItems[i].title\n      })\n      this.elMenu.appendChild(this.elMenuItems[i])\n    }\n  }\n\n  addToolbarEventListeners() {\n    this.elZoomReset.addEventListener('click', this.handleZoomReset.bind(this))\n    this.elSelection.addEventListener(\n      'click',\n      this.toggleZoomSelection.bind(this, 'selection')\n    )\n    this.elZoom.addEventListener(\n      'click',\n      this.toggleZoomSelection.bind(this, 'zoom')\n    )\n    this.elZoomIn.addEventListener('click', this.handleZoomIn.bind(this))\n    this.elZoomOut.addEventListener('click', this.handleZoomOut.bind(this))\n    this.elPan.addEventListener('click', this.togglePanning.bind(this))\n    this.elMenuIcon.addEventListener('click', this.toggleMenu.bind(this))\n    this.elMenuItems.forEach((m) => {\n      if (m.classList.contains('exportSVG')) {\n        m.addEventListener('click', this.handleDownload.bind(this, 'svg'))\n      } else if (m.classList.contains('exportPNG')) {\n        m.addEventListener('click', this.handleDownload.bind(this, 'png'))\n      } else if (m.classList.contains('exportCSV')) {\n        m.addEventListener('click', this.handleDownload.bind(this, 'csv'))\n      }\n    })\n    for (let i = 0; i < this.t.customIcons.length; i++) {\n      this.elCustomIcons[i].addEventListener(\n        'click',\n        this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w)\n      )\n    }\n  }\n\n  toggleZoomSelection(type) {\n    const charts = this.ctx.getSyncedCharts()\n\n    charts.forEach((ch) => {\n      ch.ctx.toolbar.toggleOtherControls()\n\n      let el =\n        type === 'selection'\n          ? ch.ctx.toolbar.elSelection\n          : ch.ctx.toolbar.elZoom\n      let enabledType =\n        type === 'selection' ? 'selectionEnabled' : 'zoomEnabled'\n\n      ch.w.globals[enabledType] = !ch.w.globals[enabledType]\n\n      if (!el.classList.contains(ch.ctx.toolbar.selectedClass)) {\n        el.classList.add(ch.ctx.toolbar.selectedClass)\n      } else {\n        el.classList.remove(ch.ctx.toolbar.selectedClass)\n      }\n    })\n  }\n\n  getToolbarIconsReference() {\n    const w = this.w\n    if (!this.elZoom) {\n      this.elZoom = w.globals.dom.baseEl.querySelector('.apexcharts-zoom-icon')\n    }\n    if (!this.elPan) {\n      this.elPan = w.globals.dom.baseEl.querySelector('.apexcharts-pan-icon')\n    }\n    if (!this.elSelection) {\n      this.elSelection = w.globals.dom.baseEl.querySelector(\n        '.apexcharts-selection-icon'\n      )\n    }\n  }\n\n  enableZoomPanFromToolbar(type) {\n    this.toggleOtherControls()\n\n    type === 'pan'\n      ? (this.w.globals.panEnabled = true)\n      : (this.w.globals.zoomEnabled = true)\n\n    const el = type === 'pan' ? this.elPan : this.elZoom\n    const el2 = type === 'pan' ? this.elZoom : this.elPan\n    if (el) {\n      el.classList.add(this.selectedClass)\n    }\n    if (el2) {\n      el2.classList.remove(this.selectedClass)\n    }\n  }\n\n  togglePanning() {\n    const charts = this.ctx.getSyncedCharts()\n\n    charts.forEach((ch) => {\n      ch.ctx.toolbar.toggleOtherControls()\n      ch.w.globals.panEnabled = !ch.w.globals.panEnabled\n\n      if (\n        !ch.ctx.toolbar.elPan.classList.contains(ch.ctx.toolbar.selectedClass)\n      ) {\n        ch.ctx.toolbar.elPan.classList.add(ch.ctx.toolbar.selectedClass)\n      } else {\n        ch.ctx.toolbar.elPan.classList.remove(ch.ctx.toolbar.selectedClass)\n      }\n    })\n  }\n\n  toggleOtherControls() {\n    const w = this.w\n    w.globals.panEnabled = false\n    w.globals.zoomEnabled = false\n    w.globals.selectionEnabled = false\n\n    this.getToolbarIconsReference()\n\n    const toggleEls = [this.elPan, this.elSelection, this.elZoom]\n    toggleEls.forEach((el) => {\n      if (el) {\n        el.classList.remove(this.selectedClass)\n      }\n    })\n  }\n\n  handleZoomIn() {\n    const w = this.w\n\n    if (w.globals.isTimelineBar) {\n      this.minX = w.globals.minY\n      this.maxX = w.globals.maxY\n    }\n\n    const centerX = (this.minX + this.maxX) / 2\n    let newMinX = (this.minX + centerX) / 2\n    let newMaxX = (this.maxX + centerX) / 2\n\n    const newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX)\n\n    if (!w.globals.disableZoomIn) {\n      this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX)\n    }\n  }\n\n  handleZoomOut() {\n    const w = this.w\n\n    if (w.globals.isTimelineBar) {\n      this.minX = w.globals.minY\n      this.maxX = w.globals.maxY\n    }\n\n    // avoid zooming out beyond 1000 which may result in NaN values being printed on x-axis\n    if (\n      w.config.xaxis.type === 'datetime' &&\n      new Date(this.minX).getUTCFullYear() < 1000\n    ) {\n      return\n    }\n\n    const centerX = (this.minX + this.maxX) / 2\n    let newMinX = this.minX - (centerX - this.minX)\n    let newMaxX = this.maxX - (centerX - this.maxX)\n\n    const newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX)\n\n    if (!w.globals.disableZoomOut) {\n      this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX)\n    }\n  }\n\n  _getNewMinXMaxX(newMinX, newMaxX) {\n    const shouldFloor = this.w.config.xaxis.convertedCatToNumeric\n    return {\n      minX: shouldFloor ? Math.floor(newMinX) : newMinX,\n      maxX: shouldFloor ? Math.floor(newMaxX) : newMaxX\n    }\n  }\n\n  zoomUpdateOptions(newMinX, newMaxX) {\n    const w = this.w\n\n    if (newMinX === undefined && newMaxX === undefined) {\n      this.handleZoomReset()\n      return\n    }\n\n    if (w.config.xaxis.convertedCatToNumeric) {\n      // in category charts, avoid zooming out beyond min and max\n      if (newMinX < 1) {\n        newMinX = 1\n        newMaxX = w.globals.dataPoints\n      }\n\n      if (newMaxX - newMinX < 2) {\n        return\n      }\n    }\n\n    let xaxis = {\n      min: newMinX,\n      max: newMaxX\n    }\n\n    const beforeZoomRange = this.getBeforeZoomRange(xaxis)\n    if (beforeZoomRange) {\n      xaxis = beforeZoomRange.xaxis\n    }\n\n    let options = {\n      xaxis\n    }\n\n    let yaxis = Utils.clone(w.globals.initialConfig.yaxis)\n    if (w.config.chart.zoom.autoScaleYaxis) {\n      const scale = new Scales(this.ctx)\n      yaxis = scale.autoScaleY(this.ctx, yaxis, {\n        xaxis\n      })\n    }\n\n    if (!w.config.chart.group) {\n      // if chart in a group, prevent yaxis update here\n      // fix issue #650\n      options.yaxis = yaxis\n    }\n\n    this.w.globals.zoomed = true\n\n    this.ctx.updateHelpers._updateOptions(\n      options,\n      false,\n      this.w.config.chart.animations.dynamicAnimation.enabled\n    )\n\n    this.zoomCallback(xaxis, yaxis)\n  }\n\n  zoomCallback(xaxis, yaxis) {\n    if (typeof this.ev.zoomed === 'function') {\n      this.ev.zoomed(this.ctx, { xaxis, yaxis })\n    }\n  }\n\n  getBeforeZoomRange(xaxis, yaxis) {\n    let newRange = null\n    if (typeof this.ev.beforeZoom === 'function') {\n      newRange = this.ev.beforeZoom(this, { xaxis, yaxis })\n    }\n\n    return newRange\n  }\n\n  toggleMenu() {\n    window.setTimeout(() => {\n      if (this.elMenu.classList.contains('apexcharts-menu-open')) {\n        this.elMenu.classList.remove('apexcharts-menu-open')\n      } else {\n        this.elMenu.classList.add('apexcharts-menu-open')\n      }\n    }, 0)\n  }\n\n  handleDownload(type) {\n    const w = this.w\n    const exprt = new Exports(this.ctx)\n    switch (type) {\n      case 'svg':\n        exprt.exportToSVG(this.ctx)\n        break\n      case 'png':\n        exprt.exportToPng(this.ctx)\n        break\n      case 'csv':\n        exprt.exportToCSV({\n          series: w.config.series,\n          columnDelimiter: w.config.chart.toolbar.export.csv.columnDelimiter\n        })\n        break\n    }\n  }\n\n  handleZoomReset(e) {\n    const charts = this.ctx.getSyncedCharts()\n\n    charts.forEach((ch) => {\n      let w = ch.w\n\n      // forget lastXAxis min/max as reset button isn't resetting the x-axis completely if zoomX is called before\n      w.globals.lastXAxis.min = undefined\n      w.globals.lastXAxis.max = undefined\n\n      ch.updateHelpers.revertDefaultAxisMinMax()\n\n      if (typeof w.config.chart.events.beforeResetZoom === 'function') {\n        // here, user get an option to control xaxis and yaxis when resetZoom is called\n        // at this point, whatever is returned from w.config.chart.events.beforeResetZoom\n        // is set as the new xaxis/yaxis min/max\n        const resetZoomRange = w.config.chart.events.beforeResetZoom(ch, w)\n\n        if (resetZoomRange) {\n          ch.updateHelpers.revertDefaultAxisMinMax(resetZoomRange)\n        }\n      }\n\n      if (typeof w.config.chart.events.zoomed === 'function') {\n        ch.ctx.toolbar.zoomCallback({\n          min: w.config.xaxis.min,\n          max: w.config.xaxis.max\n        })\n      }\n\n      w.globals.zoomed = false\n\n      // if user has some series collapsed before hitting zoom reset button,\n      // those series should stay collapsed\n      let series = ch.ctx.series.emptyCollapsedSeries(\n        Utils.clone(w.globals.initialSeries)\n      )\n\n      ch.updateHelpers._updateSeries(\n        series,\n        w.config.chart.animations.dynamicAnimation.enabled\n      )\n    })\n  }\n\n  destroy() {\n    this.elZoom = null\n    this.elZoomIn = null\n    this.elZoomOut = null\n    this.elPan = null\n    this.elSelection = null\n    this.elZoomReset = null\n    this.elMenuIcon = null\n  }\n}\n","import Graphics from './Graphics'\nimport Utils from './../utils/Utils'\nimport Toolbar from './Toolbar'\nimport Scales from './Scales'\n\n/**\n * ApexCharts Zoom Class for handling zooming and panning on axes based charts.\n *\n * @module ZoomPanSelection\n **/\n\nexport default class ZoomPanSelection extends Toolbar {\n  constructor(ctx) {\n    super(ctx)\n\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.dragged = false\n    this.graphics = new Graphics(this.ctx)\n\n    this.eventList = [\n      'mousedown',\n      'mouseleave',\n      'mousemove',\n      'touchstart',\n      'touchmove',\n      'mouseup',\n      'touchend'\n    ]\n\n    this.clientX = 0\n    this.clientY = 0\n    this.startX = 0\n    this.endX = 0\n    this.dragX = 0\n    this.startY = 0\n    this.endY = 0\n    this.dragY = 0\n    this.moveDirection = 'none'\n  }\n\n  init({ xyRatios }) {\n    let w = this.w\n    let me = this\n\n    this.xyRatios = xyRatios\n\n    this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)\n    this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)\n    this.gridRect = w.globals.dom.baseEl.querySelector('.apexcharts-grid')\n\n    this.zoomRect.node.classList.add('apexcharts-zoom-rect')\n    this.selectionRect.node.classList.add('apexcharts-selection-rect')\n    w.globals.dom.elGraphical.add(this.zoomRect)\n    w.globals.dom.elGraphical.add(this.selectionRect)\n\n    if (w.config.chart.selection.type === 'x') {\n      this.slDraggableRect = this.selectionRect\n        .draggable({\n          minX: 0,\n          minY: 0,\n          maxX: w.globals.gridWidth,\n          maxY: w.globals.gridHeight\n        })\n        .on('dragmove', this.selectionDragging.bind(this, 'dragging'))\n    } else if (w.config.chart.selection.type === 'y') {\n      this.slDraggableRect = this.selectionRect\n        .draggable({\n          minX: 0,\n          maxX: w.globals.gridWidth\n        })\n        .on('dragmove', this.selectionDragging.bind(this, 'dragging'))\n    } else {\n      this.slDraggableRect = this.selectionRect\n        .draggable()\n        .on('dragmove', this.selectionDragging.bind(this, 'dragging'))\n    }\n    this.preselectedSelection()\n\n    this.hoverArea = w.globals.dom.baseEl.querySelector(\n      `${w.globals.chartClass} .apexcharts-svg`\n    )\n    this.hoverArea.classList.add('apexcharts-zoomable')\n\n    this.eventList.forEach((event) => {\n      this.hoverArea.addEventListener(\n        event,\n        me.svgMouseEvents.bind(me, xyRatios),\n        {\n          capture: false,\n          passive: true\n        }\n      )\n    })\n  }\n\n  // remove the event listeners which were previously added on hover area\n  destroy() {\n    if (this.slDraggableRect) {\n      this.slDraggableRect.draggable(false)\n      this.slDraggableRect.off()\n      this.selectionRect.off()\n    }\n\n    this.selectionRect = null\n    this.zoomRect = null\n    this.gridRect = null\n  }\n\n  svgMouseEvents(xyRatios, e) {\n    let w = this.w\n    let me = this\n    const toolbar = this.ctx.toolbar\n\n    let zoomtype = w.globals.zoomEnabled\n      ? w.config.chart.zoom.type\n      : w.config.chart.selection.type\n\n    const autoSelected = w.config.chart.toolbar.autoSelected\n\n    if (e.shiftKey) {\n      this.shiftWasPressed = true\n      toolbar.enableZoomPanFromToolbar(autoSelected === 'pan' ? 'zoom' : 'pan')\n    } else {\n      if (this.shiftWasPressed) {\n        toolbar.enableZoomPanFromToolbar(autoSelected)\n        this.shiftWasPressed = false\n      }\n    }\n\n    const tc = e.target.classList\n    const falsePositives =\n      tc.contains('apexcharts-selection-rect') ||\n      tc.contains('apexcharts-legend-marker') ||\n      tc.contains('apexcharts-legend-text') ||\n      e.target.parentNode.classList.contains('apexcharts-toolbar')\n\n    if (falsePositives) return\n\n    me.clientX =\n      e.type === 'touchmove' || e.type === 'touchstart'\n        ? e.touches[0].clientX\n        : e.type === 'touchend'\n        ? e.changedTouches[0].clientX\n        : e.clientX\n    me.clientY =\n      e.type === 'touchmove' || e.type === 'touchstart'\n        ? e.touches[0].clientY\n        : e.type === 'touchend'\n        ? e.changedTouches[0].clientY\n        : e.clientY\n\n    if (e.type === 'mousedown' && e.which === 1) {\n      let gridRectDim = me.gridRect.getBoundingClientRect()\n\n      me.startX = me.clientX - gridRectDim.left\n      me.startY = me.clientY - gridRectDim.top\n\n      me.dragged = false\n      me.w.globals.mousedown = true\n    }\n\n    if ((e.type === 'mousemove' && e.which === 1) || e.type === 'touchmove') {\n      me.dragged = true\n\n      if (w.globals.panEnabled) {\n        w.globals.selection = null\n        if (me.w.globals.mousedown) {\n          me.panDragging({\n            context: me,\n            zoomtype,\n            xyRatios\n          })\n        }\n      } else {\n        if (\n          (me.w.globals.mousedown && w.globals.zoomEnabled) ||\n          (me.w.globals.mousedown && w.globals.selectionEnabled)\n        ) {\n          me.selection = me.selectionDrawing({\n            context: me,\n            zoomtype\n          })\n        }\n      }\n    }\n\n    if (\n      e.type === 'mouseup' ||\n      e.type === 'touchend' ||\n      e.type === 'mouseleave'\n    ) {\n      // we will be calling getBoundingClientRect on each mousedown/mousemove/mouseup\n      let gridRectDim = me.gridRect.getBoundingClientRect()\n\n      if (me.w.globals.mousedown) {\n        // user released the drag, now do all the calculations\n        me.endX = me.clientX - gridRectDim.left\n        me.endY = me.clientY - gridRectDim.top\n        me.dragX = Math.abs(me.endX - me.startX)\n        me.dragY = Math.abs(me.endY - me.startY)\n\n        if (w.globals.zoomEnabled || w.globals.selectionEnabled) {\n          me.selectionDrawn({\n            context: me,\n            zoomtype\n          })\n        }\n\n        if (w.globals.panEnabled && w.config.xaxis.convertedCatToNumeric) {\n          me.delayedPanScrolled()\n        }\n      }\n\n      if (w.globals.zoomEnabled) {\n        me.hideSelectionRect(this.selectionRect)\n      }\n\n      me.dragged = false\n      me.w.globals.mousedown = false\n    }\n\n    this.makeSelectionRectDraggable()\n  }\n\n  makeSelectionRectDraggable() {\n    const w = this.w\n\n    if (!this.selectionRect) return\n\n    const rectDim = this.selectionRect.node.getBoundingClientRect()\n    if (rectDim.width > 0 && rectDim.height > 0) {\n      this.slDraggableRect\n        .selectize({\n          points: 'l, r',\n          pointSize: 8,\n          pointType: 'rect'\n        })\n        .resize({\n          constraint: {\n            minX: 0,\n            minY: 0,\n            maxX: w.globals.gridWidth,\n            maxY: w.globals.gridHeight\n          }\n        })\n        .on('resizing', this.selectionDragging.bind(this, 'resizing'))\n    }\n  }\n\n  preselectedSelection() {\n    const w = this.w\n    const xyRatios = this.xyRatios\n\n    if (!w.globals.zoomEnabled) {\n      if (\n        typeof w.globals.selection !== 'undefined' &&\n        w.globals.selection !== null\n      ) {\n        this.drawSelectionRect(w.globals.selection)\n      } else {\n        if (\n          w.config.chart.selection.xaxis.min !== undefined &&\n          w.config.chart.selection.xaxis.max !== undefined\n        ) {\n          const x =\n            (w.config.chart.selection.xaxis.min - w.globals.minX) /\n            xyRatios.xRatio\n          const width =\n            w.globals.gridWidth -\n            (w.globals.maxX - w.config.chart.selection.xaxis.max) /\n              xyRatios.xRatio -\n            x\n          let selectionRect = {\n            x,\n            y: 0,\n            width,\n            height: w.globals.gridHeight,\n            translateX: 0,\n            translateY: 0,\n            selectionEnabled: true\n          }\n          this.drawSelectionRect(selectionRect)\n          this.makeSelectionRectDraggable()\n          if (typeof w.config.chart.events.selection === 'function') {\n            w.config.chart.events.selection(this.ctx, {\n              xaxis: {\n                min: w.config.chart.selection.xaxis.min,\n                max: w.config.chart.selection.xaxis.max\n              },\n              yaxis: {}\n            })\n          }\n        }\n      }\n    }\n  }\n\n  drawSelectionRect({ x, y, width, height, translateX = 0, translateY = 0 }) {\n    const w = this.w\n    const zoomRect = this.zoomRect\n    const selectionRect = this.selectionRect\n    if (this.dragged || w.globals.selection !== null) {\n      let scalingAttrs = {\n        transform: 'translate(' + translateX + ', ' + translateY + ')'\n      }\n\n      // change styles based on zoom or selection\n      // zoom is Enabled and user has dragged, so draw blue rect\n      if (w.globals.zoomEnabled && this.dragged) {\n        if (width < 0) width = 1 // fixes apexcharts.js#1168\n        zoomRect.attr({\n          x,\n          y,\n          width,\n          height,\n          fill: w.config.chart.zoom.zoomedArea.fill.color,\n          'fill-opacity': w.config.chart.zoom.zoomedArea.fill.opacity,\n          stroke: w.config.chart.zoom.zoomedArea.stroke.color,\n          'stroke-width': w.config.chart.zoom.zoomedArea.stroke.width,\n          'stroke-opacity': w.config.chart.zoom.zoomedArea.stroke.opacity\n        })\n        Graphics.setAttrs(zoomRect.node, scalingAttrs)\n      }\n\n      // selection is enabled\n      if (w.globals.selectionEnabled) {\n        selectionRect.attr({\n          x,\n          y,\n          width: width > 0 ? width : 0,\n          height: height > 0 ? height : 0,\n          fill: w.config.chart.selection.fill.color,\n          'fill-opacity': w.config.chart.selection.fill.opacity,\n          stroke: w.config.chart.selection.stroke.color,\n          'stroke-width': w.config.chart.selection.stroke.width,\n          'stroke-dasharray': w.config.chart.selection.stroke.dashArray,\n          'stroke-opacity': w.config.chart.selection.stroke.opacity\n        })\n\n        Graphics.setAttrs(selectionRect.node, scalingAttrs)\n      }\n    }\n  }\n\n  hideSelectionRect(rect) {\n    if (rect) {\n      rect.attr({\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      })\n    }\n  }\n\n  selectionDrawing({ context, zoomtype }) {\n    const w = this.w\n    let me = context\n\n    let gridRectDim = this.gridRect.getBoundingClientRect()\n\n    let startX = me.startX - 1\n    let startY = me.startY\n    let inversedX = false\n    let inversedY = false\n\n    let selectionWidth = me.clientX - gridRectDim.left - startX\n    let selectionHeight = me.clientY - gridRectDim.top - startY\n\n    let selectionRect = {}\n\n    if (Math.abs(selectionWidth + startX) > w.globals.gridWidth) {\n      // user dragged the mouse outside drawing area to the right\n      selectionWidth = w.globals.gridWidth - startX\n    } else if (me.clientX - gridRectDim.left < 0) {\n      // user dragged the mouse outside drawing area to the left\n      selectionWidth = startX\n    }\n\n    // inverse selection X\n    if (startX > me.clientX - gridRectDim.left) {\n      inversedX = true\n      selectionWidth = Math.abs(selectionWidth)\n    }\n\n    // inverse selection Y\n    if (startY > me.clientY - gridRectDim.top) {\n      inversedY = true\n      selectionHeight = Math.abs(selectionHeight)\n    }\n\n    if (zoomtype === 'x') {\n      selectionRect = {\n        x: inversedX ? startX - selectionWidth : startX,\n        y: 0,\n        width: selectionWidth,\n        height: w.globals.gridHeight\n      }\n    } else if (zoomtype === 'y') {\n      selectionRect = {\n        x: 0,\n        y: inversedY ? startY - selectionHeight : startY,\n        width: w.globals.gridWidth,\n        height: selectionHeight\n      }\n    } else {\n      selectionRect = {\n        x: inversedX ? startX - selectionWidth : startX,\n        y: inversedY ? startY - selectionHeight : startY,\n        width: selectionWidth,\n        height: selectionHeight\n      }\n    }\n\n    me.drawSelectionRect(selectionRect)\n    me.selectionDragging('resizing')\n    return selectionRect\n  }\n\n  selectionDragging(type, e) {\n    const w = this.w\n    const xyRatios = this.xyRatios\n\n    const selRect = this.selectionRect\n\n    let timerInterval = 0\n\n    if (type === 'resizing') {\n      timerInterval = 30\n    }\n\n    // update selection when selection rect is dragged\n    const getSelAttr = (attr) => {\n      return parseFloat(selRect.node.getAttribute(attr))\n    }\n    const draggedProps = {\n      x: getSelAttr('x'),\n      y: getSelAttr('y'),\n      width: getSelAttr('width'),\n      height: getSelAttr('height')\n    }\n    w.globals.selection = draggedProps\n    // update selection ends\n\n    if (\n      typeof w.config.chart.events.selection === 'function' &&\n      w.globals.selectionEnabled\n    ) {\n      // a small debouncer is required when resizing to avoid freezing the chart\n      clearTimeout(this.w.globals.selectionResizeTimer)\n      this.w.globals.selectionResizeTimer = window.setTimeout(() => {\n        const gridRectDim = this.gridRect.getBoundingClientRect()\n        const selectionRect = selRect.node.getBoundingClientRect()\n\n        const minX =\n          w.globals.xAxisScale.niceMin +\n          (selectionRect.left - gridRectDim.left) * xyRatios.xRatio\n        const maxX =\n          w.globals.xAxisScale.niceMin +\n          (selectionRect.right - gridRectDim.left) * xyRatios.xRatio\n\n        const minY =\n          w.globals.yAxisScale[0].niceMin +\n          (gridRectDim.bottom - selectionRect.bottom) * xyRatios.yRatio[0]\n        const maxY =\n          w.globals.yAxisScale[0].niceMax -\n          (selectionRect.top - gridRectDim.top) * xyRatios.yRatio[0]\n\n        const xyAxis = {\n          xaxis: {\n            min: minX,\n            max: maxX\n          },\n          yaxis: {\n            min: minY,\n            max: maxY\n          }\n        }\n        w.config.chart.events.selection(this.ctx, xyAxis)\n\n        if (\n          w.config.chart.brush.enabled &&\n          w.config.chart.events.brushScrolled !== undefined\n        ) {\n          w.config.chart.events.brushScrolled(this.ctx, xyAxis)\n        }\n      }, timerInterval)\n    }\n  }\n\n  selectionDrawn({ context, zoomtype }) {\n    const w = this.w\n    const me = context\n    const xyRatios = this.xyRatios\n    const toolbar = this.ctx.toolbar\n\n    if (me.startX > me.endX) {\n      let tempX = me.startX\n      me.startX = me.endX\n      me.endX = tempX\n    }\n    if (me.startY > me.endY) {\n      let tempY = me.startY\n      me.startY = me.endY\n      me.endY = tempY\n    }\n\n    let xLowestValue = undefined\n    let xHighestValue = undefined\n\n    if (!w.globals.isTimelineBar) {\n      xLowestValue = w.globals.xAxisScale.niceMin + me.startX * xyRatios.xRatio\n      xHighestValue = w.globals.xAxisScale.niceMin + me.endX * xyRatios.xRatio\n    } else {\n      xLowestValue =\n        w.globals.yAxisScale[0].niceMin + me.startX * xyRatios.invertedYRatio\n      xHighestValue =\n        w.globals.yAxisScale[0].niceMin + me.endX * xyRatios.invertedYRatio\n    }\n\n    // TODO: we will consider the 1st y axis values here for getting highest and lowest y\n    let yHighestValue = []\n    let yLowestValue = []\n\n    w.config.yaxis.forEach((yaxe, index) => {\n      yHighestValue.push(\n        w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.startY\n      )\n      yLowestValue.push(\n        w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.endY\n      )\n    })\n\n    if (\n      me.dragged &&\n      (me.dragX > 10 || me.dragY > 10) &&\n      xLowestValue !== xHighestValue\n    ) {\n      if (w.globals.zoomEnabled) {\n        let yaxis = Utils.clone(w.globals.initialConfig.yaxis)\n        let xaxis = Utils.clone(w.globals.initialConfig.xaxis)\n\n        w.globals.zoomed = true\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          xLowestValue = Math.floor(xLowestValue)\n          xHighestValue = Math.floor(xHighestValue)\n\n          if (xLowestValue < 1) {\n            xLowestValue = 1\n            xHighestValue = w.globals.dataPoints\n          }\n\n          if (xHighestValue - xLowestValue < 2) {\n            xHighestValue = xLowestValue + 1\n          }\n        }\n\n        if (zoomtype === 'xy' || zoomtype === 'x') {\n          xaxis = {\n            min: xLowestValue,\n            max: xHighestValue\n          }\n        }\n\n        if (zoomtype === 'xy' || zoomtype === 'y') {\n          yaxis.forEach((yaxe, index) => {\n            yaxis[index].min = yLowestValue[index]\n            yaxis[index].max = yHighestValue[index]\n          })\n        }\n\n        if (w.config.chart.zoom.autoScaleYaxis) {\n          const scale = new Scales(me.ctx)\n          yaxis = scale.autoScaleY(me.ctx, yaxis, {\n            xaxis\n          })\n        }\n\n        if (toolbar) {\n          let beforeZoomRange = toolbar.getBeforeZoomRange(xaxis, yaxis)\n          if (beforeZoomRange) {\n            xaxis = beforeZoomRange.xaxis ? beforeZoomRange.xaxis : xaxis\n            yaxis = beforeZoomRange.yaxis ? beforeZoomRange.yaxis : yaxis\n          }\n        }\n\n        let options = {\n          xaxis\n        }\n\n        if (!w.config.chart.group) {\n          // if chart in a group, prevent yaxis update here\n          // fix issue #650\n          options.yaxis = yaxis\n        }\n        me.ctx.updateHelpers._updateOptions(\n          options,\n          false,\n          me.w.config.chart.animations.dynamicAnimation.enabled\n        )\n\n        if (typeof w.config.chart.events.zoomed === 'function') {\n          toolbar.zoomCallback(xaxis, yaxis)\n        }\n      } else if (w.globals.selectionEnabled) {\n        let yaxis = null\n        let xaxis = null\n        xaxis = {\n          min: xLowestValue,\n          max: xHighestValue\n        }\n        if (zoomtype === 'xy' || zoomtype === 'y') {\n          yaxis = Utils.clone(w.config.yaxis)\n          yaxis.forEach((yaxe, index) => {\n            yaxis[index].min = yLowestValue[index]\n            yaxis[index].max = yHighestValue[index]\n          })\n        }\n\n        w.globals.selection = me.selection\n        if (typeof w.config.chart.events.selection === 'function') {\n          w.config.chart.events.selection(me.ctx, {\n            xaxis,\n            yaxis\n          })\n        }\n      }\n    }\n  }\n\n  panDragging({ context }) {\n    const w = this.w\n    let me = context\n\n    // check to make sure there is data to compare against\n    if (typeof w.globals.lastClientPosition.x !== 'undefined') {\n      // get the change from last position to this position\n      const deltaX = w.globals.lastClientPosition.x - me.clientX\n      const deltaY = w.globals.lastClientPosition.y - me.clientY\n\n      // check which direction had the highest amplitude and then figure out direction by checking if the value is greater or less than zero\n      if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX > 0) {\n        this.moveDirection = 'left'\n      } else if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX < 0) {\n        this.moveDirection = 'right'\n      } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY > 0) {\n        this.moveDirection = 'up'\n      } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY < 0) {\n        this.moveDirection = 'down'\n      }\n    }\n\n    // set the new last position to the current for next time (to get the position of drag)\n    w.globals.lastClientPosition = {\n      x: me.clientX,\n      y: me.clientY\n    }\n\n    let xLowestValue = w.globals.isTimelineBar ? w.globals.minY : w.globals.minX\n\n    let xHighestValue = w.globals.isTimelineBar\n      ? w.globals.maxY\n      : w.globals.maxX\n\n    // on a category, we don't pan continuosly as it causes bugs\n    if (!w.config.xaxis.convertedCatToNumeric) {\n      me.panScrolled(xLowestValue, xHighestValue)\n    }\n  }\n\n  delayedPanScrolled() {\n    const w = this.w\n\n    let newMinX = w.globals.minX\n    let newMaxX = w.globals.maxX\n    const centerX = (w.globals.maxX - w.globals.minX) / 2\n\n    if (this.moveDirection === 'left') {\n      newMinX = w.globals.minX + centerX\n      newMaxX = w.globals.maxX + centerX\n    } else if (this.moveDirection === 'right') {\n      newMinX = w.globals.minX - centerX\n      newMaxX = w.globals.maxX - centerX\n    }\n\n    newMinX = Math.floor(newMinX)\n    newMaxX = Math.floor(newMaxX)\n    this.updateScrolledChart(\n      { xaxis: { min: newMinX, max: newMaxX } },\n      newMinX,\n      newMaxX\n    )\n  }\n\n  panScrolled(xLowestValue, xHighestValue) {\n    const w = this.w\n\n    const xyRatios = this.xyRatios\n    let yaxis = Utils.clone(w.globals.initialConfig.yaxis)\n\n    let xRatio = xyRatios.xRatio\n    let minX = w.globals.minX\n    let maxX = w.globals.maxX\n    if (w.globals.isTimelineBar) {\n      xRatio = xyRatios.invertedYRatio\n      minX = w.globals.minY\n      maxX = w.globals.maxY\n    }\n\n    if (this.moveDirection === 'left') {\n      xLowestValue = minX + (w.globals.gridWidth / 15) * xRatio\n      xHighestValue = maxX + (w.globals.gridWidth / 15) * xRatio\n    } else if (this.moveDirection === 'right') {\n      xLowestValue = minX - (w.globals.gridWidth / 15) * xRatio\n      xHighestValue = maxX - (w.globals.gridWidth / 15) * xRatio\n    }\n\n    if (!w.globals.isTimelineBar) {\n      if (\n        xLowestValue < w.globals.initialMinX ||\n        xHighestValue > w.globals.initialMaxX\n      ) {\n        xLowestValue = minX\n        xHighestValue = maxX\n      }\n    }\n\n    let xaxis = {\n      min: xLowestValue,\n      max: xHighestValue\n    }\n\n    if (w.config.chart.zoom.autoScaleYaxis) {\n      const scale = new Scales(this.ctx)\n      yaxis = scale.autoScaleY(this.ctx, yaxis, {\n        xaxis\n      })\n    }\n\n    let options = {\n      xaxis: {\n        min: xLowestValue,\n        max: xHighestValue\n      }\n    }\n\n    if (!w.config.chart.group) {\n      // if chart in a group, prevent yaxis update here\n      // fix issue #650\n      options.yaxis = yaxis\n    }\n\n    this.updateScrolledChart(options, xLowestValue, xHighestValue)\n  }\n\n  updateScrolledChart(options, xLowestValue, xHighestValue) {\n    const w = this.w\n\n    this.ctx.updateHelpers._updateOptions(options, false, false)\n\n    if (typeof w.config.chart.events.scrolled === 'function') {\n      w.config.chart.events.scrolled(this.ctx, {\n        xaxis: {\n          min: xLowestValue,\n          max: xHighestValue\n        }\n      })\n    }\n  }\n}\n","import Utilities from '../../utils/Utils'\n\n/**\n * ApexCharts Tooltip.Utils Class to support Tooltip functionality.\n *\n * @module Tooltip.Utils\n **/\n\nexport default class Utils {\n  constructor(tooltipContext) {\n    this.w = tooltipContext.w\n    this.ttCtx = tooltipContext\n    this.ctx = tooltipContext.ctx\n  }\n\n  /**\n   ** When hovering over series, you need to capture which series is being hovered on.\n   ** This function will return both capturedseries index as well as inner index of that series\n   * @memberof Utils\n   * @param {object}\n   * - hoverArea = the rect on which user hovers\n   * - elGrid = dimensions of the hover rect (it can be different than hoverarea)\n   */\n  getNearestValues({ hoverArea, elGrid, clientX, clientY }) {\n    let w = this.w\n\n    const hoverWidth = w.globals.gridWidth\n    const hoverHeight = w.globals.gridHeight\n\n    let xDivisor = hoverWidth / (w.globals.dataPoints - 1)\n    let yDivisor = hoverHeight / w.globals.dataPoints\n\n    const seriesBound = elGrid.getBoundingClientRect()\n\n    const hasBars = this.hasBars()\n\n    if (\n      (w.globals.comboCharts || hasBars) &&\n      !w.config.xaxis.convertedCatToNumeric\n    ) {\n      xDivisor = hoverWidth / w.globals.dataPoints\n    }\n\n    let hoverX = clientX - seriesBound.left - w.globals.barPadForNumericAxis\n    let hoverY = clientY - seriesBound.top\n\n    const notInRect =\n      hoverX < 0 ||\n      hoverY < 0 ||\n      hoverX > w.globals.gridWidth ||\n      hoverY > w.globals.gridHeight\n\n    if (notInRect) {\n      hoverArea.classList.remove('hovering-zoom')\n      hoverArea.classList.remove('hovering-pan')\n    } else {\n      if (w.globals.zoomEnabled) {\n        hoverArea.classList.remove('hovering-pan')\n        hoverArea.classList.add('hovering-zoom')\n      } else if (w.globals.panEnabled) {\n        hoverArea.classList.remove('hovering-zoom')\n        hoverArea.classList.add('hovering-pan')\n      }\n    }\n\n    let j = Math.round(hoverX / xDivisor)\n    let jHorz = Math.floor(hoverY / yDivisor)\n\n    if (hasBars && !w.config.xaxis.convertedCatToNumeric) {\n      j = Math.ceil(hoverX / xDivisor)\n      j = j - 1\n    }\n\n    let capturedSeries = null\n    let closest = null\n    let seriesXValArr = []\n    let seriesYValArr = []\n\n    for (let s = 0; s < w.globals.seriesXvalues.length; s++) {\n      seriesXValArr.push(\n        [w.globals.seriesXvalues[s][0] - 0.000001].concat(\n          w.globals.seriesXvalues[s]\n        )\n      )\n    }\n\n    seriesXValArr = seriesXValArr.map((seriesXVal) => {\n      return seriesXVal.filter((s) => s)\n    })\n\n    seriesYValArr = w.globals.seriesYvalues.map((seriesYVal) => {\n      return seriesYVal.filter((s) => Utilities.isNumber(s))\n    })\n\n    // if X axis type is not category and tooltip is not shared, then we need to find the cursor position and get the nearest value\n    if (w.globals.isXNumeric) {\n      closest = this.closestInMultiArray(\n        hoverX,\n        hoverY,\n        seriesXValArr,\n        seriesYValArr\n      )\n      capturedSeries = closest.index\n      j = closest.j\n\n      if (capturedSeries !== null) {\n        // initial push, it should be a little smaller than the 1st val\n        seriesXValArr = w.globals.seriesXvalues[capturedSeries]\n\n        closest = this.closestInArray(hoverX, seriesXValArr)\n\n        j = closest.index\n      }\n    }\n\n    w.globals.capturedSeriesIndex =\n      capturedSeries === null ? -1 : capturedSeries\n\n    if (!j || j < 1) j = 0\n    w.globals.capturedDataPointIndex = j\n\n    return {\n      capturedSeries,\n      j: w.globals.isBarHorizontal ? jHorz : j,\n      hoverX,\n      hoverY\n    }\n  }\n\n  closestInMultiArray(hoverX, hoverY, Xarrays, Yarrays) {\n    let w = this.w\n    let activeIndex = 0\n    let currIndex = null\n    let j = -1\n\n    if (w.globals.series.length > 1) {\n      activeIndex = this.getFirstActiveXArray(Xarrays)\n    } else {\n      currIndex = 0\n    }\n\n    let currY = Yarrays[activeIndex][0]\n    let currX = Xarrays[activeIndex][0]\n\n    let diffX = Math.abs(hoverX - currX)\n    let diffY = Math.abs(hoverY - currY)\n    let diff = diffY + diffX\n\n    Yarrays.map((arrY, arrIndex) => {\n      arrY.map((y, innerKey) => {\n        let newdiffY = Math.abs(hoverY - Yarrays[arrIndex][innerKey])\n        let newdiffX = Math.abs(hoverX - Xarrays[arrIndex][innerKey])\n        let newdiff = newdiffX + newdiffY\n\n        if (newdiff < diff) {\n          diff = newdiff\n          diffX = newdiffX\n          diffY = newdiffY\n          currIndex = arrIndex\n          j = innerKey\n        }\n      })\n    })\n\n    return {\n      index: currIndex,\n      j\n    }\n  }\n\n  getFirstActiveXArray(Xarrays) {\n    let activeIndex = 0\n\n    let firstActiveSeriesIndex = Xarrays.map((xarr, index) => {\n      return xarr.length > 0 ? index : -1\n    })\n\n    for (let a = 0; a < firstActiveSeriesIndex.length; a++) {\n      if (firstActiveSeriesIndex[a] !== -1) {\n        activeIndex = firstActiveSeriesIndex[a]\n        break\n      }\n    }\n\n    return activeIndex\n  }\n\n  closestInArray(val, arr) {\n    let curr = arr[0]\n    let currIndex = null\n    let diff = Math.abs(val - curr)\n\n    for (let i = 0; i < arr.length; i++) {\n      let newdiff = Math.abs(val - arr[i])\n      if (newdiff < diff) {\n        diff = newdiff\n        currIndex = i\n      }\n    }\n\n    return {\n      index: currIndex\n    }\n  }\n\n  /**\n   * When there are multiple series, it is possible to have different x values for each series.\n   * But it may be possible in those multiple series, that there is same x value for 2 or more\n   * series.\n   * @memberof Utils\n   * @param {int}\n   * - j = is the inner index of series -> (series[i][j])\n   * @return {bool}\n   */\n  isXoverlap(j) {\n    let w = this.w\n    let xSameForAllSeriesJArr = []\n\n    const seriesX = w.globals.seriesX.filter((s) => typeof s[0] !== 'undefined')\n\n    if (seriesX.length > 0) {\n      for (let i = 0; i < seriesX.length - 1; i++) {\n        if (\n          typeof seriesX[i][j] !== 'undefined' &&\n          typeof seriesX[i + 1][j] !== 'undefined'\n        ) {\n          if (seriesX[i][j] !== seriesX[i + 1][j]) {\n            xSameForAllSeriesJArr.push('unEqual')\n          }\n        }\n      }\n    }\n\n    if (xSameForAllSeriesJArr.length === 0) {\n      return true\n    }\n\n    return false\n  }\n\n  isInitialSeriesSameLen() {\n    let sameLen = true\n\n    const initialSeries = this.w.globals.initialSeries\n\n    for (let i = 0; i < initialSeries.length - 1; i++) {\n      if (initialSeries[i].data.length !== initialSeries[i + 1].data.length) {\n        sameLen = false\n        break\n      }\n    }\n\n    return sameLen\n  }\n\n  getBarsHeight(allbars) {\n    let bars = [...allbars]\n    const totalHeight = bars.reduce((acc, bar) => acc + bar.getBBox().height, 0)\n\n    return totalHeight\n  }\n\n  getElMarkers() {\n    return this.w.globals.dom.baseEl.querySelectorAll(\n      ' .apexcharts-series-markers'\n    )\n  }\n\n  getAllMarkers() {\n    // first get all marker parents. This parent class contains series-index\n    // which helps to sort the markers as they are dynamic\n    let markersWraps = this.w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-series-markers-wrap'\n    )\n\n    markersWraps = [...markersWraps]\n    markersWraps.sort((a, b) => {\n      return Number(b.getAttribute('data:realIndex')) <\n        Number(a.getAttribute('data:realIndex'))\n        ? 0\n        : -1\n    })\n\n    let markers = []\n    markersWraps.forEach((m) => {\n      markers.push(m.querySelector('.apexcharts-marker'))\n    })\n\n    return markers\n  }\n\n  hasMarkers() {\n    const markers = this.getElMarkers()\n    return markers.length > 0\n  }\n\n  getElBars() {\n    return this.w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series'\n    )\n  }\n\n  hasBars() {\n    const bars = this.getElBars()\n    return bars.length > 0\n  }\n\n  getHoverMarkerSize(index) {\n    const w = this.w\n    let hoverSize = w.config.markers.hover.size\n\n    if (hoverSize === undefined) {\n      hoverSize =\n        w.globals.markers.size[index] + w.config.markers.hover.sizeOffset\n    }\n    return hoverSize\n  }\n\n  toggleAllTooltipSeriesGroups(state) {\n    let w = this.w\n    const ttCtx = this.ttCtx\n\n    if (ttCtx.allTooltipSeriesGroups.length === 0) {\n      ttCtx.allTooltipSeriesGroups = w.globals.dom.baseEl.querySelectorAll(\n        '.apexcharts-tooltip-series-group'\n      )\n    }\n\n    let allTooltipSeriesGroups = ttCtx.allTooltipSeriesGroups\n    for (let i = 0; i < allTooltipSeriesGroups.length; i++) {\n      if (state === 'enable') {\n        allTooltipSeriesGroups[i].classList.add('apexcharts-active')\n        allTooltipSeriesGroups[i].style.display = w.config.tooltip.items.display\n      } else {\n        allTooltipSeriesGroups[i].classList.remove('apexcharts-active')\n        allTooltipSeriesGroups[i].style.display = 'none'\n      }\n    }\n  }\n}\n","import Formatters from '../Formatters'\nimport DateTime from '../../utils/DateTime'\nimport Utils from './Utils'\nimport Utilities from '../../utils/Utils'\n\n/**\n * ApexCharts Tooltip.Labels Class to draw texts on the tooltip.\n *\n * @module Tooltip.Labels\n **/\n\nexport default class Labels {\n  constructor(tooltipContext) {\n    this.w = tooltipContext.w\n    this.ctx = tooltipContext.ctx\n    this.ttCtx = tooltipContext\n    this.tooltipUtil = new Utils(tooltipContext)\n  }\n\n  drawSeriesTexts({ shared = true, ttItems, i = 0, j = null, y1, y2, e }) {\n    let w = this.w\n\n    if (w.config.tooltip.custom !== undefined) {\n      this.handleCustomTooltip({ i, j, y1, y2, w })\n    } else {\n      this.toggleActiveInactiveSeries(shared)\n    }\n\n    let values = this.getValuesToPrint({\n      i,\n      j\n    })\n\n    this.printLabels({\n      i,\n      j,\n      values,\n      ttItems,\n      shared,\n      e\n    })\n\n    // Re-calculate tooltip dimensions now that we have drawn the text\n    const tooltipEl = this.ttCtx.getElTooltip()\n\n    this.ttCtx.tooltipRect.ttWidth = tooltipEl.getBoundingClientRect().width\n    this.ttCtx.tooltipRect.ttHeight = tooltipEl.getBoundingClientRect().height\n  }\n\n  printLabels({ i, j, values, ttItems, shared, e }) {\n    const w = this.w\n    let val\n    let goalVals = []\n    const hasGoalValues = (gi) => {\n      return (\n        w.globals.seriesGoals[gi] &&\n        w.globals.seriesGoals[gi][j] &&\n        Array.isArray(w.globals.seriesGoals[gi][j])\n      )\n    }\n\n    const { xVal, zVal, xAxisTTVal } = values\n\n    let seriesName = ''\n\n    let pColor = w.globals.colors[i]\n    if (j !== null && w.config.plotOptions.bar.distributed) {\n      pColor = w.globals.colors[j]\n    }\n\n    for (\n      let t = 0, inverset = w.globals.series.length - 1;\n      t < w.globals.series.length;\n      t++, inverset--\n    ) {\n      let f = this.getFormatters(i)\n      seriesName = this.getSeriesName({\n        fn: f.yLbTitleFormatter,\n        index: i,\n        seriesIndex: i,\n        j\n      })\n\n      if (w.config.chart.type === 'treemap') {\n        seriesName = f.yLbTitleFormatter(String(w.config.series[i].data[j].x), {\n          series: w.globals.series,\n          seriesIndex: i,\n          dataPointIndex: j,\n          w\n        })\n      }\n\n      const tIndex = w.config.tooltip.inverseOrder ? inverset : t\n\n      if (w.globals.axisCharts) {\n        const getValBySeriesIndex = (index) => {\n          return f.yLbFormatter(w.globals.series[index][j], {\n            series: w.globals.series,\n            seriesIndex: index,\n            dataPointIndex: j,\n            w\n          })\n        }\n        if (shared) {\n          f = this.getFormatters(tIndex)\n\n          seriesName = this.getSeriesName({\n            fn: f.yLbTitleFormatter,\n            index: tIndex,\n            seriesIndex: i,\n            j\n          })\n          pColor = w.globals.colors[tIndex]\n\n          val = getValBySeriesIndex(tIndex)\n          if (hasGoalValues(tIndex)) {\n            goalVals = w.globals.seriesGoals[tIndex][j].map((goal) => {\n              return {\n                attrs: goal,\n                val: f.yLbFormatter(goal.value, {\n                  seriesIndex: tIndex,\n                  dataPointIndex: j,\n                  w\n                })\n              }\n            })\n          }\n        } else {\n          if (e && e.target && e.target.getAttribute('fill')) {\n            pColor = e.target.getAttribute('fill')\n          }\n          val = getValBySeriesIndex(i)\n          if (hasGoalValues(i) && Array.isArray(w.globals.seriesGoals[i][j])) {\n            goalVals = w.globals.seriesGoals[i][j].map((goal) => {\n              return {\n                attrs: goal,\n                val: f.yLbFormatter(goal.value, {\n                  seriesIndex: i,\n                  dataPointIndex: j,\n                  w\n                })\n              }\n            })\n          }\n        }\n      }\n\n      // for pie / donuts\n      if (j === null) {\n        val = f.yLbFormatter(w.globals.series[i], {\n          ...w,\n          seriesIndex: i,\n          dataPointIndex: i\n        })\n      }\n\n      this.DOMHandling({\n        i,\n        t: tIndex,\n        j,\n        ttItems,\n        values: {\n          val,\n          goalVals,\n          xVal,\n          xAxisTTVal,\n          zVal\n        },\n        seriesName,\n        shared,\n        pColor\n      })\n    }\n  }\n\n  getFormatters(i) {\n    const w = this.w\n\n    let yLbFormatter = w.globals.yLabelFormatters[i]\n    let yLbTitleFormatter\n\n    if (w.globals.ttVal !== undefined) {\n      if (Array.isArray(w.globals.ttVal)) {\n        yLbFormatter = w.globals.ttVal[i] && w.globals.ttVal[i].formatter\n        yLbTitleFormatter =\n          w.globals.ttVal[i] &&\n          w.globals.ttVal[i].title &&\n          w.globals.ttVal[i].title.formatter\n      } else {\n        yLbFormatter = w.globals.ttVal.formatter\n        if (typeof w.globals.ttVal.title.formatter === 'function') {\n          yLbTitleFormatter = w.globals.ttVal.title.formatter\n        }\n      }\n    } else {\n      yLbTitleFormatter = w.config.tooltip.y.title.formatter\n    }\n\n    if (typeof yLbFormatter !== 'function') {\n      if (w.globals.yLabelFormatters[0]) {\n        yLbFormatter = w.globals.yLabelFormatters[0]\n      } else {\n        yLbFormatter = function(label) {\n          return label\n        }\n      }\n    }\n\n    if (typeof yLbTitleFormatter !== 'function') {\n      yLbTitleFormatter = function(label) {\n        return label\n      }\n    }\n\n    return {\n      yLbFormatter,\n      yLbTitleFormatter\n    }\n  }\n\n  getSeriesName({ fn, index, seriesIndex, j }) {\n    const w = this.w\n    return fn(String(w.globals.seriesNames[index]), {\n      series: w.globals.series,\n      seriesIndex,\n      dataPointIndex: j,\n      w\n    })\n  }\n\n  DOMHandling({ i, t, j, ttItems, values, seriesName, shared, pColor }) {\n    const w = this.w\n    const ttCtx = this.ttCtx\n\n    Object.keys(values).forEach((key) => {\n      if (typeof values[key] === 'string')\n        values[key] = Utilities.sanitizeDom(values[key])\n    })\n\n    const { val, goalVals, xVal, xAxisTTVal, zVal } = values\n\n    let ttItemsChildren = null\n    ttItemsChildren = ttItems[t].children\n\n    if (w.config.tooltip.fillSeriesColor) {\n      //  elTooltip.style.backgroundColor = pColor\n      ttItems[t].style.backgroundColor = pColor\n      ttItemsChildren[0].style.display = 'none'\n    }\n\n    if (ttCtx.showTooltipTitle) {\n      if (ttCtx.tooltipTitle === null) {\n        // get it once if null, and store it in class property\n        ttCtx.tooltipTitle = w.globals.dom.baseEl.querySelector(\n          '.apexcharts-tooltip-title'\n        )\n      }\n      ttCtx.tooltipTitle.innerHTML = xVal\n    }\n\n    // if xaxis tooltip is constructed, we need to replace the innerHTML\n    if (ttCtx.blxaxisTooltip) {\n      ttCtx.xaxisTooltipText.innerHTML = xAxisTTVal !== '' ? xAxisTTVal : xVal\n    }\n\n    const ttYLabel = ttItems[t].querySelector(\n      '.apexcharts-tooltip-text-y-label'\n    )\n    if (ttYLabel) {\n      ttYLabel.innerHTML = seriesName ? Utilities.sanitizeDom(seriesName) : ''\n    }\n    const ttYVal = ttItems[t].querySelector('.apexcharts-tooltip-text-y-value')\n    if (ttYVal) {\n      ttYVal.innerHTML = typeof val !== 'undefined' ? val : ''\n    }\n\n    if (\n      ttItemsChildren[0] &&\n      ttItemsChildren[0].classList.contains('apexcharts-tooltip-marker')\n    ) {\n      if (\n        w.config.tooltip.marker.fillColors &&\n        Array.isArray(w.config.tooltip.marker.fillColors)\n      ) {\n        pColor = w.config.tooltip.marker.fillColors[t]\n      }\n\n      ttItemsChildren[0].style.backgroundColor = pColor\n    }\n\n    if (!w.config.tooltip.marker.show) {\n      ttItemsChildren[0].style.display = 'none'\n    }\n\n    const ttGLabel = ttItems[t].querySelector(\n      '.apexcharts-tooltip-text-goals-label'\n    )\n    const ttGVal = ttItems[t].querySelector(\n      '.apexcharts-tooltip-text-goals-value'\n    )\n\n    if (goalVals.length && w.globals.seriesGoals[t]) {\n      const createGoalsHtml = () => {\n        let gLabels = '<div >'\n        let gVals = '<div>'\n        goalVals.forEach((goal, gi) => {\n          gLabels += ` <div style=\"display: flex\"><span class=\"apexcharts-tooltip-marker\" style=\"background-color: ${goal.attrs.strokeColor}; height: 3px; border-radius: 0; top: 5px;\"></span> ${goal.attrs.name}</div>`\n          gVals += `<div>${goal.val}</div>`\n        })\n        ttGLabel.innerHTML = gLabels + `</div>`\n        ttGVal.innerHTML = gVals + `</div>`\n      }\n      if (shared) {\n        if (\n          w.globals.seriesGoals[t][j] &&\n          Array.isArray(w.globals.seriesGoals[t][j])\n        ) {\n          createGoalsHtml()\n        } else {\n          ttGLabel.innerHTML = ''\n          ttGVal.innerHTML = ''\n        }\n      } else {\n        createGoalsHtml()\n      }\n    } else {\n      ttGLabel.innerHTML = ''\n      ttGVal.innerHTML = ''\n    }\n\n    if (zVal !== null) {\n      const ttZLabel = ttItems[t].querySelector(\n        '.apexcharts-tooltip-text-z-label'\n      )\n      ttZLabel.innerHTML = w.config.tooltip.z.title\n      const ttZVal = ttItems[t].querySelector(\n        '.apexcharts-tooltip-text-z-value'\n      )\n      ttZVal.innerHTML = typeof zVal !== 'undefined' ? zVal : ''\n    }\n\n    if (shared && ttItemsChildren[0]) {\n      // hide when no Val or series collapsed\n      if (\n        typeof val === 'undefined' ||\n        val === null ||\n        w.globals.collapsedSeriesIndices.indexOf(t) > -1\n      ) {\n        ttItemsChildren[0].parentNode.style.display = 'none'\n      } else {\n        ttItemsChildren[0].parentNode.style.display =\n          w.config.tooltip.items.display\n      }\n\n      // TODO: issue #1240 needs to be looked at again. commenting it because this also hides single series values with 0 in it (shared tooltip)\n\n      // if (w.globals.stackedSeriesTotals[j] === 0) {\n      //   // shared tooltip and all values are null, so we need to hide the x value too\n      //   let allYZeroForJ = false\n      //   for (let si = 1; si < w.globals.seriesYvalues.length; si++) {\n      //     if (\n      //       w.globals.seriesYvalues[si][j] ===\n      //       w.globals.seriesYvalues[si - 1][j]\n      //     ) {\n      //       allYZeroForJ = true\n      //     }\n      //   }\n\n      //   if (allYZeroForJ) {\n      //     ttCtx.tooltipTitle.style.display = 'none'\n      //   } else {\n      //     ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n      //   }\n      // } else {\n      //   ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n      // }\n    }\n  }\n\n  toggleActiveInactiveSeries(shared) {\n    const w = this.w\n    if (shared) {\n      // make all tooltips active\n      this.tooltipUtil.toggleAllTooltipSeriesGroups('enable')\n    } else {\n      // disable all tooltip text groups\n      this.tooltipUtil.toggleAllTooltipSeriesGroups('disable')\n\n      // enable the first tooltip text group\n      let firstTooltipSeriesGroup = w.globals.dom.baseEl.querySelector(\n        '.apexcharts-tooltip-series-group'\n      )\n\n      if (firstTooltipSeriesGroup) {\n        firstTooltipSeriesGroup.classList.add('apexcharts-active')\n        firstTooltipSeriesGroup.style.display = w.config.tooltip.items.display\n      }\n    }\n  }\n\n  getValuesToPrint({ i, j }) {\n    const w = this.w\n    const filteredSeriesX = this.ctx.series.filteredSeriesX()\n\n    let xVal = ''\n    let xAxisTTVal = ''\n    let zVal = null\n    let val = null\n\n    const customFormatterOpts = {\n      series: w.globals.series,\n      seriesIndex: i,\n      dataPointIndex: j,\n      w\n    }\n\n    let zFormatter = w.globals.ttZFormatter\n\n    if (j === null) {\n      val = w.globals.series[i]\n    } else {\n      if (w.globals.isXNumeric && w.config.chart.type !== 'treemap') {\n        xVal = filteredSeriesX[i][j]\n        if (filteredSeriesX[i].length === 0) {\n          // a series (possibly the first one) might be collapsed, so get the next active index\n          const firstActiveSeriesIndex = this.tooltipUtil.getFirstActiveXArray(\n            filteredSeriesX\n          )\n          xVal = filteredSeriesX[firstActiveSeriesIndex][j]\n        }\n      } else {\n        xVal =\n          typeof w.globals.labels[j] !== 'undefined' ? w.globals.labels[j] : ''\n      }\n    }\n\n    let bufferXVal = xVal\n\n    if (w.globals.isXNumeric && w.config.xaxis.type === 'datetime') {\n      let xFormat = new Formatters(this.ctx)\n      xVal = xFormat.xLabelFormat(\n        w.globals.ttKeyFormatter,\n        bufferXVal,\n        bufferXVal,\n        {\n          i: undefined,\n          dateFormatter: new DateTime(this.ctx).formatDate,\n          w: this.w\n        }\n      )\n    } else {\n      if (w.globals.isBarHorizontal) {\n        xVal = w.globals.yLabelFormatters[0](bufferXVal, customFormatterOpts)\n      } else {\n        xVal = w.globals.xLabelFormatter(bufferXVal, customFormatterOpts)\n      }\n    }\n\n    // override default x-axis formatter with tooltip formatter\n    if (w.config.tooltip.x.formatter !== undefined) {\n      xVal = w.globals.ttKeyFormatter(bufferXVal, customFormatterOpts)\n    }\n\n    if (w.globals.seriesZ.length > 0 && w.globals.seriesZ[i].length > 0) {\n      zVal = zFormatter(w.globals.seriesZ[i][j], w)\n    }\n\n    if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n      xAxisTTVal = w.globals.xaxisTooltipFormatter(\n        bufferXVal,\n        customFormatterOpts\n      )\n    } else {\n      xAxisTTVal = xVal\n    }\n\n    return {\n      val: Array.isArray(val) ? val.join(' ') : val,\n      xVal: Array.isArray(xVal) ? xVal.join(' ') : xVal,\n      xAxisTTVal: Array.isArray(xAxisTTVal) ? xAxisTTVal.join(' ') : xAxisTTVal,\n      zVal\n    }\n  }\n\n  handleCustomTooltip({ i, j, y1, y2, w }) {\n    const tooltipEl = this.ttCtx.getElTooltip()\n    let fn = w.config.tooltip.custom\n\n    if (Array.isArray(fn) && fn[i]) {\n      fn = fn[i]\n    }\n\n    // override everything with a custom html tooltip and replace it\n    tooltipEl.innerHTML = fn({\n      ctx: this.ctx,\n      series: w.globals.series,\n      seriesIndex: i,\n      dataPointIndex: j,\n      y1,\n      y2,\n      w\n    })\n  }\n}\n","import Graphics from '../Graphics'\nimport Series from '../Series'\n\n/**\n * ApexCharts Tooltip.Position Class to move the tooltip based on x and y position.\n *\n * @module Tooltip.Position\n **/\n\nexport default class Position {\n  constructor(tooltipContext) {\n    this.ttCtx = tooltipContext\n    this.ctx = tooltipContext.ctx\n    this.w = tooltipContext.w\n  }\n\n  /**\n   * This will move the crosshair (the vertical/horz line that moves along with mouse)\n   * Along with this, this function also calls the xaxisMove function\n   * @memberof Position\n   * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n   */\n  moveXCrosshairs(cx, j = null) {\n    const ttCtx = this.ttCtx\n    let w = this.w\n\n    const xcrosshairs = ttCtx.getElXCrosshairs()\n\n    let x = cx - ttCtx.xcrosshairsWidth / 2\n\n    let tickAmount = w.globals.labels.slice().length\n    if (j !== null) {\n      x = (w.globals.gridWidth / tickAmount) * j\n    }\n\n    if (xcrosshairs !== null) {\n      xcrosshairs.setAttribute('x', x)\n      xcrosshairs.setAttribute('x1', x)\n      xcrosshairs.setAttribute('x2', x)\n      xcrosshairs.setAttribute('y2', w.globals.gridHeight)\n      xcrosshairs.classList.add('apexcharts-active')\n    }\n\n    if (x < 0) {\n      x = 0\n    }\n\n    if (x > w.globals.gridWidth) {\n      x = w.globals.gridWidth\n    }\n\n    if (ttCtx.blxaxisTooltip) {\n      let tx = x\n      if (\n        w.config.xaxis.crosshairs.width === 'tickWidth' ||\n        w.config.xaxis.crosshairs.width === 'barWidth'\n      ) {\n        tx = x + ttCtx.xcrosshairsWidth / 2\n      }\n      this.moveXAxisTooltip(tx)\n    }\n  }\n\n  /**\n   * This will move the crosshair (the vertical/horz line that moves along with mouse)\n   * Along with this, this function also calls the xaxisMove function\n   * @memberof Position\n   * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n   */\n  moveYCrosshairs(cy) {\n    const ttCtx = this.ttCtx\n\n    if (ttCtx.ycrosshairs !== null) {\n      Graphics.setAttrs(ttCtx.ycrosshairs, {\n        y1: cy,\n        y2: cy\n      })\n    }\n    if (ttCtx.ycrosshairsHidden !== null) {\n      Graphics.setAttrs(ttCtx.ycrosshairsHidden, {\n        y1: cy,\n        y2: cy\n      })\n    }\n  }\n\n  /**\n   ** AxisTooltip is the small rectangle which appears on x axis with x value, when user moves\n   * @memberof Position\n   * @param {int} - cx = point's x position, wherever point's x is, you need to move\n   */\n  moveXAxisTooltip(cx) {\n    let w = this.w\n    const ttCtx = this.ttCtx\n\n    if (ttCtx.xaxisTooltip !== null) {\n      ttCtx.xaxisTooltip.classList.add('apexcharts-active')\n\n      let cy =\n        ttCtx.xaxisOffY +\n        w.config.xaxis.tooltip.offsetY +\n        w.globals.translateY +\n        1 +\n        w.config.xaxis.offsetY\n\n      let xaxisTTText = ttCtx.xaxisTooltip.getBoundingClientRect()\n      let xaxisTTTextWidth = xaxisTTText.width\n\n      cx = cx - xaxisTTTextWidth / 2\n\n      if (!isNaN(cx)) {\n        cx = cx + w.globals.translateX\n\n        let textRect = 0\n        const graphics = new Graphics(this.ctx)\n        textRect = graphics.getTextRects(ttCtx.xaxisTooltipText.innerHTML)\n\n        ttCtx.xaxisTooltipText.style.minWidth = textRect.width + 'px'\n        ttCtx.xaxisTooltip.style.left = cx + 'px'\n        ttCtx.xaxisTooltip.style.top = cy + 'px'\n      }\n    }\n  }\n\n  moveYAxisTooltip(index) {\n    const w = this.w\n    const ttCtx = this.ttCtx\n\n    if (ttCtx.yaxisTTEls === null) {\n      ttCtx.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll(\n        '.apexcharts-yaxistooltip'\n      )\n    }\n\n    const ycrosshairsHiddenRectY1 = parseInt(\n      ttCtx.ycrosshairsHidden.getAttribute('y1'),\n      10\n    )\n    let cy = w.globals.translateY + ycrosshairsHiddenRectY1\n\n    const yAxisTTRect = ttCtx.yaxisTTEls[index].getBoundingClientRect()\n    const yAxisTTHeight = yAxisTTRect.height\n    let cx = w.globals.translateYAxisX[index] - 2\n\n    if (w.config.yaxis[index].opposite) {\n      cx = cx - 26\n    }\n\n    cy = cy - yAxisTTHeight / 2\n\n    if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n      ttCtx.yaxisTTEls[index].classList.add('apexcharts-active')\n      ttCtx.yaxisTTEls[index].style.top = cy + 'px'\n      ttCtx.yaxisTTEls[index].style.left =\n        cx + w.config.yaxis[index].tooltip.offsetX + 'px'\n    } else {\n      ttCtx.yaxisTTEls[index].classList.remove('apexcharts-active')\n    }\n  }\n\n  /**\n   ** moves the whole tooltip by changing x, y attrs\n   * @memberof Position\n   * @param {int} - cx = point's x position, wherever point's x is, you need to move tooltip\n   * @param {int} - cy = point's y position, wherever point's y is, you need to move tooltip\n   * @param {int} - r = point's radius\n   */\n  moveTooltip(cx, cy, r = null) {\n    let w = this.w\n\n    let ttCtx = this.ttCtx\n    const tooltipEl = ttCtx.getElTooltip()\n    let tooltipRect = ttCtx.tooltipRect\n\n    let pointR = r !== null ? parseFloat(r) : 1\n\n    let x = parseFloat(cx) + pointR + 5\n    let y = parseFloat(cy) + pointR / 2 // - tooltipRect.ttHeight / 2\n\n    if (x > w.globals.gridWidth / 2) {\n      x = x - tooltipRect.ttWidth - pointR - 15\n    }\n\n    if (x > w.globals.gridWidth - tooltipRect.ttWidth - 10) {\n      x = w.globals.gridWidth - tooltipRect.ttWidth\n    }\n\n    if (x < -20) {\n      x = -20\n    }\n\n    if (w.config.tooltip.followCursor) {\n      const elGrid = ttCtx.getElGrid()\n      const seriesBound = elGrid.getBoundingClientRect()\n      y =\n        ttCtx.e.clientY +\n        w.globals.translateY -\n        seriesBound.top -\n        tooltipRect.ttHeight / 2\n    } else {\n      if (w.globals.isBarHorizontal) {\n        // non follow shared tooltip in a horizontal bar chart\n        y = y - tooltipRect.ttHeight\n      } else {\n        if (tooltipRect.ttHeight / 2 + y > w.globals.gridHeight) {\n          y = w.globals.gridHeight - tooltipRect.ttHeight + w.globals.translateY\n        }\n\n        if (y < 0) {\n          y = 0\n        }\n      }\n    }\n\n    if (!isNaN(x)) {\n      x = x + w.globals.translateX\n\n      tooltipEl.style.left = x + 'px'\n      tooltipEl.style.top = y + 'px'\n    }\n  }\n\n  moveMarkers(i, j) {\n    let w = this.w\n    let ttCtx = this.ttCtx\n\n    if (w.globals.markers.size[i] > 0) {\n      let allPoints = w.globals.dom.baseEl.querySelectorAll(\n        ` .apexcharts-series[data\\\\:realIndex='${i}'] .apexcharts-marker`\n      )\n      for (let p = 0; p < allPoints.length; p++) {\n        if (parseInt(allPoints[p].getAttribute('rel'), 10) === j) {\n          ttCtx.marker.resetPointsSize()\n          ttCtx.marker.enlargeCurrentPoint(j, allPoints[p])\n        }\n      }\n    } else {\n      ttCtx.marker.resetPointsSize()\n      this.moveDynamicPointOnHover(j, i)\n    }\n  }\n\n  // This function is used when you need to show markers/points only on hover -\n  // DIFFERENT X VALUES in multiple series\n  moveDynamicPointOnHover(j, capturedSeries) {\n    let w = this.w\n    let ttCtx = this.ttCtx\n    let cx = 0\n    let cy = 0\n\n    let pointsArr = w.globals.pointsArray\n\n    let hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(capturedSeries)\n\n    const serType = w.config.series[capturedSeries].type\n    if (\n      serType &&\n      (serType === 'column' ||\n        serType === 'candlestick' ||\n        serType === 'boxPlot')\n    ) {\n      // fix error mentioned in #811\n      return\n    }\n\n    cx = pointsArr[capturedSeries][j][0]\n    cy = pointsArr[capturedSeries][j][1] ? pointsArr[capturedSeries][j][1] : 0\n\n    let point = w.globals.dom.baseEl.querySelector(\n      `.apexcharts-series[data\\\\:realIndex='${capturedSeries}'] .apexcharts-series-markers circle`\n    )\n\n    if (point && cy < w.globals.gridHeight && cy > 0) {\n      point.setAttribute('r', hoverSize)\n\n      point.setAttribute('cx', cx)\n      point.setAttribute('cy', cy)\n    }\n\n    // point.style.opacity = w.config.markers.hover.opacity\n\n    this.moveXCrosshairs(cx)\n\n    if (!ttCtx.fixedTooltip) {\n      this.moveTooltip(cx, cy, hoverSize)\n    }\n  }\n\n  // This function is used when you need to show markers/points only on hover -\n  // SAME X VALUES in multiple series\n  moveDynamicPointsOnHover(j) {\n    const ttCtx = this.ttCtx\n    let w = ttCtx.w\n    let cx = 0\n    let cy = 0\n    let activeSeries = 0\n\n    let pointsArr = w.globals.pointsArray\n\n    let series = new Series(this.ctx)\n    activeSeries = series.getActiveConfigSeriesIndex(true)\n\n    let hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(activeSeries)\n\n    if (pointsArr[activeSeries]) {\n      cx = pointsArr[activeSeries][j][0]\n      cy = pointsArr[activeSeries][j][1]\n    }\n\n    let points = ttCtx.tooltipUtil.getAllMarkers()\n\n    if (points !== null) {\n      for (let p = 0; p < w.globals.series.length; p++) {\n        let pointArr = pointsArr[p]\n\n        if (w.globals.comboCharts) {\n          // in a combo chart, if column charts are present, markers will not match with the number of series, hence this patch to push a null value in points array\n          if (typeof pointArr === 'undefined') {\n            // nodelist to array\n            points.splice(p, 0, null)\n          }\n        }\n        if (pointArr && pointArr.length) {\n          let pcy = pointsArr[p][j][1]\n          points[p].setAttribute('cx', cx)\n\n          if (\n            pcy !== null &&\n            !isNaN(pcy) &&\n            pcy < w.globals.gridHeight &&\n            pcy > 0\n          ) {\n            points[p] && points[p].setAttribute('r', hoverSize)\n            points[p] && points[p].setAttribute('cy', pcy)\n          } else {\n            points[p] && points[p].setAttribute('r', 0)\n          }\n        }\n      }\n    }\n\n    this.moveXCrosshairs(cx)\n\n    if (!ttCtx.fixedTooltip) {\n      let tcy = cy || w.globals.gridHeight\n      this.moveTooltip(cx, tcy, hoverSize)\n    }\n  }\n\n  moveStickyTooltipOverBars(j) {\n    const w = this.w\n    const ttCtx = this.ttCtx\n\n    let barLen = w.globals.columnSeries\n      ? w.globals.columnSeries.length\n      : w.globals.series.length\n\n    let i =\n      barLen >= 2 && barLen % 2 === 0\n        ? Math.floor(barLen / 2)\n        : Math.floor(barLen / 2) + 1\n\n    if (w.globals.isBarHorizontal) {\n      let series = new Series(this.ctx)\n      i = series.getActiveConfigSeriesIndex(false, 'desc') + 1\n    }\n    let jBar = w.globals.dom.baseEl.querySelector(\n      `.apexcharts-bar-series .apexcharts-series[rel='${i}'] path[j='${j}'], .apexcharts-candlestick-series .apexcharts-series[rel='${i}'] path[j='${j}'], .apexcharts-boxPlot-series .apexcharts-series[rel='${i}'] path[j='${j}'], .apexcharts-rangebar-series .apexcharts-series[rel='${i}'] path[j='${j}']`\n    )\n\n    let bcx = jBar ? parseFloat(jBar.getAttribute('cx')) : 0\n    let bcy = jBar ? parseFloat(jBar.getAttribute('cy')) : 0\n    let bw = jBar ? parseFloat(jBar.getAttribute('barWidth')) : 0\n    let bh = jBar ? parseFloat(jBar.getAttribute('barHeight')) : 0\n\n    const elGrid = ttCtx.getElGrid()\n    let seriesBound = elGrid.getBoundingClientRect()\n\n    if (w.globals.isXNumeric) {\n      bcx = bcx - (barLen % 2 !== 0 ? bw / 2 : 0)\n\n      if (\n        jBar && // fixes apexcharts.js#2354\n        (jBar.classList.contains('apexcharts-candlestick-area') ||\n          jBar.classList.contains('apexcharts-boxPlot-area')) &&\n        w.globals.comboCharts\n      ) {\n        bcx = bcx - bw / 2\n      }\n    } else {\n      if (!w.globals.isBarHorizontal) {\n        bcx =\n          ttCtx.xAxisTicksPositions[j - 1] + ttCtx.dataPointsDividedWidth / 2\n        if (isNaN(bcx)) {\n          bcx = ttCtx.xAxisTicksPositions[j] - ttCtx.dataPointsDividedWidth / 2\n        }\n      }\n    }\n\n    if (!w.globals.isBarHorizontal) {\n      bcy = ttCtx.e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2\n    } else {\n      bcy = bcy + bh / 3\n    }\n\n    if (!w.globals.isBarHorizontal) {\n      this.moveXCrosshairs(bcx)\n    }\n\n    if (!ttCtx.fixedTooltip) {\n      let tcy = bcy || w.globals.gridHeight\n      this.moveTooltip(bcx, tcy)\n    }\n  }\n}\n","import Graphics from '../Graphics'\nimport Position from './Position'\nimport Markers from '../../modules/Markers'\nimport Utils from '../../utils/Utils'\n\n/**\n * ApexCharts Tooltip.Marker Class to draw texts on the tooltip.\n *\n * @module Tooltip.Marker\n **/\n\nexport default class Marker {\n  constructor(tooltipContext) {\n    this.w = tooltipContext.w\n    this.ttCtx = tooltipContext\n    this.ctx = tooltipContext.ctx\n    this.tooltipPosition = new Position(tooltipContext)\n  }\n\n  drawDynamicPoints() {\n    let w = this.w\n\n    let graphics = new Graphics(this.ctx)\n    let marker = new Markers(this.ctx)\n\n    let elsSeries = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series')\n\n    elsSeries = [...elsSeries]\n\n    if (w.config.chart.stacked) {\n      elsSeries.sort((a, b) => {\n        return (\n          parseFloat(a.getAttribute('data:realIndex')) -\n          parseFloat(b.getAttribute('data:realIndex'))\n        )\n      })\n    }\n\n    for (let i = 0; i < elsSeries.length; i++) {\n      let pointsMain = elsSeries[i].querySelector(\n        `.apexcharts-series-markers-wrap`\n      )\n\n      if (pointsMain !== null) {\n        // it can be null as we have tooltips in donut/bar charts\n        let point\n\n        let PointClasses = `apexcharts-marker w${(Math.random() + 1)\n          .toString(36)\n          .substring(4)}`\n        if (\n          (w.config.chart.type === 'line' || w.config.chart.type === 'area') &&\n          !w.globals.comboCharts &&\n          !w.config.tooltip.intersect\n        ) {\n          PointClasses += ' no-pointer-events'\n        }\n\n        let elPointOptions = marker.getMarkerConfig(PointClasses, i)\n\n        point = graphics.drawMarker(0, 0, elPointOptions)\n\n        point.node.setAttribute('default-marker-size', 0)\n\n        let elPointsG = document.createElementNS(w.globals.SVGNS, 'g')\n        elPointsG.classList.add('apexcharts-series-markers')\n\n        elPointsG.appendChild(point.node)\n        pointsMain.appendChild(elPointsG)\n      }\n    }\n  }\n\n  enlargeCurrentPoint(rel, point, x = null, y = null) {\n    let w = this.w\n\n    if (w.config.chart.type !== 'bubble') {\n      this.newPointSize(rel, point)\n    }\n\n    let cx = point.getAttribute('cx')\n    let cy = point.getAttribute('cy')\n\n    if (x !== null && y !== null) {\n      cx = x\n      cy = y\n    }\n\n    this.tooltipPosition.moveXCrosshairs(cx)\n\n    if (!this.fixedTooltip) {\n      if (w.config.chart.type === 'radar') {\n        const elGrid = this.ttCtx.getElGrid()\n        const seriesBound = elGrid.getBoundingClientRect()\n\n        cx = this.ttCtx.e.clientX - seriesBound.left\n      }\n\n      this.tooltipPosition.moveTooltip(cx, cy, w.config.markers.hover.size)\n    }\n  }\n\n  enlargePoints(j) {\n    let w = this.w\n    let me = this\n    const ttCtx = this.ttCtx\n\n    let col = j\n\n    let points = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker'\n    )\n\n    let newSize = w.config.markers.hover.size\n\n    for (let p = 0; p < points.length; p++) {\n      let rel = points[p].getAttribute('rel')\n      let index = points[p].getAttribute('index')\n\n      if (newSize === undefined) {\n        newSize =\n          w.globals.markers.size[index] + w.config.markers.hover.sizeOffset\n      }\n\n      if (col === parseInt(rel, 10)) {\n        me.newPointSize(col, points[p])\n\n        let cx = points[p].getAttribute('cx')\n        let cy = points[p].getAttribute('cy')\n\n        me.tooltipPosition.moveXCrosshairs(cx)\n\n        if (!ttCtx.fixedTooltip) {\n          me.tooltipPosition.moveTooltip(cx, cy, newSize)\n        }\n      } else {\n        me.oldPointSize(points[p])\n      }\n    }\n  }\n\n  newPointSize(rel, point) {\n    let w = this.w\n    let newSize = w.config.markers.hover.size\n\n    let elPoint =\n      rel === 0 ? point.parentNode.firstChild : point.parentNode.lastChild\n\n    if (elPoint.getAttribute('default-marker-size') !== '0') {\n      const index = parseInt(elPoint.getAttribute('index'), 10)\n      if (newSize === undefined) {\n        newSize =\n          w.globals.markers.size[index] + w.config.markers.hover.sizeOffset\n      }\n\n      if (newSize < 0) newSize = 0\n      elPoint.setAttribute('r', newSize)\n    }\n  }\n\n  oldPointSize(point) {\n    const size = parseFloat(point.getAttribute('default-marker-size'))\n    point.setAttribute('r', size)\n  }\n\n  resetPointsSize() {\n    let w = this.w\n\n    let points = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker'\n    )\n\n    for (let p = 0; p < points.length; p++) {\n      const size = parseFloat(points[p].getAttribute('default-marker-size'))\n      if (Utils.isNumber(size) && size >= 0) {\n        points[p].setAttribute('r', size)\n      } else {\n        points[p].setAttribute('r', 0)\n      }\n    }\n  }\n}\n","import Utils from '../../utils/Utils'\n\n/**\n * ApexCharts Tooltip.Intersect Class.\n *\n * @module Tooltip.Intersect\n **/\n\nclass Intersect {\n  constructor(tooltipContext) {\n    this.w = tooltipContext.w\n    this.ttCtx = tooltipContext\n  }\n\n  getAttr(e, attr) {\n    return parseFloat(e.target.getAttribute(attr))\n  }\n\n  handleHeatTreeTooltip({ e, opt, x, y, type }) {\n    const ttCtx = this.ttCtx\n    const w = this.w\n\n    if (e.target.classList.contains(`apexcharts-${type}-rect`)) {\n      let i = this.getAttr(e, 'i')\n      let j = this.getAttr(e, 'j')\n      let cx = this.getAttr(e, 'cx')\n      let cy = this.getAttr(e, 'cy')\n      let width = this.getAttr(e, 'width')\n      let height = this.getAttr(e, 'height')\n\n      ttCtx.tooltipLabels.drawSeriesTexts({\n        ttItems: opt.ttItems,\n        i,\n        j,\n        shared: false,\n        e\n      })\n\n      w.globals.capturedSeriesIndex = i\n      w.globals.capturedDataPointIndex = j\n\n      x = cx + ttCtx.tooltipRect.ttWidth / 2 + width\n      y = cy + ttCtx.tooltipRect.ttHeight / 2 - height / 2\n\n      ttCtx.tooltipPosition.moveXCrosshairs(cx + width / 2)\n\n      if (x > w.globals.gridWidth / 2) {\n        x = cx - ttCtx.tooltipRect.ttWidth / 2 + width\n      }\n      if (ttCtx.w.config.tooltip.followCursor) {\n        let seriesBound = w.globals.dom.elWrap.getBoundingClientRect()\n        x = w.globals.clientX - seriesBound.left - ttCtx.tooltipRect.ttWidth / 2\n        y = w.globals.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight - 5\n      }\n    }\n\n    return {\n      x,\n      y\n    }\n  }\n\n  handleMarkerTooltip({ e, opt, x, y }) {\n    let w = this.w\n    const ttCtx = this.ttCtx\n\n    let i\n    let j\n    if (e.target.classList.contains('apexcharts-marker')) {\n      let cx = parseInt(opt.paths.getAttribute('cx'), 10)\n      let cy = parseInt(opt.paths.getAttribute('cy'), 10)\n      let val = parseFloat(opt.paths.getAttribute('val'))\n\n      j = parseInt(opt.paths.getAttribute('rel'), 10)\n      i =\n        parseInt(\n          opt.paths.parentNode.parentNode.parentNode.getAttribute('rel'),\n          10\n        ) - 1\n\n      if (ttCtx.intersect) {\n        const el = Utils.findAncestor(opt.paths, 'apexcharts-series')\n        if (el) {\n          i = parseInt(el.getAttribute('data:realIndex'), 10)\n        }\n      }\n\n      ttCtx.tooltipLabels.drawSeriesTexts({\n        ttItems: opt.ttItems,\n        i,\n        j,\n        shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n        e\n      })\n\n      if (e.type === 'mouseup') {\n        ttCtx.markerClick(e, i, j)\n      }\n\n      w.globals.capturedSeriesIndex = i\n      w.globals.capturedDataPointIndex = j\n\n      x = cx\n      y = cy + w.globals.translateY - ttCtx.tooltipRect.ttHeight * 1.4\n\n      if (ttCtx.w.config.tooltip.followCursor) {\n        const elGrid = ttCtx.getElGrid()\n        const seriesBound = elGrid.getBoundingClientRect()\n        y = ttCtx.e.clientY + w.globals.translateY - seriesBound.top\n      }\n\n      if (val < 0) {\n        y = cy\n      }\n      ttCtx.marker.enlargeCurrentPoint(j, opt.paths, x, y)\n    }\n\n    return {\n      x,\n      y\n    }\n  }\n\n  handleBarTooltip({ e, opt }) {\n    const w = this.w\n    const ttCtx = this.ttCtx\n\n    const tooltipEl = ttCtx.getElTooltip()\n\n    let bx = 0\n    let x = 0\n    let y = 0\n    let i = 0\n    let strokeWidth\n    let barXY = this.getBarTooltipXY({\n      e,\n      opt\n    })\n    i = barXY.i\n    let barHeight = barXY.barHeight\n    let j = barXY.j\n\n    w.globals.capturedSeriesIndex = i\n    w.globals.capturedDataPointIndex = j\n\n    if (\n      (w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars()) ||\n      !w.config.tooltip.shared\n    ) {\n      x = barXY.x\n      y = barXY.y\n      strokeWidth = Array.isArray(w.config.stroke.width)\n        ? w.config.stroke.width[i]\n        : w.config.stroke.width\n      bx = x\n    } else {\n      if (!w.globals.comboCharts && !w.config.tooltip.shared) {\n        bx = bx / 2\n      }\n    }\n\n    // y is NaN, make it touch the bottom of grid area\n    if (isNaN(y)) {\n      y = w.globals.svgHeight - ttCtx.tooltipRect.ttHeight\n    } else if (y < 0) {\n      y = 0\n    }\n\n    const seriesIndex = parseInt(\n      opt.paths.parentNode.getAttribute('data:realIndex'),\n      10\n    )\n\n    const isReversed = w.globals.isMultipleYAxis\n      ? w.config.yaxis[seriesIndex] && w.config.yaxis[seriesIndex].reversed\n      : w.config.yaxis[0].reversed\n\n    if (x + ttCtx.tooltipRect.ttWidth > w.globals.gridWidth && !isReversed) {\n      x = x - ttCtx.tooltipRect.ttWidth\n    } else if (x < 0) {\n      x = 0\n    }\n\n    if (ttCtx.w.config.tooltip.followCursor) {\n      const elGrid = ttCtx.getElGrid()\n      const seriesBound = elGrid.getBoundingClientRect()\n      y = ttCtx.e.clientY - seriesBound.top\n    }\n\n    // if tooltip is still null, querySelector\n    if (ttCtx.tooltip === null) {\n      ttCtx.tooltip = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip')\n    }\n\n    if (!w.config.tooltip.shared) {\n      if (w.globals.comboBarCount > 0) {\n        ttCtx.tooltipPosition.moveXCrosshairs(bx + strokeWidth / 2)\n      } else {\n        ttCtx.tooltipPosition.moveXCrosshairs(bx)\n      }\n    }\n\n    // move tooltip here\n    if (\n      !ttCtx.fixedTooltip &&\n      (!w.config.tooltip.shared ||\n        (w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars()))\n    ) {\n      if (isReversed) {\n        x = x - ttCtx.tooltipRect.ttWidth\n        if (x < 0) {\n          x = 0\n        }\n      }\n      tooltipEl.style.left = x + w.globals.translateX + 'px'\n\n      if (\n        isReversed &&\n        !(w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars())\n      ) {\n        y = y + barHeight - (w.globals.series[i][j] < 0 ? barHeight : 0) * 2\n      }\n      if (ttCtx.tooltipRect.ttHeight + y > w.globals.gridHeight) {\n        y =\n          w.globals.gridHeight -\n          ttCtx.tooltipRect.ttHeight +\n          w.globals.translateY\n        tooltipEl.style.top = y + 'px'\n      } else {\n        tooltipEl.style.top =\n          y + w.globals.translateY - ttCtx.tooltipRect.ttHeight / 2 + 'px'\n      }\n    }\n  }\n\n  getBarTooltipXY({ e, opt }) {\n    let w = this.w\n    let j = null\n    const ttCtx = this.ttCtx\n    let i = 0\n    let x = 0\n    let y = 0\n    let barWidth = 0\n    let barHeight = 0\n\n    const cl = e.target.classList\n\n    if (\n      cl.contains('apexcharts-bar-area') ||\n      cl.contains('apexcharts-candlestick-area') ||\n      cl.contains('apexcharts-boxPlot-area') ||\n      cl.contains('apexcharts-rangebar-area')\n    ) {\n      let bar = e.target\n      let barRect = bar.getBoundingClientRect()\n\n      let seriesBound = opt.elGrid.getBoundingClientRect()\n\n      let bh = barRect.height\n      barHeight = barRect.height\n      let bw = barRect.width\n\n      let cx = parseInt(bar.getAttribute('cx'), 10)\n      let cy = parseInt(bar.getAttribute('cy'), 10)\n      barWidth = parseFloat(bar.getAttribute('barWidth'))\n      const clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX\n\n      j = parseInt(bar.getAttribute('j'), 10)\n      i = parseInt(bar.parentNode.getAttribute('rel'), 10) - 1\n\n      let y1 = bar.getAttribute('data-range-y1')\n      let y2 = bar.getAttribute('data-range-y2')\n\n      if (w.globals.comboCharts) {\n        i = parseInt(bar.parentNode.getAttribute('data:realIndex'), 10)\n      }\n\n      // if (w.config.tooltip.shared) {\n      // this check not needed  at the moment\n      //   const yDivisor = w.globals.gridHeight / (w.globals.series.length)\n      //   const hoverY = ttCtx.clientY - ttCtx.seriesBound.top\n\n      //   j = Math.ceil(hoverY / yDivisor)\n      // }\n\n      ttCtx.tooltipLabels.drawSeriesTexts({\n        ttItems: opt.ttItems,\n        i,\n        j,\n        y1: y1 ? parseInt(y1, 10) : null,\n        y2: y2 ? parseInt(y2, 10) : null,\n        shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n        e\n      })\n\n      if (w.config.tooltip.followCursor) {\n        if (w.globals.isBarHorizontal) {\n          x = clientX - seriesBound.left + 15\n          y =\n            cy -\n            ttCtx.dataPointsDividedHeight +\n            bh / 2 -\n            ttCtx.tooltipRect.ttHeight / 2\n        } else {\n          if (w.globals.isXNumeric) {\n            x = cx - bw / 2\n          } else {\n            x = cx - ttCtx.dataPointsDividedWidth + bw / 2\n          }\n          y = e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2 - 15\n        }\n      } else {\n        if (w.globals.isBarHorizontal) {\n          x = cx\n          if (x < ttCtx.xyRatios.baseLineInvertedY) {\n            x = cx - ttCtx.tooltipRect.ttWidth\n          }\n\n          y =\n            cy -\n            ttCtx.dataPointsDividedHeight +\n            bh / 2 -\n            ttCtx.tooltipRect.ttHeight / 2\n        } else {\n          // if columns\n          if (w.globals.isXNumeric) {\n            x = cx - bw / 2\n          } else {\n            x = cx - ttCtx.dataPointsDividedWidth + bw / 2\n          }\n\n          y = cy // - ttCtx.tooltipRect.ttHeight / 2 + 10\n        }\n      }\n    }\n\n    return {\n      x,\n      y,\n      barHeight,\n      barWidth,\n      i,\n      j\n    }\n  }\n}\n\nexport default Intersect\n","/**\n * ApexCharts Tooltip.AxesTooltip Class.\n *\n * @module Tooltip.AxesTooltip\n **/\n\nclass AxesTooltip {\n  constructor(tooltipContext) {\n    this.w = tooltipContext.w\n    this.ttCtx = tooltipContext\n  }\n\n  /**\n   * This method adds the secondary tooltip which appears below x axis\n   * @memberof Tooltip\n   **/\n  drawXaxisTooltip() {\n    let w = this.w\n    const ttCtx = this.ttCtx\n\n    const isBottom = w.config.xaxis.position === 'bottom'\n\n    ttCtx.xaxisOffY = isBottom\n      ? w.globals.gridHeight + 1\n      : -w.globals.xAxisHeight - w.config.xaxis.axisTicks.height + 3\n    const tooltipCssClass = isBottom\n      ? 'apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom'\n      : 'apexcharts-xaxistooltip apexcharts-xaxistooltip-top'\n\n    let renderTo = w.globals.dom.elWrap\n\n    if (ttCtx.blxaxisTooltip) {\n      let xaxisTooltip = w.globals.dom.baseEl.querySelector(\n        '.apexcharts-xaxistooltip'\n      )\n\n      if (xaxisTooltip === null) {\n        ttCtx.xaxisTooltip = document.createElement('div')\n        ttCtx.xaxisTooltip.setAttribute(\n          'class',\n          tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme\n        )\n\n        renderTo.appendChild(ttCtx.xaxisTooltip)\n\n        ttCtx.xaxisTooltipText = document.createElement('div')\n        ttCtx.xaxisTooltipText.classList.add('apexcharts-xaxistooltip-text')\n\n        ttCtx.xaxisTooltipText.style.fontFamily =\n          w.config.xaxis.tooltip.style.fontFamily || w.config.chart.fontFamily\n        ttCtx.xaxisTooltipText.style.fontSize =\n          w.config.xaxis.tooltip.style.fontSize\n\n        ttCtx.xaxisTooltip.appendChild(ttCtx.xaxisTooltipText)\n      }\n    }\n  }\n\n  /**\n   * This method adds the secondary tooltip which appears below x axis\n   * @memberof Tooltip\n   **/\n  drawYaxisTooltip() {\n    let w = this.w\n    const ttCtx = this.ttCtx\n\n    for (let i = 0; i < w.config.yaxis.length; i++) {\n      const isRight =\n        w.config.yaxis[i].opposite || w.config.yaxis[i].crosshairs.opposite\n\n      ttCtx.yaxisOffX = isRight ? w.globals.gridWidth + 1 : 1\n      let tooltipCssClass = isRight\n        ? `apexcharts-yaxistooltip apexcharts-yaxistooltip-${i} apexcharts-yaxistooltip-right`\n        : `apexcharts-yaxistooltip apexcharts-yaxistooltip-${i} apexcharts-yaxistooltip-left`\n\n      w.globals.yAxisSameScaleIndices.map((samescales, ssi) => {\n        samescales.map((s, si) => {\n          if (si === i) {\n            tooltipCssClass += w.config.yaxis[si].show\n              ? ` `\n              : ` apexcharts-yaxistooltip-hidden`\n          }\n        })\n      })\n\n      let renderTo = w.globals.dom.elWrap\n\n      let yaxisTooltip = w.globals.dom.baseEl.querySelector(\n        `.apexcharts-yaxistooltip apexcharts-yaxistooltip-${i}`\n      )\n\n      if (yaxisTooltip === null) {\n        ttCtx.yaxisTooltip = document.createElement('div')\n        ttCtx.yaxisTooltip.setAttribute(\n          'class',\n          tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme\n        )\n\n        renderTo.appendChild(ttCtx.yaxisTooltip)\n\n        if (i === 0) ttCtx.yaxisTooltipText = []\n\n        ttCtx.yaxisTooltipText[i] = document.createElement('div')\n        ttCtx.yaxisTooltipText[i].classList.add('apexcharts-yaxistooltip-text')\n\n        ttCtx.yaxisTooltip.appendChild(ttCtx.yaxisTooltipText[i])\n      }\n    }\n  }\n\n  /**\n   * @memberof Tooltip\n   **/\n  setXCrosshairWidth() {\n    let w = this.w\n    const ttCtx = this.ttCtx\n\n    // set xcrosshairs width\n    const xcrosshairs = ttCtx.getElXCrosshairs()\n    ttCtx.xcrosshairsWidth = parseInt(w.config.xaxis.crosshairs.width, 10)\n\n    if (!w.globals.comboCharts) {\n      if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n        let count = w.globals.labels.length\n        ttCtx.xcrosshairsWidth = w.globals.gridWidth / count\n      } else if (w.config.xaxis.crosshairs.width === 'barWidth') {\n        let bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area')\n        if (bar !== null) {\n          let barWidth = parseFloat(bar.getAttribute('barWidth'))\n          ttCtx.xcrosshairsWidth = barWidth\n        } else {\n          ttCtx.xcrosshairsWidth = 1\n        }\n      }\n    } else {\n      let bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area')\n      if (bar !== null && w.config.xaxis.crosshairs.width === 'barWidth') {\n        let barWidth = parseFloat(bar.getAttribute('barWidth'))\n        ttCtx.xcrosshairsWidth = barWidth\n      } else {\n        if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n          let count = w.globals.labels.length\n          ttCtx.xcrosshairsWidth = w.globals.gridWidth / count\n        }\n      }\n    }\n\n    if (w.globals.isBarHorizontal) {\n      ttCtx.xcrosshairsWidth = 0\n    }\n    if (xcrosshairs !== null && ttCtx.xcrosshairsWidth > 0) {\n      xcrosshairs.setAttribute('width', ttCtx.xcrosshairsWidth)\n    }\n  }\n\n  handleYCrosshair() {\n    let w = this.w\n    const ttCtx = this.ttCtx\n\n    // set ycrosshairs height\n    ttCtx.ycrosshairs = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-ycrosshairs'\n    )\n\n    ttCtx.ycrosshairsHidden = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-ycrosshairs-hidden'\n    )\n  }\n\n  drawYaxisTooltipText(index, clientY, xyRatios) {\n    const ttCtx = this.ttCtx\n    const w = this.w\n\n    let lbFormatter = w.globals.yLabelFormatters[index]\n\n    if (ttCtx.yaxisTooltips[index]) {\n      const elGrid = ttCtx.getElGrid()\n      const seriesBound = elGrid.getBoundingClientRect()\n\n      const hoverY = (clientY - seriesBound.top) * xyRatios.yRatio[index]\n      const height = w.globals.maxYArr[index] - w.globals.minYArr[index]\n\n      const val = w.globals.minYArr[index] + (height - hoverY)\n\n      ttCtx.tooltipPosition.moveYCrosshairs(clientY - seriesBound.top)\n      ttCtx.yaxisTooltipText[index].innerHTML = lbFormatter(val)\n      ttCtx.tooltipPosition.moveYAxisTooltip(index)\n    }\n  }\n}\n\nexport default AxesTooltip\n","import Labels from './Labels'\nimport Position from './Position'\nimport Marker from './Marker'\nimport Intersect from './Intersect'\nimport AxesTooltip from './AxesTooltip'\nimport Graphics from '../Graphics'\nimport Series from '../Series'\nimport XAxis from './../axes/XAxis'\nimport Utils from './Utils'\n\n/**\n * ApexCharts Core Tooltip Class to handle the tooltip generation.\n *\n * @module Tooltip\n **/\n\nexport default class Tooltip {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    const w = this.w\n\n    this.tConfig = w.config.tooltip\n\n    this.tooltipUtil = new Utils(this)\n    this.tooltipLabels = new Labels(this)\n    this.tooltipPosition = new Position(this)\n    this.marker = new Marker(this)\n    this.intersect = new Intersect(this)\n    this.axesTooltip = new AxesTooltip(this)\n    this.showOnIntersect = this.tConfig.intersect\n    this.showTooltipTitle = this.tConfig.x.show\n    this.fixedTooltip = this.tConfig.fixed.enabled\n    this.xaxisTooltip = null\n    this.yaxisTTEls = null\n    this.isBarShared = !w.globals.isBarHorizontal && this.tConfig.shared\n  }\n\n  getElTooltip(ctx) {\n    if (!ctx) ctx = this\n    return ctx.w.globals.dom.baseEl.querySelector('.apexcharts-tooltip')\n  }\n\n  getElXCrosshairs() {\n    return this.w.globals.dom.baseEl.querySelector('.apexcharts-xcrosshairs')\n  }\n\n  getElGrid() {\n    return this.w.globals.dom.baseEl.querySelector('.apexcharts-grid')\n  }\n\n  drawTooltip(xyRatios) {\n    let w = this.w\n    this.xyRatios = xyRatios\n    this.blxaxisTooltip = w.config.xaxis.tooltip.enabled && w.globals.axisCharts\n    this.yaxisTooltips = w.config.yaxis.map((y, i) => {\n      return y.show && y.tooltip.enabled && w.globals.axisCharts ? true : false\n    })\n    this.allTooltipSeriesGroups = []\n\n    if (!w.globals.axisCharts) {\n      this.showTooltipTitle = false\n    }\n\n    const tooltipEl = document.createElement('div')\n    tooltipEl.classList.add('apexcharts-tooltip')\n    tooltipEl.classList.add(`apexcharts-theme-${this.tConfig.theme}`)\n    w.globals.dom.elWrap.appendChild(tooltipEl)\n\n    if (w.globals.axisCharts) {\n      this.axesTooltip.drawXaxisTooltip()\n      this.axesTooltip.drawYaxisTooltip()\n      this.axesTooltip.setXCrosshairWidth()\n      this.axesTooltip.handleYCrosshair()\n\n      let xAxis = new XAxis(this.ctx)\n      this.xAxisTicksPositions = xAxis.getXAxisTicksPositions()\n    }\n\n    // we forcefully set intersect true for these conditions\n    if (\n      (w.globals.comboCharts ||\n        this.tConfig.intersect ||\n        w.config.chart.type === 'rangeBar') &&\n      !this.tConfig.shared\n    ) {\n      this.showOnIntersect = true\n    }\n\n    if (w.config.markers.size === 0 || w.globals.markers.largestSize === 0) {\n      // when user don't want to show points all the time, but only on when hovering on series\n      this.marker.drawDynamicPoints(this)\n    }\n\n    // no visible series, exit\n    if (w.globals.collapsedSeries.length === w.globals.series.length) return\n\n    this.dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints\n    this.dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints\n\n    if (this.showTooltipTitle) {\n      this.tooltipTitle = document.createElement('div')\n      this.tooltipTitle.classList.add('apexcharts-tooltip-title')\n      this.tooltipTitle.style.fontFamily =\n        this.tConfig.style.fontFamily || w.config.chart.fontFamily\n      this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize\n      tooltipEl.appendChild(this.tooltipTitle)\n    }\n\n    let ttItemsCnt = w.globals.series.length // whether shared or not, default is shared\n    if ((w.globals.xyCharts || w.globals.comboCharts) && this.tConfig.shared) {\n      if (!this.showOnIntersect) {\n        ttItemsCnt = w.globals.series.length\n      } else {\n        ttItemsCnt = 1\n      }\n    }\n\n    this.legendLabels = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-legend-text'\n    )\n\n    this.ttItems = this.createTTElements(ttItemsCnt)\n    this.addSVGEvents()\n  }\n\n  createTTElements(ttItemsCnt) {\n    const w = this.w\n    let ttItems = []\n\n    const tooltipEl = this.getElTooltip()\n    for (let i = 0; i < ttItemsCnt; i++) {\n      let gTxt = document.createElement('div')\n      gTxt.classList.add('apexcharts-tooltip-series-group')\n      gTxt.style.order = w.config.tooltip.inverseOrder ? ttItemsCnt - i : i + 1\n      if (\n        this.tConfig.shared &&\n        this.tConfig.enabledOnSeries &&\n        Array.isArray(this.tConfig.enabledOnSeries)\n      ) {\n        if (this.tConfig.enabledOnSeries.indexOf(i) < 0) {\n          gTxt.classList.add('apexcharts-tooltip-series-group-hidden')\n        }\n      }\n\n      let point = document.createElement('span')\n      point.classList.add('apexcharts-tooltip-marker')\n      point.style.backgroundColor = w.globals.colors[i]\n      gTxt.appendChild(point)\n\n      const gYZ = document.createElement('div')\n      gYZ.classList.add('apexcharts-tooltip-text')\n\n      gYZ.style.fontFamily =\n        this.tConfig.style.fontFamily || w.config.chart.fontFamily\n      gYZ.style.fontSize = this.tConfig.style.fontSize\n      ;['y', 'goals', 'z'].forEach((g) => {\n        const gValText = document.createElement('div')\n        gValText.classList.add(`apexcharts-tooltip-${g}-group`)\n\n        let txtLabel = document.createElement('span')\n        txtLabel.classList.add(`apexcharts-tooltip-text-${g}-label`)\n        gValText.appendChild(txtLabel)\n\n        let txtValue = document.createElement('span')\n        txtValue.classList.add(`apexcharts-tooltip-text-${g}-value`)\n        gValText.appendChild(txtValue)\n\n        gYZ.appendChild(gValText)\n      })\n\n      gTxt.appendChild(gYZ)\n\n      tooltipEl.appendChild(gTxt)\n\n      ttItems.push(gTxt)\n    }\n\n    return ttItems\n  }\n\n  addSVGEvents() {\n    const w = this.w\n    let type = w.config.chart.type\n    const tooltipEl = this.getElTooltip()\n\n    const commonBar = !!(\n      type === 'bar' ||\n      type === 'candlestick' ||\n      type === 'boxPlot' ||\n      type === 'rangeBar' ||\n      type === 'gantt'\n    )\n\n    const chartWithmarkers =\n      type === 'area' ||\n      type === 'line' ||\n      type === 'scatter' ||\n      type === 'bubble' ||\n      type === 'radar'\n\n    let hoverArea = w.globals.dom.Paper.node\n\n    const elGrid = this.getElGrid()\n    if (elGrid) {\n      this.seriesBound = elGrid.getBoundingClientRect()\n    }\n\n    let tooltipY = []\n    let tooltipX = []\n\n    let seriesHoverParams = {\n      hoverArea,\n      elGrid,\n      tooltipEl,\n      tooltipY,\n      tooltipX,\n      ttItems: this.ttItems\n    }\n\n    let points\n\n    if (w.globals.axisCharts) {\n      if (chartWithmarkers) {\n        points = w.globals.dom.baseEl.querySelectorAll(\n          \".apexcharts-series[data\\\\:longestSeries='true'] .apexcharts-marker\"\n        )\n      } else if (commonBar) {\n        points = w.globals.dom.baseEl.querySelectorAll(\n          '.apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area'\n        )\n      } else if (type === 'heatmap' || type === 'treemap') {\n        points = w.globals.dom.baseEl.querySelectorAll(\n          '.apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap'\n        )\n      }\n\n      if (points && points.length) {\n        for (let p = 0; p < points.length; p++) {\n          tooltipY.push(points[p].getAttribute('cy'))\n          tooltipX.push(points[p].getAttribute('cx'))\n        }\n      }\n    }\n\n    const validSharedChartTypes =\n      (w.globals.xyCharts && !this.showOnIntersect) ||\n      (w.globals.comboCharts && !this.showOnIntersect) ||\n      (commonBar && this.tooltipUtil.hasBars() && this.tConfig.shared)\n\n    if (validSharedChartTypes) {\n      this.addPathsEventListeners([hoverArea], seriesHoverParams)\n    } else if (\n      (commonBar && !w.globals.comboCharts) ||\n      (chartWithmarkers && this.showOnIntersect)\n    ) {\n      this.addDatapointEventsListeners(seriesHoverParams)\n    } else if (\n      !w.globals.axisCharts ||\n      type === 'heatmap' ||\n      type === 'treemap'\n    ) {\n      let seriesAll = w.globals.dom.baseEl.querySelectorAll(\n        '.apexcharts-series'\n      )\n      this.addPathsEventListeners(seriesAll, seriesHoverParams)\n    }\n\n    if (this.showOnIntersect) {\n      let lineAreaPoints = w.globals.dom.baseEl.querySelectorAll(\n        '.apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker'\n      )\n      if (lineAreaPoints.length > 0) {\n        // if we find any lineSeries, addEventListeners for them\n        this.addPathsEventListeners(lineAreaPoints, seriesHoverParams)\n      }\n\n      // combo charts may have bars, so add event listeners here too\n      if (this.tooltipUtil.hasBars() && !this.tConfig.shared) {\n        this.addDatapointEventsListeners(seriesHoverParams)\n      }\n    }\n  }\n\n  drawFixedTooltipRect() {\n    let w = this.w\n\n    const tooltipEl = this.getElTooltip()\n\n    let tooltipRect = tooltipEl.getBoundingClientRect()\n\n    let ttWidth = tooltipRect.width + 10\n    let ttHeight = tooltipRect.height + 10\n    let x = this.tConfig.fixed.offsetX\n    let y = this.tConfig.fixed.offsetY\n\n    const fixed = this.tConfig.fixed.position.toLowerCase()\n\n    if (fixed.indexOf('right') > -1) {\n      x = x + w.globals.svgWidth - ttWidth + 10\n    }\n    if (fixed.indexOf('bottom') > -1) {\n      y = y + w.globals.svgHeight - ttHeight - 10\n    }\n\n    tooltipEl.style.left = x + 'px'\n    tooltipEl.style.top = y + 'px'\n\n    return {\n      x,\n      y,\n      ttWidth,\n      ttHeight\n    }\n  }\n\n  addDatapointEventsListeners(seriesHoverParams) {\n    let w = this.w\n    let points = w.globals.dom.baseEl.querySelectorAll(\n      '.apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area'\n    )\n    this.addPathsEventListeners(points, seriesHoverParams)\n  }\n\n  addPathsEventListeners(paths, opts) {\n    let self = this\n\n    for (let p = 0; p < paths.length; p++) {\n      let extendedOpts = {\n        paths: paths[p],\n        tooltipEl: opts.tooltipEl,\n        tooltipY: opts.tooltipY,\n        tooltipX: opts.tooltipX,\n        elGrid: opts.elGrid,\n        hoverArea: opts.hoverArea,\n        ttItems: opts.ttItems\n      }\n\n      let events = ['mousemove', 'mouseup', 'touchmove', 'mouseout', 'touchend']\n\n      events.map((ev) => {\n        return paths[p].addEventListener(\n          ev,\n          self.seriesHover.bind(self, extendedOpts),\n          { capture: false, passive: true }\n        )\n      })\n    }\n  }\n\n  /*\n   ** The actual series hover function\n   */\n  seriesHover(opt, e) {\n    let chartGroups = []\n    const w = this.w\n\n    // if user has more than one charts in group, we need to sync\n    if (w.config.chart.group) {\n      chartGroups = this.ctx.getGroupedCharts()\n    }\n\n    if (\n      w.globals.axisCharts &&\n      ((w.globals.minX === -Infinity && w.globals.maxX === Infinity) ||\n        w.globals.dataPoints === 0)\n    ) {\n      return\n    }\n\n    if (chartGroups.length) {\n      chartGroups.forEach((ch) => {\n        const tooltipEl = this.getElTooltip(ch)\n\n        const newOpts = {\n          paths: opt.paths,\n          tooltipEl,\n          tooltipY: opt.tooltipY,\n          tooltipX: opt.tooltipX,\n          elGrid: opt.elGrid,\n          hoverArea: opt.hoverArea,\n          ttItems: ch.w.globals.tooltip.ttItems\n        }\n\n        // all the charts should have the same minX and maxX (same xaxis) for multiple tooltips to work correctly\n        if (\n          ch.w.globals.minX === this.w.globals.minX &&\n          ch.w.globals.maxX === this.w.globals.maxX\n        ) {\n          ch.w.globals.tooltip.seriesHoverByContext({\n            chartCtx: ch,\n            ttCtx: ch.w.globals.tooltip,\n            opt: newOpts,\n            e\n          })\n        }\n      })\n    } else {\n      this.seriesHoverByContext({\n        chartCtx: this.ctx,\n        ttCtx: this.w.globals.tooltip,\n        opt,\n        e\n      })\n    }\n  }\n\n  seriesHoverByContext({ chartCtx, ttCtx, opt, e }) {\n    let w = chartCtx.w\n    const tooltipEl = this.getElTooltip()\n\n    // tooltipRect is calculated on every mousemove, because the text is dynamic\n    ttCtx.tooltipRect = {\n      x: 0,\n      y: 0,\n      ttWidth: tooltipEl.getBoundingClientRect().width,\n      ttHeight: tooltipEl.getBoundingClientRect().height\n    }\n    ttCtx.e = e\n\n    // highlight the current hovered bars\n    if (\n      ttCtx.tooltipUtil.hasBars() &&\n      !w.globals.comboCharts &&\n      !ttCtx.isBarShared\n    ) {\n      if (this.tConfig.onDatasetHover.highlightDataSeries) {\n        let series = new Series(chartCtx)\n        series.toggleSeriesOnHover(e, e.target.parentNode)\n      }\n    }\n\n    if (ttCtx.fixedTooltip) {\n      ttCtx.drawFixedTooltipRect()\n    }\n\n    if (w.globals.axisCharts) {\n      ttCtx.axisChartsTooltips({\n        e,\n        opt,\n        tooltipRect: ttCtx.tooltipRect\n      })\n    } else {\n      // non-plot charts i.e pie/donut/circle\n      ttCtx.nonAxisChartsTooltips({\n        e,\n        opt,\n        tooltipRect: ttCtx.tooltipRect\n      })\n    }\n  }\n\n  // tooltip handling for line/area/bar/columns/scatter\n  axisChartsTooltips({ e, opt }) {\n    let w = this.w\n    let x, y\n\n    let seriesBound = opt.elGrid.getBoundingClientRect()\n\n    const clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX\n    const clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY\n\n    this.clientY = clientY\n    this.clientX = clientX\n\n    w.globals.capturedSeriesIndex = -1\n    w.globals.capturedDataPointIndex = -1\n\n    if (\n      clientY < seriesBound.top ||\n      clientY > seriesBound.top + seriesBound.height\n    ) {\n      this.handleMouseOut(opt)\n      return\n    }\n\n    if (\n      Array.isArray(this.tConfig.enabledOnSeries) &&\n      !w.config.tooltip.shared\n    ) {\n      const index = parseInt(opt.paths.getAttribute('index'), 10)\n      if (this.tConfig.enabledOnSeries.indexOf(index) < 0) {\n        this.handleMouseOut(opt)\n        return\n      }\n    }\n\n    const tooltipEl = this.getElTooltip()\n    const xcrosshairs = this.getElXCrosshairs()\n\n    let isStickyTooltip =\n      w.globals.xyCharts ||\n      (w.config.chart.type === 'bar' &&\n        !w.globals.isBarHorizontal &&\n        this.tooltipUtil.hasBars() &&\n        this.tConfig.shared) ||\n      (w.globals.comboCharts && this.tooltipUtil.hasBars())\n\n    if (\n      e.type === 'mousemove' ||\n      e.type === 'touchmove' ||\n      e.type === 'mouseup'\n    ) {\n      if (xcrosshairs !== null) {\n        xcrosshairs.classList.add('apexcharts-active')\n      }\n\n      const hasYAxisTooltip = this.yaxisTooltips.filter((b) => {\n        return b === true\n      })\n      if (this.ycrosshairs !== null && hasYAxisTooltip.length) {\n        this.ycrosshairs.classList.add('apexcharts-active')\n      }\n\n      if (isStickyTooltip && !this.showOnIntersect) {\n        this.handleStickyTooltip(e, clientX, clientY, opt)\n      } else {\n        if (\n          w.config.chart.type === 'heatmap' ||\n          w.config.chart.type === 'treemap'\n        ) {\n          let markerXY = this.intersect.handleHeatTreeTooltip({\n            e,\n            opt,\n            x,\n            y,\n            type: w.config.chart.type\n          })\n          x = markerXY.x\n          y = markerXY.y\n\n          tooltipEl.style.left = x + 'px'\n          tooltipEl.style.top = y + 'px'\n        } else {\n          if (this.tooltipUtil.hasBars()) {\n            this.intersect.handleBarTooltip({\n              e,\n              opt\n            })\n          }\n\n          if (this.tooltipUtil.hasMarkers()) {\n            // intersect - line/area/scatter/bubble\n            this.intersect.handleMarkerTooltip({\n              e,\n              opt,\n              x,\n              y\n            })\n          }\n        }\n      }\n\n      if (this.yaxisTooltips.length) {\n        for (let yt = 0; yt < w.config.yaxis.length; yt++) {\n          this.axesTooltip.drawYaxisTooltipText(yt, clientY, this.xyRatios)\n        }\n      }\n\n      opt.tooltipEl.classList.add('apexcharts-active')\n    } else if (e.type === 'mouseout' || e.type === 'touchend') {\n      this.handleMouseOut(opt)\n    }\n  }\n\n  // tooltip handling for pie/donuts\n  nonAxisChartsTooltips({ e, opt, tooltipRect }) {\n    let w = this.w\n    let rel = opt.paths.getAttribute('rel')\n\n    const tooltipEl = this.getElTooltip()\n\n    let seriesBound = w.globals.dom.elWrap.getBoundingClientRect()\n\n    if (e.type === 'mousemove' || e.type === 'touchmove') {\n      tooltipEl.classList.add('apexcharts-active')\n\n      this.tooltipLabels.drawSeriesTexts({\n        ttItems: opt.ttItems,\n        i: parseInt(rel, 10) - 1,\n        shared: false\n      })\n\n      let x = w.globals.clientX - seriesBound.left - tooltipRect.ttWidth / 2\n      let y = w.globals.clientY - seriesBound.top - tooltipRect.ttHeight - 10\n\n      tooltipEl.style.left = x + 'px'\n      tooltipEl.style.top = y + 'px'\n\n      if (w.config.legend.tooltipHoverFormatter) {\n        let legendFormatter = w.config.legend.tooltipHoverFormatter\n\n        const i = rel - 1\n        const legendName = this.legendLabels[i].getAttribute(\n          'data:default-text'\n        )\n\n        let text = legendFormatter(legendName, {\n          seriesIndex: i,\n          dataPointIndex: i,\n          w\n        })\n\n        this.legendLabels[i].innerHTML = text\n      }\n    } else if (e.type === 'mouseout' || e.type === 'touchend') {\n      tooltipEl.classList.remove('apexcharts-active')\n      if (w.config.legend.tooltipHoverFormatter) {\n        this.legendLabels.forEach((l) => {\n          const defaultText = l.getAttribute('data:default-text')\n          l.innerHTML = decodeURIComponent(defaultText)\n        })\n      }\n    }\n  }\n\n  handleStickyTooltip(e, clientX, clientY, opt) {\n    const w = this.w\n    let capj = this.tooltipUtil.getNearestValues({\n      context: this,\n      hoverArea: opt.hoverArea,\n      elGrid: opt.elGrid,\n      clientX,\n      clientY\n    })\n\n    let j = capj.j\n    let capturedSeries = capj.capturedSeries\n\n    if (capj.hoverX < 0 || capj.hoverX > w.globals.gridWidth) {\n      this.handleMouseOut(opt)\n      return\n    }\n\n    if (capturedSeries !== null) {\n      this.handleStickyCapturedSeries(e, capturedSeries, opt, j)\n    } else {\n      // couldn't capture any series. check if shared X is same,\n      // if yes, draw a grouped tooltip\n      if (this.tooltipUtil.isXoverlap(j) || w.globals.isBarHorizontal) {\n        this.create(e, this, 0, j, opt.ttItems)\n      }\n    }\n  }\n\n  handleStickyCapturedSeries(e, capturedSeries, opt, j) {\n    const w = this.w\n    let ignoreNull = w.globals.series[capturedSeries][j] === null\n    if (ignoreNull) {\n      this.handleMouseOut(opt)\n      return\n    }\n\n    if (typeof w.globals.series[capturedSeries][j] !== 'undefined') {\n      if (\n        this.tConfig.shared &&\n        this.tooltipUtil.isXoverlap(j) &&\n        this.tooltipUtil.isInitialSeriesSameLen()\n      ) {\n        this.create(e, this, capturedSeries, j, opt.ttItems)\n      } else {\n        this.create(e, this, capturedSeries, j, opt.ttItems, false)\n      }\n    } else {\n      if (this.tooltipUtil.isXoverlap(j)) {\n        this.create(e, this, 0, j, opt.ttItems)\n      }\n    }\n  }\n\n  deactivateHoverFilter() {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    let allPaths = w.globals.dom.Paper.select(`.apexcharts-bar-area`)\n\n    for (let b = 0; b < allPaths.length; b++) {\n      graphics.pathMouseLeave(allPaths[b])\n    }\n  }\n\n  handleMouseOut(opt) {\n    const w = this.w\n\n    const xcrosshairs = this.getElXCrosshairs()\n\n    opt.tooltipEl.classList.remove('apexcharts-active')\n    this.deactivateHoverFilter()\n    if (w.config.chart.type !== 'bubble') {\n      this.marker.resetPointsSize()\n    }\n    if (xcrosshairs !== null) {\n      xcrosshairs.classList.remove('apexcharts-active')\n    }\n    if (this.ycrosshairs !== null) {\n      this.ycrosshairs.classList.remove('apexcharts-active')\n    }\n    if (this.blxaxisTooltip) {\n      this.xaxisTooltip.classList.remove('apexcharts-active')\n    }\n    if (this.yaxisTooltips.length) {\n      if (this.yaxisTTEls === null) {\n        this.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll(\n          '.apexcharts-yaxistooltip'\n        )\n      }\n      for (let i = 0; i < this.yaxisTTEls.length; i++) {\n        this.yaxisTTEls[i].classList.remove('apexcharts-active')\n      }\n    }\n\n    if (w.config.legend.tooltipHoverFormatter) {\n      this.legendLabels.forEach((l) => {\n        const defaultText = l.getAttribute('data:default-text')\n        l.innerHTML = decodeURIComponent(defaultText)\n      })\n    }\n  }\n\n  markerClick(e, seriesIndex, dataPointIndex) {\n    const w = this.w\n    if (typeof w.config.chart.events.markerClick === 'function') {\n      w.config.chart.events.markerClick(e, this.ctx, {\n        seriesIndex,\n        dataPointIndex,\n        w\n      })\n    }\n    this.ctx.events.fireEvent('markerClick', [\n      e,\n      this.ctx,\n      { seriesIndex, dataPointIndex, w }\n    ])\n  }\n\n  create(e, context, capturedSeries, j, ttItems, shared = null) {\n    let w = this.w\n    let ttCtx = context\n\n    if (e.type === 'mouseup') {\n      this.markerClick(e, capturedSeries, j)\n    }\n\n    if (shared === null) shared = this.tConfig.shared\n\n    const hasMarkers = this.tooltipUtil.hasMarkers()\n\n    const bars = this.tooltipUtil.getElBars()\n\n    if (w.config.legend.tooltipHoverFormatter) {\n      let legendFormatter = w.config.legend.tooltipHoverFormatter\n\n      let els = Array.from(this.legendLabels)\n\n      // reset all legend values first\n      els.forEach((l) => {\n        const legendName = l.getAttribute('data:default-text')\n        l.innerHTML = decodeURIComponent(legendName)\n      })\n\n      // for irregular time series\n      for (let i = 0; i < els.length; i++) {\n        const l = els[i]\n        const lsIndex = parseInt(l.getAttribute('i'), 10)\n        const legendName = decodeURIComponent(\n          l.getAttribute('data:default-text')\n        )\n\n        let text = legendFormatter(legendName, {\n          seriesIndex: shared ? lsIndex : capturedSeries,\n          dataPointIndex: j,\n          w\n        })\n\n        if (!shared) {\n          l.innerHTML = lsIndex === capturedSeries ? text : legendName\n          if (capturedSeries === lsIndex) {\n            break\n          }\n        } else {\n          l.innerHTML =\n            w.globals.collapsedSeriesIndices.indexOf(lsIndex) < 0\n              ? text\n              : legendName\n        }\n      }\n    }\n\n    if (shared) {\n      ttCtx.tooltipLabels.drawSeriesTexts({\n        ttItems,\n        i: capturedSeries,\n        j,\n        shared: this.showOnIntersect ? false : this.tConfig.shared\n      })\n\n      if (hasMarkers) {\n        if (w.globals.markers.largestSize > 0) {\n          ttCtx.marker.enlargePoints(j)\n        } else {\n          ttCtx.tooltipPosition.moveDynamicPointsOnHover(j)\n        }\n      }\n\n      if (this.tooltipUtil.hasBars()) {\n        this.barSeriesHeight = this.tooltipUtil.getBarsHeight(bars)\n        if (this.barSeriesHeight > 0) {\n          // hover state, activate snap filter\n          let graphics = new Graphics(this.ctx)\n          let paths = w.globals.dom.Paper.select(\n            `.apexcharts-bar-area[j='${j}']`\n          )\n\n          // de-activate first\n          this.deactivateHoverFilter()\n\n          this.tooltipPosition.moveStickyTooltipOverBars(j)\n\n          for (let b = 0; b < paths.length; b++) {\n            graphics.pathMouseEnter(paths[b])\n          }\n        }\n      }\n    } else {\n      ttCtx.tooltipLabels.drawSeriesTexts({\n        shared: false,\n        ttItems,\n        i: capturedSeries,\n        j\n      })\n\n      if (this.tooltipUtil.hasBars()) {\n        ttCtx.tooltipPosition.moveStickyTooltipOverBars(j)\n      }\n\n      if (hasMarkers) {\n        ttCtx.tooltipPosition.moveMarkers(capturedSeries, j)\n      }\n    }\n  }\n}\n","import CoreUtils from '../modules/CoreUtils'\nimport Bar from './Bar'\nimport Graphics from '../modules/Graphics'\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts BarStacked Class responsible for drawing both Stacked Columns and Bars.\n *\n * @module BarStacked\n * The whole calculation for stacked bar/column is different from normal bar/column,\n * hence it makes sense to derive a new class for it extending most of the props of Parent Bar\n **/\n\nclass BarStacked extends Bar {\n  draw(series, seriesIndex) {\n    let w = this.w\n    this.graphics = new Graphics(this.ctx)\n    this.bar = new Bar(this.ctx, this.xyRatios)\n\n    const coreUtils = new CoreUtils(this.ctx, w)\n    series = coreUtils.getLogSeries(series)\n    this.yRatio = coreUtils.getLogYRatios(this.yRatio)\n\n    this.barHelpers.initVariables(series)\n\n    if (w.config.chart.stackType === '100%') {\n      series = w.globals.seriesPercent.slice()\n    }\n\n    this.series = series\n\n    this.totalItems = 0\n\n    this.prevY = [] // y position on chart\n    this.prevX = [] // x position on chart\n    this.prevYF = [] // y position including shapes on chart\n    this.prevXF = [] // x position including shapes on chart\n    this.prevYVal = [] // y values (series[i][j]) in columns\n    this.prevXVal = [] // x values (series[i][j]) in bars\n\n    this.xArrj = [] // xj indicates x position on graph in bars\n    this.xArrjF = [] // xjF indicates bar's x position + roundedShape's positions in bars\n    this.xArrjVal = [] // x val means the actual series's y values in horizontal/bars\n    this.yArrj = [] // yj indicates y position on graph in columns\n    this.yArrjF = [] // yjF indicates bar's y position + roundedShape's positions in columns\n    this.yArrjVal = [] // y val means the actual series's y values in columns\n\n    for (let sl = 0; sl < series.length; sl++) {\n      if (series[sl].length > 0) {\n        this.totalItems += series[sl].length\n      }\n    }\n\n    let ret = this.graphics.group({\n      class: 'apexcharts-bar-series apexcharts-plot-series'\n    })\n\n    let x = 0\n    let y = 0\n\n    for (let i = 0, bc = 0; i < series.length; i++, bc++) {\n      let xDivision // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n      let yDivision // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n      let zeroH // zeroH is the baseline where 0 meets y axis\n      let zeroW // zeroW is the baseline where 0 meets x axis\n\n      let xArrValues = []\n      let yArrValues = []\n\n      let realIndex = w.globals.comboCharts ? seriesIndex[i] : i\n\n      if (this.yRatio.length > 1) {\n        this.yaxisIndex = realIndex\n      }\n\n      this.isReversed =\n        w.config.yaxis[this.yaxisIndex] &&\n        w.config.yaxis[this.yaxisIndex].reversed\n\n      // el to which series will be drawn\n      let elSeries = this.graphics.group({\n        class: `apexcharts-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n        rel: i + 1,\n        'data:realIndex': realIndex\n      })\n      this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex)\n\n      // eldatalabels\n      let elDataLabelsWrap = this.graphics.group({\n        class: 'apexcharts-datalabels',\n        'data:realIndex': realIndex\n      })\n\n      let barHeight = 0\n      let barWidth = 0\n\n      let initPositions = this.initialPositions(\n        x,\n        y,\n        xDivision,\n        yDivision,\n        zeroH,\n        zeroW\n      )\n      y = initPositions.y\n      barHeight = initPositions.barHeight\n      yDivision = initPositions.yDivision\n      zeroW = initPositions.zeroW\n\n      x = initPositions.x\n      barWidth = initPositions.barWidth\n      xDivision = initPositions.xDivision\n      zeroH = initPositions.zeroH\n\n      this.yArrj = []\n      this.yArrjF = []\n      this.yArrjVal = []\n      this.xArrj = []\n      this.xArrjF = []\n      this.xArrjVal = []\n\n      // if (!this.horizontal) {\n      // this.xArrj.push(x + barWidth / 2)\n      // }\n\n      // fix issue #1215;\n      // where all stack bar disappear after collapsing the first series\n      // sol: if only 1 arr in this.prevY(this.prevY.length === 1) and all are NaN\n      if (this.prevY.length === 1 && this.prevY[0].every((val) => isNaN(val))) {\n        // make this.prevY[0] all zeroH\n        this.prevY[0] = this.prevY[0].map((val) => zeroH)\n        // make this.prevYF[0] all 0\n        this.prevYF[0] = this.prevYF[0].map((val) => 0)\n      }\n\n      for (let j = 0; j < w.globals.dataPoints; j++) {\n        const strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex)\n        const commonPathOpts = {\n          indexes: { i, j, realIndex, bc },\n          strokeWidth,\n          x,\n          y,\n          elSeries\n        }\n        let paths = null\n        if (this.isHorizontal) {\n          paths = this.drawStackedBarPaths({\n            ...commonPathOpts,\n            zeroW,\n            barHeight,\n            yDivision\n          })\n          barWidth = this.series[i][j] / this.invertedYRatio\n        } else {\n          paths = this.drawStackedColumnPaths({\n            ...commonPathOpts,\n            xDivision,\n            barWidth,\n            zeroH\n          })\n          barHeight = this.series[i][j] / this.yRatio[this.yaxisIndex]\n        }\n\n        y = paths.y\n        x = paths.x\n\n        xArrValues.push(x)\n        yArrValues.push(y)\n\n        let pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex)\n\n        elSeries = this.renderSeries({\n          realIndex,\n          pathFill,\n          j,\n          i,\n          pathFrom: paths.pathFrom,\n          pathTo: paths.pathTo,\n          strokeWidth,\n          elSeries,\n          x,\n          y,\n          series,\n          barHeight,\n          barWidth,\n          elDataLabelsWrap,\n          type: 'bar',\n          visibleSeries: 0\n        })\n      }\n\n      // push all x val arrays into main xArr\n      w.globals.seriesXvalues[realIndex] = xArrValues\n      w.globals.seriesYvalues[realIndex] = yArrValues\n\n      // push all current y values array to main PrevY Array\n      this.prevY.push(this.yArrj)\n      this.prevYF.push(this.yArrjF)\n      this.prevYVal.push(this.yArrjVal)\n      this.prevX.push(this.xArrj)\n      this.prevXF.push(this.xArrjF)\n      this.prevXVal.push(this.xArrjVal)\n\n      ret.add(elSeries)\n    }\n\n    return ret\n  }\n\n  initialPositions(x, y, xDivision, yDivision, zeroH, zeroW) {\n    let w = this.w\n\n    let barHeight, barWidth\n    if (this.isHorizontal) {\n      // height divided into equal parts\n      yDivision = w.globals.gridHeight / w.globals.dataPoints\n      barHeight = yDivision\n\n      barHeight =\n        (barHeight * parseInt(w.config.plotOptions.bar.barHeight, 10)) / 100\n\n      zeroW =\n        this.baseLineInvertedY +\n        w.globals.padHorizontal +\n        (this.isReversed ? w.globals.gridWidth : 0) -\n        (this.isReversed ? this.baseLineInvertedY * 2 : 0)\n\n      // initial y position is half of barHeight * half of number of Bars\n      y = (yDivision - barHeight) / 2\n    } else {\n      // width divided into equal parts\n      xDivision = w.globals.gridWidth / w.globals.dataPoints\n\n      barWidth = xDivision\n\n      if (w.globals.isXNumeric && w.globals.dataPoints > 1) {\n        // the check (w.globals.dataPoints > 1) fixes apexcharts.js #1617\n        xDivision = w.globals.minXDiff / this.xRatio\n        barWidth = (xDivision * parseInt(this.barOptions.columnWidth, 10)) / 100\n      } else {\n        barWidth =\n          (barWidth * parseInt(w.config.plotOptions.bar.columnWidth, 10)) / 100\n      }\n\n      zeroH =\n        this.baseLineY[this.yaxisIndex] +\n        (this.isReversed ? w.globals.gridHeight : 0) -\n        (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0)\n\n      // initial x position is one third of barWidth\n      x = w.globals.padHorizontal + (xDivision - barWidth) / 2\n    }\n    return {\n      x,\n      y,\n      yDivision,\n      xDivision,\n      barHeight,\n      barWidth,\n      zeroH,\n      zeroW\n    }\n  }\n\n  drawStackedBarPaths({\n    indexes,\n    barHeight,\n    strokeWidth,\n    zeroW,\n    x,\n    y,\n    yDivision,\n    elSeries\n  }) {\n    let w = this.w\n    let barYPosition = y\n    let barXPosition\n    let i = indexes.i\n    let j = indexes.j\n\n    let prevBarW = 0\n    for (let k = 0; k < this.prevXF.length; k++) {\n      prevBarW = prevBarW + this.prevXF[k][j]\n    }\n\n    if (i > 0) {\n      let bXP = zeroW\n\n      if (this.prevXVal[i - 1][j] < 0) {\n        bXP =\n          this.series[i][j] >= 0\n            ? this.prevX[i - 1][j] +\n              prevBarW -\n              (this.isReversed ? prevBarW : 0) * 2\n            : this.prevX[i - 1][j]\n      } else if (this.prevXVal[i - 1][j] >= 0) {\n        bXP =\n          this.series[i][j] >= 0\n            ? this.prevX[i - 1][j]\n            : this.prevX[i - 1][j] -\n              prevBarW +\n              (this.isReversed ? prevBarW : 0) * 2\n      }\n\n      barXPosition = bXP\n    } else {\n      // the first series will not have prevX values\n      barXPosition = zeroW\n    }\n\n    if (this.series[i][j] === null) {\n      x = barXPosition\n    } else {\n      x =\n        barXPosition +\n        this.series[i][j] / this.invertedYRatio -\n        (this.isReversed ? this.series[i][j] / this.invertedYRatio : 0) * 2\n    }\n\n    const paths = this.barHelpers.getBarpaths({\n      barYPosition,\n      barHeight,\n      x1: barXPosition,\n      x2: x,\n      strokeWidth,\n      series: this.series,\n      realIndex: indexes.realIndex,\n      i,\n      j,\n      w\n    })\n\n    this.barHelpers.barBackground({\n      j,\n      i,\n      y1: barYPosition,\n      y2: barHeight,\n      elSeries\n    })\n\n    y = y + yDivision\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      x,\n      y\n    }\n  }\n\n  drawStackedColumnPaths({\n    indexes,\n    x,\n    y,\n    xDivision,\n    barWidth,\n    zeroH,\n    strokeWidth,\n    elSeries\n  }) {\n    let w = this.w\n    let i = indexes.i\n    let j = indexes.j\n    let bc = indexes.bc\n\n    if (w.globals.isXNumeric) {\n      let seriesVal = w.globals.seriesX[i][j]\n      if (!seriesVal) seriesVal = 0\n      x = (seriesVal - w.globals.minX) / this.xRatio - barWidth / 2\n    }\n\n    let barXPosition = x\n    let barYPosition\n\n    let prevBarH = 0\n    for (let k = 0; k < this.prevYF.length; k++) {\n      // fix issue #1215\n      // in case where this.prevYF[k][j] is NaN, use 0 instead\n      prevBarH = prevBarH + (!isNaN(this.prevYF[k][j]) ? this.prevYF[k][j] : 0)\n    }\n\n    if (\n      (i > 0 && !w.globals.isXNumeric) ||\n      (i > 0 &&\n        w.globals.isXNumeric &&\n        w.globals.seriesX[i - 1][j] === w.globals.seriesX[i][j])\n    ) {\n      let bYP\n      let prevYValue\n      const p = Math.min(this.yRatio.length + 1, i + 1)\n      if (this.prevY[i - 1] !== undefined) {\n        for (let ii = 1; ii < p; ii++) {\n          if (!isNaN(this.prevY[i - ii][j])) {\n            // find the previous available value to give prevYValue\n            prevYValue = this.prevY[i - ii][j]\n            // if found it, break the loop\n            break\n          }\n        }\n      }\n\n      for (let ii = 1; ii < p; ii++) {\n        // find the previous available value(non-NaN) to give bYP\n        if (this.prevYVal[i - ii][j] < 0) {\n          bYP =\n            this.series[i][j] >= 0\n              ? prevYValue - prevBarH + (this.isReversed ? prevBarH : 0) * 2\n              : prevYValue\n          // found it? break the loop\n          break\n        } else if (this.prevYVal[i - ii][j] >= 0) {\n          bYP =\n            this.series[i][j] >= 0\n              ? prevYValue\n              : prevYValue + prevBarH - (this.isReversed ? prevBarH : 0) * 2\n          // found it? break the loop\n          break\n        }\n      }\n\n      if (typeof bYP === 'undefined') bYP = w.globals.gridHeight\n\n      // if this.prevYF[0] is all 0 resulted from line #486\n      // AND every arr starting from the second only contains NaN\n      if (\n        this.prevYF[0].every((val) => val === 0) &&\n        this.prevYF.slice(1, i).every((arr) => arr.every((val) => isNaN(val)))\n      ) {\n        // Use the same calc way as line #485\n        barYPosition = w.globals.gridHeight - zeroH\n      } else {\n        // Nothing special\n        barYPosition = bYP\n      }\n    } else {\n      // the first series will not have prevY values, also if the prev index's series X doesn't matches the current index's series X, then start from zero\n      barYPosition = w.globals.gridHeight - zeroH\n    }\n\n    y =\n      barYPosition -\n      this.series[i][j] / this.yRatio[this.yaxisIndex] +\n      (this.isReversed ? this.series[i][j] / this.yRatio[this.yaxisIndex] : 0) *\n        2\n\n    const paths = this.barHelpers.getColumnPaths({\n      barXPosition,\n      barWidth,\n      y1: barYPosition,\n      y2: y,\n      yRatio: this.yRatio[this.yaxisIndex],\n      strokeWidth: this.strokeWidth,\n      series: this.series,\n      realIndex: indexes.realIndex,\n      i,\n      j,\n      w\n    })\n\n    this.barHelpers.barBackground({\n      bc,\n      j,\n      i,\n      x1: barXPosition,\n      x2: barWidth,\n      elSeries\n    })\n\n    x = x + xDivision\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      x: w.globals.isXNumeric ? x - xDivision : x,\n      y\n    }\n  }\n}\n\nexport default BarStacked\n","import CoreUtils from '../modules/CoreUtils'\nimport Bar from './Bar'\nimport Fill from '../modules/Fill'\nimport Graphics from '../modules/Graphics'\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts BoxCandleStick Class responsible for drawing both Stacked Columns and Bars.\n *\n * @module BoxCandleStick\n **/\n\nclass BoxCandleStick extends Bar {\n  draw(series, seriesIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n    let fill = new Fill(this.ctx)\n\n    this.candlestickOptions = this.w.config.plotOptions.candlestick\n    this.boxOptions = this.w.config.plotOptions.boxPlot\n\n    const coreUtils = new CoreUtils(this.ctx, w)\n    series = coreUtils.getLogSeries(series)\n    this.series = series\n    this.yRatio = coreUtils.getLogYRatios(this.yRatio)\n\n    this.barHelpers.initVariables(series)\n\n    let ret = graphics.group({\n      class: `apexcharts-${w.config.chart.type}-series apexcharts-plot-series`\n    })\n\n    for (let i = 0; i < series.length; i++) {\n      this.isBoxPlot =\n        w.config.chart.type === 'boxPlot' ||\n        w.config.series[i].type === 'boxPlot'\n\n      let x,\n        y,\n        xDivision, // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n        zeroH // zeroH is the baseline where 0 meets y axis\n\n      let yArrj = [] // hold y values of current iterating series\n      let xArrj = [] // hold x values of current iterating series\n\n      let realIndex = w.globals.comboCharts ? seriesIndex[i] : i\n\n      // el to which series will be drawn\n      let elSeries = graphics.group({\n        class: `apexcharts-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n        rel: i + 1,\n        'data:realIndex': realIndex\n      })\n\n      if (series[i].length > 0) {\n        this.visibleI = this.visibleI + 1\n      }\n\n      let barHeight = 0\n      let barWidth = 0\n\n      if (this.yRatio.length > 1) {\n        this.yaxisIndex = realIndex\n      }\n\n      let initPositions = this.barHelpers.initialPositions()\n\n      y = initPositions.y\n      barHeight = initPositions.barHeight\n\n      x = initPositions.x\n      barWidth = initPositions.barWidth\n      xDivision = initPositions.xDivision\n      zeroH = initPositions.zeroH\n\n      xArrj.push(x + barWidth / 2)\n\n      // eldatalabels\n      let elDataLabelsWrap = graphics.group({\n        class: 'apexcharts-datalabels',\n        'data:realIndex': realIndex\n      })\n\n      for (let j = 0; j < w.globals.dataPoints; j++) {\n        const strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex)\n\n        let paths = this.drawBoxPaths({\n          indexes: {\n            i,\n            j,\n            realIndex\n          },\n          x,\n          y,\n          xDivision,\n          barWidth,\n          zeroH,\n          strokeWidth,\n          elSeries\n        })\n\n        y = paths.y\n        x = paths.x\n\n        // push current X\n        if (j > 0) {\n          xArrj.push(x + barWidth / 2)\n        }\n\n        yArrj.push(y)\n\n        paths.pathTo.forEach((pathTo, pi) => {\n          let lineFill =\n            !this.isBoxPlot && this.candlestickOptions.wick.useFillColor\n              ? paths.color[pi]\n              : w.globals.stroke.colors[i]\n\n          let pathFill = fill.fillPath({\n            seriesNumber: realIndex,\n            dataPointIndex: j,\n            color: paths.color[pi],\n            value: series[i][j]\n          })\n\n          this.renderSeries({\n            realIndex,\n            pathFill,\n            lineFill,\n            j,\n            i,\n            pathFrom: paths.pathFrom,\n            pathTo,\n            strokeWidth,\n            elSeries,\n            x,\n            y,\n            series,\n            barHeight,\n            barWidth,\n            elDataLabelsWrap,\n            visibleSeries: this.visibleI,\n            type: w.config.chart.type\n          })\n        })\n      }\n\n      // push all x val arrays into main xArr\n      w.globals.seriesXvalues[realIndex] = xArrj\n      w.globals.seriesYvalues[realIndex] = yArrj\n\n      ret.add(elSeries)\n    }\n\n    return ret\n  }\n\n  drawBoxPaths({ indexes, x, y, xDivision, barWidth, zeroH, strokeWidth }) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    let i = indexes.i\n    let j = indexes.j\n\n    let isPositive = true\n    let colorPos = w.config.plotOptions.candlestick.colors.upward\n    let colorNeg = w.config.plotOptions.candlestick.colors.downward\n    let color = ''\n\n    if (this.isBoxPlot) {\n      color = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]\n    }\n\n    const yRatio = this.yRatio[this.yaxisIndex]\n    let realIndex = indexes.realIndex\n\n    const ohlc = this.getOHLCValue(realIndex, j)\n    let l1 = zeroH\n    let l2 = zeroH\n\n    if (ohlc.o > ohlc.c) {\n      isPositive = false\n    }\n\n    let y1 = Math.min(ohlc.o, ohlc.c)\n    let y2 = Math.max(ohlc.o, ohlc.c)\n    let m = ohlc.m\n\n    if (w.globals.isXNumeric) {\n      x =\n        (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio -\n        barWidth / 2\n    }\n\n    let barXPosition = x + barWidth * this.visibleI\n\n    if (\n      typeof this.series[i][j] === 'undefined' ||\n      this.series[i][j] === null\n    ) {\n      y1 = zeroH\n      y2 = zeroH\n    } else {\n      y1 = zeroH - y1 / yRatio\n      y2 = zeroH - y2 / yRatio\n      l1 = zeroH - ohlc.h / yRatio\n      l2 = zeroH - ohlc.l / yRatio\n      m = zeroH - ohlc.m / yRatio\n    }\n\n    let pathTo = graphics.move(barXPosition, zeroH)\n    let pathFrom = graphics.move(barXPosition + barWidth / 2, y1)\n    if (w.globals.previousPaths.length > 0) {\n      pathFrom = this.getPreviousPath(realIndex, j, true)\n    }\n\n    if (this.isBoxPlot) {\n      pathTo = [\n        graphics.move(barXPosition, y1) +\n          graphics.line(barXPosition + barWidth / 2, y1) +\n          graphics.line(barXPosition + barWidth / 2, l1) +\n          graphics.line(barXPosition + barWidth / 4, l1) +\n          graphics.line(barXPosition + barWidth - barWidth / 4, l1) +\n          graphics.line(barXPosition + barWidth / 2, l1) +\n          graphics.line(barXPosition + barWidth / 2, y1) +\n          graphics.line(barXPosition + barWidth, y1) +\n          graphics.line(barXPosition + barWidth, m) +\n          graphics.line(barXPosition, m) +\n          graphics.line(barXPosition, y1 + strokeWidth / 2),\n        graphics.move(barXPosition, m) +\n          graphics.line(barXPosition + barWidth, m) +\n          graphics.line(barXPosition + barWidth, y2) +\n          graphics.line(barXPosition + barWidth / 2, y2) +\n          graphics.line(barXPosition + barWidth / 2, l2) +\n          graphics.line(barXPosition + barWidth - barWidth / 4, l2) +\n          graphics.line(barXPosition + barWidth / 4, l2) +\n          graphics.line(barXPosition + barWidth / 2, l2) +\n          graphics.line(barXPosition + barWidth / 2, y2) +\n          graphics.line(barXPosition, y2) +\n          graphics.line(barXPosition, m) +\n          'z'\n      ]\n    } else {\n      // candlestick\n      pathTo = [\n        graphics.move(barXPosition, y2) +\n          graphics.line(barXPosition + barWidth / 2, y2) +\n          graphics.line(barXPosition + barWidth / 2, l1) +\n          graphics.line(barXPosition + barWidth / 2, y2) +\n          graphics.line(barXPosition + barWidth, y2) +\n          graphics.line(barXPosition + barWidth, y1) +\n          graphics.line(barXPosition + barWidth / 2, y1) +\n          graphics.line(barXPosition + barWidth / 2, l2) +\n          graphics.line(barXPosition + barWidth / 2, y1) +\n          graphics.line(barXPosition, y1) +\n          graphics.line(barXPosition, y2 - strokeWidth / 2)\n      ]\n    }\n\n    pathFrom = pathFrom + graphics.move(barXPosition, y1)\n\n    if (!w.globals.isXNumeric) {\n      x = x + xDivision\n    }\n\n    return {\n      pathTo,\n      pathFrom,\n      x,\n      y: y2,\n      barXPosition,\n      color: this.isBoxPlot ? color : isPositive ? [colorPos] : [colorNeg]\n    }\n  }\n\n  getOHLCValue(i, j) {\n    const w = this.w\n\n    return {\n      o: this.isBoxPlot\n        ? w.globals.seriesCandleH[i][j]\n        : w.globals.seriesCandleO[i][j],\n      h: this.isBoxPlot\n        ? w.globals.seriesCandleO[i][j]\n        : w.globals.seriesCandleH[i][j],\n      m: w.globals.seriesCandleM[i][j],\n      l: this.isBoxPlot\n        ? w.globals.seriesCandleC[i][j]\n        : w.globals.seriesCandleL[i][j],\n      c: this.isBoxPlot\n        ? w.globals.seriesCandleL[i][j]\n        : w.globals.seriesCandleC[i][j]\n    }\n  }\n}\n\nexport default BoxCandleStick\n","import Utils from '../../../utils/Utils'\nimport Graphics from '../../../modules/Graphics'\nimport DataLabels from '../../../modules/DataLabels'\n\nexport default class TreemapHelpers {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  checkColorRange() {\n    const w = this.w\n\n    let negRange = false\n    let chartOpts = w.config.plotOptions[w.config.chart.type]\n\n    if (chartOpts.colorScale.ranges.length > 0) {\n      chartOpts.colorScale.ranges.map((range, index) => {\n        if (range.from <= 0) {\n          negRange = true\n        }\n      })\n    }\n    return negRange\n  }\n\n  getShadeColor(chartType, i, j, negRange) {\n    const w = this.w\n\n    let colorShadePercent = 1\n    let shadeIntensity = w.config.plotOptions[chartType].shadeIntensity\n\n    const colorProps = this.determineColor(chartType, i, j)\n\n    if (w.globals.hasNegs || negRange) {\n      if (w.config.plotOptions[chartType].reverseNegativeShade) {\n        if (colorProps.percent < 0) {\n          colorShadePercent =\n            (colorProps.percent / 100) * (shadeIntensity * 1.25)\n        } else {\n          colorShadePercent =\n            (1 - colorProps.percent / 100) * (shadeIntensity * 1.25)\n        }\n      } else {\n        if (colorProps.percent <= 0) {\n          colorShadePercent =\n            1 - (1 + colorProps.percent / 100) * shadeIntensity\n        } else {\n          colorShadePercent = (1 - colorProps.percent / 100) * shadeIntensity\n        }\n      }\n    } else {\n      colorShadePercent = 1 - colorProps.percent / 100\n      if (chartType === 'treemap') {\n        colorShadePercent =\n          (1 - colorProps.percent / 100) * (shadeIntensity * 1.25)\n      }\n    }\n\n    let color = colorProps.color\n    let utils = new Utils()\n\n    if (w.config.plotOptions[chartType].enableShades) {\n      if (this.w.config.theme.mode === 'dark') {\n        color = Utils.hexToRgba(\n          utils.shadeColor(colorShadePercent * -1, colorProps.color),\n          w.config.fill.opacity\n        )\n      } else {\n        color = Utils.hexToRgba(\n          utils.shadeColor(colorShadePercent, colorProps.color),\n          w.config.fill.opacity\n        )\n      }\n    }\n\n    return { color, colorProps }\n  }\n\n  determineColor(chartType, i, j) {\n    const w = this.w\n\n    let val = w.globals.series[i][j]\n\n    let chartOpts = w.config.plotOptions[chartType]\n\n    let seriesNumber = chartOpts.colorScale.inverse ? j : i\n\n    const isDistributed = w.config.plotOptions[chartType].distributed\n    if (isDistributed) {\n      seriesNumber = j\n    }\n\n    let color = w.globals.colors[seriesNumber]\n    let foreColor = null\n    let min = Math.min(...w.globals.series[i])\n    let max = Math.max(...w.globals.series[i])\n\n    if (!chartOpts.distributed && chartType === 'heatmap') {\n      min = w.globals.minY\n      max = w.globals.maxY\n    }\n\n    if (typeof chartOpts.colorScale.min !== 'undefined') {\n      min =\n        chartOpts.colorScale.min < w.globals.minY\n          ? chartOpts.colorScale.min\n          : w.globals.minY\n      max =\n        chartOpts.colorScale.max > w.globals.maxY\n          ? chartOpts.colorScale.max\n          : w.globals.maxY\n    }\n\n    let total = Math.abs(max) + Math.abs(min)\n\n    let percent = (100 * val) / (total === 0 ? total - 0.000001 : total)\n\n    if (chartOpts.colorScale.ranges.length > 0) {\n      const colorRange = chartOpts.colorScale.ranges\n      colorRange.map((range, index) => {\n        if (val >= range.from && val <= range.to) {\n          color = range.color\n          foreColor = range.foreColor ? range.foreColor : null\n          min = range.from\n          max = range.to\n          let rTotal = Math.abs(max) + Math.abs(min)\n          percent = (100 * val) / (rTotal === 0 ? rTotal - 0.000001 : rTotal)\n        }\n      })\n    }\n\n    return {\n      color,\n      foreColor,\n      percent\n    }\n  }\n\n  calculateDataLabels({ text, x, y, i, j, colorProps, fontSize }) {\n    let w = this.w\n    let dataLabelsConfig = w.config.dataLabels\n\n    const graphics = new Graphics(this.ctx)\n\n    let dataLabels = new DataLabels(this.ctx)\n\n    let elDataLabelsWrap = null\n\n    if (dataLabelsConfig.enabled) {\n      elDataLabelsWrap = graphics.group({\n        class: 'apexcharts-data-labels'\n      })\n\n      const offX = dataLabelsConfig.offsetX\n      const offY = dataLabelsConfig.offsetY\n\n      let dataLabelsX = x + offX\n      let dataLabelsY =\n        y + parseFloat(dataLabelsConfig.style.fontSize) / 3 + offY\n\n      dataLabels.plotDataLabelsText({\n        x: dataLabelsX,\n        y: dataLabelsY,\n        text,\n        i,\n        j,\n        color: colorProps.foreColor,\n        parent: elDataLabelsWrap,\n        fontSize,\n        dataLabelsConfig\n      })\n    }\n\n    return elDataLabelsWrap\n  }\n\n  addListeners(elRect) {\n    const graphics = new Graphics(this.ctx)\n    elRect.node.addEventListener(\n      'mouseenter',\n      graphics.pathMouseEnter.bind(this, elRect)\n    )\n    elRect.node.addEventListener(\n      'mouseleave',\n      graphics.pathMouseLeave.bind(this, elRect)\n    )\n    elRect.node.addEventListener(\n      'mousedown',\n      graphics.pathMouseDown.bind(this, elRect)\n    )\n  }\n}\n","import Animations from '../modules/Animations'\nimport Graphics from '../modules/Graphics'\nimport Fill from '../modules/Fill'\nimport Utils from '../utils/Utils'\nimport Helpers from './common/treemap/Helpers'\nimport Filters from '../modules/Filters'\n\n/**\n * ApexCharts HeatMap Class.\n * @module HeatMap\n **/\n\nexport default class HeatMap {\n  constructor(ctx, xyRatios) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.xRatio = xyRatios.xRatio\n    this.yRatio = xyRatios.yRatio\n\n    this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation\n\n    this.helpers = new Helpers(ctx)\n    this.rectRadius = this.w.config.plotOptions.heatmap.radius\n    this.strokeWidth = this.w.config.stroke.show\n      ? this.w.config.stroke.width\n      : 0\n  }\n\n  draw(series) {\n    let w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    let ret = graphics.group({\n      class: 'apexcharts-heatmap'\n    })\n\n    ret.attr('clip-path', `url(#gridRectMask${w.globals.cuid})`)\n\n    // width divided into equal parts\n    let xDivision = w.globals.gridWidth / w.globals.dataPoints\n    let yDivision = w.globals.gridHeight / w.globals.series.length\n\n    let y1 = 0\n    let rev = false\n\n    this.negRange = this.helpers.checkColorRange()\n\n    let heatSeries = series.slice()\n    if (w.config.yaxis[0].reversed) {\n      rev = true\n      heatSeries.reverse()\n    }\n\n    for (\n      let i = rev ? 0 : heatSeries.length - 1;\n      rev ? i < heatSeries.length : i >= 0;\n      rev ? i++ : i--\n    ) {\n      // el to which series will be drawn\n      let elSeries = graphics.group({\n        class: `apexcharts-series apexcharts-heatmap-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n        rel: i + 1,\n        'data:realIndex': i\n      })\n      this.ctx.series.addCollapsedClassToSeries(elSeries, i)\n\n      if (w.config.chart.dropShadow.enabled) {\n        const shadow = w.config.chart.dropShadow\n        const filters = new Filters(this.ctx)\n        filters.dropShadow(elSeries, shadow, i)\n      }\n\n      let x1 = 0\n      let shadeIntensity = w.config.plotOptions.heatmap.shadeIntensity\n\n      for (let j = 0; j < heatSeries[i].length; j++) {\n        let heatColor = this.helpers.getShadeColor(\n          w.config.chart.type,\n          i,\n          j,\n          this.negRange\n        )\n        let color = heatColor.color\n        let heatColorProps = heatColor.colorProps\n\n        if (w.config.fill.type === 'image') {\n          const fill = new Fill(this.ctx)\n\n          color = fill.fillPath({\n            seriesNumber: i,\n            dataPointIndex: j,\n            opacity: w.globals.hasNegs\n              ? heatColorProps.percent < 0\n                ? 1 - (1 + heatColorProps.percent / 100)\n                : shadeIntensity + heatColorProps.percent / 100\n              : heatColorProps.percent / 100,\n            patternID: Utils.randomId(),\n            width: w.config.fill.image.width\n              ? w.config.fill.image.width\n              : xDivision,\n            height: w.config.fill.image.height\n              ? w.config.fill.image.height\n              : yDivision\n          })\n        }\n\n        let radius = this.rectRadius\n\n        let rect = graphics.drawRect(x1, y1, xDivision, yDivision, radius)\n        rect.attr({\n          cx: x1,\n          cy: y1\n        })\n\n        rect.node.classList.add('apexcharts-heatmap-rect')\n        elSeries.add(rect)\n\n        rect.attr({\n          fill: color,\n          i,\n          index: i,\n          j,\n          val: heatSeries[i][j],\n          'stroke-width': this.strokeWidth,\n          stroke: w.config.plotOptions.heatmap.useFillColorAsStroke\n            ? color\n            : w.globals.stroke.colors[0],\n          color\n        })\n\n        this.helpers.addListeners(rect)\n\n        if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n          let speed = 1\n          if (!w.globals.resized) {\n            speed = w.config.chart.animations.speed\n          }\n          this.animateHeatMap(rect, x1, y1, xDivision, yDivision, speed)\n        }\n\n        if (w.globals.dataChanged) {\n          let speed = 1\n          if (this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n            speed = this.dynamicAnim.speed\n\n            let colorFrom =\n              w.globals.previousPaths[i] &&\n              w.globals.previousPaths[i][j] &&\n              w.globals.previousPaths[i][j].color\n\n            if (!colorFrom) colorFrom = 'rgba(255, 255, 255, 0)'\n\n            this.animateHeatColor(\n              rect,\n              Utils.isColorHex(colorFrom)\n                ? colorFrom\n                : Utils.rgb2hex(colorFrom),\n              Utils.isColorHex(color) ? color : Utils.rgb2hex(color),\n              speed\n            )\n          }\n        }\n\n        let formatter = w.config.dataLabels.formatter\n        let formattedText = formatter(w.globals.series[i][j], {\n          value: w.globals.series[i][j],\n          seriesIndex: i,\n          dataPointIndex: j,\n          w\n        })\n\n        let dataLabels = this.helpers.calculateDataLabels({\n          text: formattedText,\n          x: x1 + xDivision / 2,\n          y: y1 + yDivision / 2,\n          i,\n          j,\n          colorProps: heatColorProps,\n          series: heatSeries\n        })\n        if (dataLabels !== null) {\n          elSeries.add(dataLabels)\n        }\n\n        x1 = x1 + xDivision\n      }\n\n      y1 = y1 + yDivision\n\n      ret.add(elSeries)\n    }\n\n    // adjust yaxis labels for heatmap\n    let yAxisScale = w.globals.yAxisScale[0].result.slice()\n    if (w.config.yaxis[0].reversed) {\n      yAxisScale.unshift('')\n    } else {\n      yAxisScale.push('')\n    }\n    w.globals.yAxisScale[0].result = yAxisScale\n    let divisor = w.globals.gridHeight / w.globals.series.length\n    w.config.yaxis[0].labels.offsetY = -(divisor / 2)\n\n    return ret\n  }\n\n  animateHeatMap(el, x, y, width, height, speed) {\n    const animations = new Animations(this.ctx)\n    animations.animateRect(\n      el,\n      {\n        x: x + width / 2,\n        y: y + height / 2,\n        width: 0,\n        height: 0\n      },\n      {\n        x,\n        y,\n        width,\n        height\n      },\n      speed,\n      () => {\n        animations.animationCompleted(el)\n      }\n    )\n  }\n\n  animateHeatColor(el, colorFrom, colorTo, speed) {\n    el.attr({\n      fill: colorFrom\n    })\n      .animate(speed)\n      .attr({\n        fill: colorTo\n      })\n  }\n}\n","import Graphics from '../../../modules/Graphics'\n\nexport default class CircularChartsHelpers {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  drawYAxisTexts(x, y, i, text) {\n    const w = this.w\n\n    const yaxisConfig = w.config.yaxis[0]\n    const formatter = w.globals.yLabelFormatters[0]\n\n    const graphics = new Graphics(this.ctx)\n    const yaxisLabel = graphics.drawText({\n      x: x + yaxisConfig.labels.offsetX,\n      y: y + yaxisConfig.labels.offsetY,\n      text: formatter(text, i),\n      textAnchor: 'middle',\n      fontSize: yaxisConfig.labels.style.fontSize,\n      fontFamily: yaxisConfig.labels.style.fontFamily,\n      foreColor: Array.isArray(yaxisConfig.labels.style.colors)\n        ? yaxisConfig.labels.style.colors[i]\n        : yaxisConfig.labels.style.colors\n    })\n\n    return yaxisLabel\n  }\n}\n","import Animations from '../modules/Animations'\nimport Fill from '../modules/Fill'\nimport Utils from '../utils/Utils'\nimport Graphics from '../modules/Graphics'\nimport Filters from '../modules/Filters'\nimport Scales from '../modules/Scales'\nimport Helpers from './common/circle/Helpers'\n/**\n * ApexCharts Pie Class for drawing Pie / Donut Charts.\n * @module Pie\n **/\n\nclass Pie {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    const w = this.w\n\n    this.chartType = this.w.config.chart.type\n\n    this.initialAnim = this.w.config.chart.animations.enabled\n    this.dynamicAnim =\n      this.initialAnim &&\n      this.w.config.chart.animations.dynamicAnimation.enabled\n\n    this.animBeginArr = [0]\n    this.animDur = 0\n\n    this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels\n\n    this.lineColorArr =\n      w.globals.stroke.colors !== undefined\n        ? w.globals.stroke.colors\n        : w.globals.colors\n\n    this.defaultSize = Math.min(w.globals.gridWidth, w.globals.gridHeight)\n\n    this.centerY = this.defaultSize / 2\n    this.centerX = w.globals.gridWidth / 2\n\n    if (w.config.chart.type === 'radialBar') {\n      this.fullAngle = 360\n    } else {\n      this.fullAngle = Math.abs(\n        w.config.plotOptions.pie.endAngle - w.config.plotOptions.pie.startAngle\n      )\n    }\n    this.initialAngle = w.config.plotOptions.pie.startAngle % this.fullAngle\n\n    w.globals.radialSize =\n      this.defaultSize / 2.05 -\n      w.config.stroke.width -\n      (!w.config.chart.sparkline.enabled ? w.config.chart.dropShadow.blur : 0)\n\n    this.donutSize =\n      (w.globals.radialSize *\n        parseInt(w.config.plotOptions.pie.donut.size, 10)) /\n      100\n\n    this.maxY = 0\n    this.sliceLabels = []\n    this.sliceSizes = []\n\n    this.prevSectorAngleArr = [] // for dynamic animations\n  }\n\n  draw(series) {\n    let self = this\n    let w = this.w\n\n    const graphics = new Graphics(this.ctx)\n\n    this.ret = graphics.group({\n      class: 'apexcharts-pie'\n    })\n\n    if (w.globals.noData) return this.ret\n\n    let total = 0\n    for (let k = 0; k < series.length; k++) {\n      // CALCULATE THE TOTAL\n      total += Utils.negToZero(series[k])\n    }\n\n    let sectorAngleArr = []\n\n    // el to which series will be drawn\n    let elSeries = graphics.group()\n\n    // prevent division by zero error if there is no data\n    if (total === 0) {\n      total = 0.00001\n    }\n\n    series.forEach((m) => {\n      this.maxY = Math.max(this.maxY, m)\n    })\n\n    // override maxY if user provided in config\n    if (w.config.yaxis[0].max) {\n      this.maxY = w.config.yaxis[0].max\n    }\n\n    if (w.config.grid.position === 'back' && this.chartType === 'polarArea') {\n      this.drawPolarElements(this.ret)\n    }\n\n    for (let i = 0; i < series.length; i++) {\n      // CALCULATE THE ANGLES\n      let angle = (this.fullAngle * Utils.negToZero(series[i])) / total\n      sectorAngleArr.push(angle)\n\n      if (this.chartType === 'polarArea') {\n        sectorAngleArr[i] = this.fullAngle / series.length\n        this.sliceSizes.push((w.globals.radialSize * series[i]) / this.maxY)\n      } else {\n        this.sliceSizes.push(w.globals.radialSize)\n      }\n    }\n\n    if (w.globals.dataChanged) {\n      let prevTotal = 0\n      for (let k = 0; k < w.globals.previousPaths.length; k++) {\n        // CALCULATE THE PREV TOTAL\n        prevTotal += Utils.negToZero(w.globals.previousPaths[k])\n      }\n\n      let previousAngle\n\n      for (let i = 0; i < w.globals.previousPaths.length; i++) {\n        // CALCULATE THE PREVIOUS ANGLES\n        previousAngle =\n          (this.fullAngle * Utils.negToZero(w.globals.previousPaths[i])) /\n          prevTotal\n        this.prevSectorAngleArr.push(previousAngle)\n      }\n    }\n\n    // on small chart size after few count of resizes browser window donutSize can be negative\n    if (this.donutSize < 0) {\n      this.donutSize = 0\n    }\n\n    let scaleSize = w.config.plotOptions.pie.customScale\n    let halfW = w.globals.gridWidth / 2\n    let halfH = w.globals.gridHeight / 2\n    let translateX = halfW - (w.globals.gridWidth / 2) * scaleSize\n    let translateY = halfH - (w.globals.gridHeight / 2) * scaleSize\n\n    if (this.chartType === 'donut') {\n      // draw the inner circle and add some text to it\n      const circle = graphics.drawCircle(this.donutSize)\n\n      circle.attr({\n        cx: this.centerX,\n        cy: this.centerY,\n        fill: w.config.plotOptions.pie.donut.background\n          ? w.config.plotOptions.pie.donut.background\n          : 'transparent'\n      })\n\n      elSeries.add(circle)\n    }\n\n    let elG = self.drawArcs(sectorAngleArr, series)\n\n    // add slice dataLabels at the end\n    this.sliceLabels.forEach((s) => {\n      elG.add(s)\n    })\n\n    elSeries.attr({\n      transform: `translate(${translateX}, ${translateY}) scale(${scaleSize})`\n    })\n\n    elSeries.add(elG)\n\n    this.ret.add(elSeries)\n\n    if (this.donutDataLabels.show) {\n      let dataLabels = this.renderInnerDataLabels(this.donutDataLabels, {\n        hollowSize: this.donutSize,\n        centerX: this.centerX,\n        centerY: this.centerY,\n        opacity: this.donutDataLabels.show,\n        translateX,\n        translateY\n      })\n\n      this.ret.add(dataLabels)\n    }\n\n    if (w.config.grid.position === 'front' && this.chartType === 'polarArea') {\n      this.drawPolarElements(this.ret)\n    }\n\n    return this.ret\n  }\n\n  // core function for drawing pie arcs\n  drawArcs(sectorAngleArr, series) {\n    let w = this.w\n    const filters = new Filters(this.ctx)\n\n    let graphics = new Graphics(this.ctx)\n    let fill = new Fill(this.ctx)\n    let g = graphics.group({\n      class: 'apexcharts-slices'\n    })\n\n    let startAngle = this.initialAngle\n    let prevStartAngle = this.initialAngle\n    let endAngle = this.initialAngle\n    let prevEndAngle = this.initialAngle\n\n    this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0\n\n    for (let i = 0; i < sectorAngleArr.length; i++) {\n      let elPieArc = graphics.group({\n        class: `apexcharts-series apexcharts-pie-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n        rel: i + 1,\n        'data:realIndex': i\n      })\n\n      g.add(elPieArc)\n\n      startAngle = endAngle\n      prevStartAngle = prevEndAngle\n\n      endAngle = startAngle + sectorAngleArr[i]\n      prevEndAngle = prevStartAngle + this.prevSectorAngleArr[i]\n\n      const angle =\n        endAngle < startAngle\n          ? this.fullAngle + endAngle - startAngle\n          : endAngle - startAngle\n\n      let pathFill = fill.fillPath({\n        seriesNumber: i,\n        size: this.sliceSizes[i],\n        value: series[i]\n      }) // additionally, pass size for gradient drawing in the fillPath function\n\n      let path = this.getChangedPath(prevStartAngle, prevEndAngle)\n\n      let elPath = graphics.drawPath({\n        d: path,\n        stroke: Array.isArray(this.lineColorArr)\n          ? this.lineColorArr[i]\n          : this.lineColorArr,\n        strokeWidth: 0,\n        fill: pathFill,\n        fillOpacity: w.config.fill.opacity,\n        classes: `apexcharts-pie-area apexcharts-${this.chartType.toLowerCase()}-slice-${i}`\n      })\n\n      elPath.attr({\n        index: 0,\n        j: i\n      })\n\n      filters.setSelectionFilter(elPath, 0, i)\n\n      if (w.config.chart.dropShadow.enabled) {\n        const shadow = w.config.chart.dropShadow\n        filters.dropShadow(elPath, shadow, i)\n      }\n\n      this.addListeners(elPath, this.donutDataLabels)\n\n      Graphics.setAttrs(elPath.node, {\n        'data:angle': angle,\n        'data:startAngle': startAngle,\n        'data:strokeWidth': this.strokeWidth,\n        'data:value': series[i]\n      })\n\n      let labelPosition = {\n        x: 0,\n        y: 0\n      }\n\n      if (this.chartType === 'pie' || this.chartType === 'polarArea') {\n        labelPosition = Utils.polarToCartesian(\n          this.centerX,\n          this.centerY,\n          w.globals.radialSize / 1.25 +\n            w.config.plotOptions.pie.dataLabels.offset,\n          (startAngle + angle / 2) % this.fullAngle\n        )\n      } else if (this.chartType === 'donut') {\n        labelPosition = Utils.polarToCartesian(\n          this.centerX,\n          this.centerY,\n          (w.globals.radialSize + this.donutSize) / 2 +\n            w.config.plotOptions.pie.dataLabels.offset,\n          (startAngle + angle / 2) % this.fullAngle\n        )\n      }\n\n      elPieArc.add(elPath)\n\n      // Animation code starts\n      let dur = 0\n      if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n        dur = (angle / this.fullAngle) * w.config.chart.animations.speed\n\n        if (dur === 0) dur = 1\n        this.animDur = dur + this.animDur\n        this.animBeginArr.push(this.animDur)\n      } else {\n        this.animBeginArr.push(0)\n      }\n\n      if (this.dynamicAnim && w.globals.dataChanged) {\n        this.animatePaths(elPath, {\n          size: this.sliceSizes[i],\n          endAngle,\n          startAngle,\n          prevStartAngle,\n          prevEndAngle,\n          animateStartingPos: true,\n          i,\n          animBeginArr: this.animBeginArr,\n          shouldSetPrevPaths: true,\n          dur: w.config.chart.animations.dynamicAnimation.speed\n        })\n      } else {\n        this.animatePaths(elPath, {\n          size: this.sliceSizes[i],\n          endAngle,\n          startAngle,\n          i,\n          totalItems: sectorAngleArr.length - 1,\n          animBeginArr: this.animBeginArr,\n          dur\n        })\n      }\n      // animation code ends\n\n      if (\n        w.config.plotOptions.pie.expandOnClick &&\n        this.chartType !== 'polarArea'\n      ) {\n        elPath.click(this.pieClicked.bind(this, i))\n      }\n\n      if (\n        typeof w.globals.selectedDataPoints[0] !== 'undefined' &&\n        w.globals.selectedDataPoints[0].indexOf(i) > -1\n      ) {\n        this.pieClicked(i)\n      }\n\n      if (w.config.dataLabels.enabled) {\n        let xPos = labelPosition.x\n        let yPos = labelPosition.y\n        let text = (100 * angle) / this.fullAngle + '%'\n\n        if (\n          angle !== 0 &&\n          w.config.plotOptions.pie.dataLabels.minAngleToShowLabel <\n            sectorAngleArr[i]\n        ) {\n          let formatter = w.config.dataLabels.formatter\n          if (formatter !== undefined) {\n            text = formatter(w.globals.seriesPercent[i][0], {\n              seriesIndex: i,\n              w\n            })\n          }\n          let foreColor = w.globals.dataLabels.style.colors[i]\n\n          const elPieLabelWrap = graphics.group({\n            class: `apexcharts-datalabels`\n          })\n          let elPieLabel = graphics.drawText({\n            x: xPos,\n            y: yPos,\n            text,\n            textAnchor: 'middle',\n            fontSize: w.config.dataLabels.style.fontSize,\n            fontFamily: w.config.dataLabels.style.fontFamily,\n            fontWeight: w.config.dataLabels.style.fontWeight,\n            foreColor\n          })\n\n          elPieLabelWrap.add(elPieLabel)\n          if (w.config.dataLabels.dropShadow.enabled) {\n            const textShadow = w.config.dataLabels.dropShadow\n            filters.dropShadow(elPieLabel, textShadow)\n          }\n\n          elPieLabel.node.classList.add('apexcharts-pie-label')\n          if (\n            w.config.chart.animations.animate &&\n            w.globals.resized === false\n          ) {\n            elPieLabel.node.classList.add('apexcharts-pie-label-delay')\n            elPieLabel.node.style.animationDelay =\n              w.config.chart.animations.speed / 940 + 's'\n          }\n\n          this.sliceLabels.push(elPieLabelWrap)\n        }\n      }\n    }\n\n    return g\n  }\n\n  addListeners(elPath, dataLabels) {\n    const graphics = new Graphics(this.ctx)\n    // append filters on mouseenter and mouseleave\n    elPath.node.addEventListener(\n      'mouseenter',\n      graphics.pathMouseEnter.bind(this, elPath)\n    )\n\n    elPath.node.addEventListener(\n      'mouseleave',\n      graphics.pathMouseLeave.bind(this, elPath)\n    )\n    elPath.node.addEventListener(\n      'mouseleave',\n      this.revertDataLabelsInner.bind(this, elPath.node, dataLabels)\n    )\n    elPath.node.addEventListener(\n      'mousedown',\n      graphics.pathMouseDown.bind(this, elPath)\n    )\n\n    if (!this.donutDataLabels.total.showAlways) {\n      elPath.node.addEventListener(\n        'mouseenter',\n        this.printDataLabelsInner.bind(this, elPath.node, dataLabels)\n      )\n\n      elPath.node.addEventListener(\n        'mousedown',\n        this.printDataLabelsInner.bind(this, elPath.node, dataLabels)\n      )\n    }\n  }\n\n  // This function can be used for other circle charts too\n  animatePaths(el, opts) {\n    let w = this.w\n    let me = this\n\n    let angle =\n      opts.endAngle < opts.startAngle\n        ? this.fullAngle + opts.endAngle - opts.startAngle\n        : opts.endAngle - opts.startAngle\n    let prevAngle = angle\n\n    let fromStartAngle = opts.startAngle\n    let toStartAngle = opts.startAngle\n\n    if (opts.prevStartAngle !== undefined && opts.prevEndAngle !== undefined) {\n      fromStartAngle = opts.prevEndAngle\n      prevAngle =\n        opts.prevEndAngle < opts.prevStartAngle\n          ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle\n          : opts.prevEndAngle - opts.prevStartAngle\n    }\n    if (opts.i === w.config.series.length - 1) {\n      // some adjustments for the last overlapping paths\n      if (angle + toStartAngle > this.fullAngle) {\n        opts.endAngle = opts.endAngle - (angle + toStartAngle)\n      } else if (angle + toStartAngle < this.fullAngle) {\n        opts.endAngle =\n          opts.endAngle + (this.fullAngle - (angle + toStartAngle))\n      }\n    }\n\n    if (angle === this.fullAngle) angle = this.fullAngle - 0.01\n\n    me.animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts)\n  }\n\n  animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts) {\n    let me = this\n    const w = this.w\n    const animations = new Animations(this.ctx)\n\n    let size = opts.size\n\n    let path\n\n    if (isNaN(fromStartAngle) || isNaN(prevAngle)) {\n      fromStartAngle = toStartAngle\n      prevAngle = angle\n      opts.dur = 0\n    }\n\n    let currAngle = angle\n    let startAngle = toStartAngle\n    let fromAngle =\n      fromStartAngle < toStartAngle\n        ? this.fullAngle + fromStartAngle - toStartAngle\n        : fromStartAngle - toStartAngle\n\n    if (w.globals.dataChanged && opts.shouldSetPrevPaths) {\n      // to avoid flicker when updating, set prev path first and then animate from there\n      if (opts.prevEndAngle) {\n        path = me.getPiePath({\n          me,\n          startAngle: opts.prevStartAngle,\n          angle:\n            opts.prevEndAngle < opts.prevStartAngle\n              ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle\n              : opts.prevEndAngle - opts.prevStartAngle,\n          size\n        })\n        el.attr({ d: path })\n      }\n    }\n\n    if (opts.dur !== 0) {\n      el.animate(opts.dur, w.globals.easing, opts.animBeginArr[opts.i])\n        .afterAll(function() {\n          if (\n            me.chartType === 'pie' ||\n            me.chartType === 'donut' ||\n            me.chartType === 'polarArea'\n          ) {\n            this.animate(w.config.chart.animations.dynamicAnimation.speed).attr(\n              {\n                'stroke-width': me.strokeWidth\n              }\n            )\n          }\n\n          if (opts.i === w.config.series.length - 1) {\n            animations.animationCompleted(el)\n          }\n        })\n        .during((pos) => {\n          currAngle = fromAngle + (angle - fromAngle) * pos\n          if (opts.animateStartingPos) {\n            currAngle = prevAngle + (angle - prevAngle) * pos\n            startAngle =\n              fromStartAngle -\n              prevAngle +\n              (toStartAngle - (fromStartAngle - prevAngle)) * pos\n          }\n\n          path = me.getPiePath({\n            me,\n            startAngle,\n            angle: currAngle,\n            size\n          })\n\n          el.node.setAttribute('data:pathOrig', path)\n\n          el.attr({\n            d: path\n          })\n        })\n    } else {\n      path = me.getPiePath({\n        me,\n        startAngle,\n        angle,\n        size\n      })\n\n      if (!opts.isTrack) {\n        w.globals.animationEnded = true\n      }\n      el.node.setAttribute('data:pathOrig', path)\n\n      el.attr({\n        d: path,\n        'stroke-width': me.strokeWidth\n      })\n    }\n  }\n\n  pieClicked(i) {\n    let w = this.w\n    let me = this\n    let path\n\n    let size =\n      me.sliceSizes[i] + (w.config.plotOptions.pie.expandOnClick ? 4 : 0)\n    let elPath = w.globals.dom.Paper.select(\n      `.apexcharts-${me.chartType.toLowerCase()}-slice-${i}`\n    ).members[0]\n\n    if (elPath.attr('data:pieClicked') === 'true') {\n      elPath.attr({\n        'data:pieClicked': 'false'\n      })\n      this.revertDataLabelsInner(elPath.node, this.donutDataLabels)\n\n      let origPath = elPath.attr('data:pathOrig')\n      elPath.attr({\n        d: origPath\n      })\n      return\n    } else {\n      // reset all elems\n      let allEls = w.globals.dom.baseEl.getElementsByClassName(\n        'apexcharts-pie-area'\n      )\n      Array.prototype.forEach.call(allEls, (pieSlice) => {\n        pieSlice.setAttribute('data:pieClicked', 'false')\n        let origPath = pieSlice.getAttribute('data:pathOrig')\n        pieSlice.setAttribute('d', origPath)\n      })\n      elPath.attr('data:pieClicked', 'true')\n    }\n\n    let startAngle = parseInt(elPath.attr('data:startAngle'), 10)\n    let angle = parseInt(elPath.attr('data:angle'), 10)\n\n    path = me.getPiePath({\n      me,\n      startAngle,\n      angle,\n      size\n    })\n\n    if (angle === 360) return\n\n    elPath.plot(path)\n  }\n\n  getChangedPath(prevStartAngle, prevEndAngle) {\n    let path = ''\n    if (this.dynamicAnim && this.w.globals.dataChanged) {\n      path = this.getPiePath({\n        me: this,\n        startAngle: prevStartAngle,\n        angle: prevEndAngle - prevStartAngle,\n        size: this.size\n      })\n    }\n    return path\n  }\n\n  getPiePath({ me, startAngle, angle, size }) {\n    let path\n\n    let startDeg = startAngle\n    let startRadians = (Math.PI * (startDeg - 90)) / 180\n\n    let endDeg = angle + startAngle\n    // prevent overlap\n    if (\n      Math.ceil(endDeg) >=\n      this.fullAngle +\n        (this.w.config.plotOptions.pie.startAngle % this.fullAngle)\n    ) {\n      endDeg =\n        this.fullAngle +\n        (this.w.config.plotOptions.pie.startAngle % this.fullAngle) -\n        0.01\n    }\n    if (Math.ceil(endDeg) > this.fullAngle) endDeg -= this.fullAngle\n\n    let endRadians = (Math.PI * (endDeg - 90)) / 180\n\n    let x1 = me.centerX + size * Math.cos(startRadians)\n    let y1 = me.centerY + size * Math.sin(startRadians)\n    let x2 = me.centerX + size * Math.cos(endRadians)\n    let y2 = me.centerY + size * Math.sin(endRadians)\n\n    let startInner = Utils.polarToCartesian(\n      me.centerX,\n      me.centerY,\n      me.donutSize,\n      endDeg\n    )\n    let endInner = Utils.polarToCartesian(\n      me.centerX,\n      me.centerY,\n      me.donutSize,\n      startDeg\n    )\n\n    let largeArc = angle > 180 ? 1 : 0\n\n    const pathBeginning = ['M', x1, y1, 'A', size, size, 0, largeArc, 1, x2, y2]\n\n    if (me.chartType === 'donut') {\n      path = [\n        ...pathBeginning,\n        'L',\n        startInner.x,\n        startInner.y,\n        'A',\n        me.donutSize,\n        me.donutSize,\n        0,\n        largeArc,\n        0,\n        endInner.x,\n        endInner.y,\n        'L',\n        x1,\n        y1,\n        'z'\n      ].join(' ')\n    } else if (me.chartType === 'pie' || me.chartType === 'polarArea') {\n      path = [...pathBeginning, 'L', me.centerX, me.centerY, 'L', x1, y1].join(\n        ' '\n      )\n    } else {\n      path = [...pathBeginning].join(' ')\n    }\n\n    return path\n  }\n\n  drawPolarElements(parent) {\n    const w = this.w\n    const scale = new Scales(this.ctx)\n    const graphics = new Graphics(this.ctx)\n    const helpers = new Helpers(this.ctx)\n\n    const gCircles = graphics.group()\n    const gYAxis = graphics.group()\n\n    const yScale = scale.niceScale(\n      0,\n      Math.ceil(this.maxY),\n      w.config.yaxis[0].tickAmount,\n      0,\n      true\n    )\n\n    const yTexts = yScale.result.reverse()\n    let len = yScale.result.length\n\n    this.maxY = yScale.niceMax\n\n    let circleSize = w.globals.radialSize\n    let diff = circleSize / (len - 1)\n\n    for (let i = 0; i < len - 1; i++) {\n      const circle = graphics.drawCircle(circleSize)\n\n      circle.attr({\n        cx: this.centerX,\n        cy: this.centerY,\n        fill: 'none',\n        'stroke-width': w.config.plotOptions.polarArea.rings.strokeWidth,\n        stroke: w.config.plotOptions.polarArea.rings.strokeColor\n      })\n\n      if (w.config.yaxis[0].show) {\n        const yLabel = helpers.drawYAxisTexts(\n          this.centerX,\n          this.centerY -\n            circleSize +\n            parseInt(w.config.yaxis[0].labels.style.fontSize, 10) / 2,\n          i,\n          yTexts[i]\n        )\n\n        gYAxis.add(yLabel)\n      }\n\n      gCircles.add(circle)\n\n      circleSize = circleSize - diff\n    }\n\n    this.drawSpokes(parent)\n\n    parent.add(gCircles)\n    parent.add(gYAxis)\n  }\n\n  renderInnerDataLabels(dataLabelsConfig, opts) {\n    let w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    let g = graphics.group({\n      class: 'apexcharts-datalabels-group',\n      transform: `translate(${opts.translateX ? opts.translateX : 0}, ${\n        opts.translateY ? opts.translateY : 0\n      }) scale(${w.config.plotOptions.pie.customScale})`\n    })\n\n    const showTotal = dataLabelsConfig.total.show\n\n    g.node.style.opacity = opts.opacity\n\n    let x = opts.centerX\n    let y = opts.centerY\n\n    let labelColor, valueColor\n\n    if (dataLabelsConfig.name.color === undefined) {\n      labelColor = w.globals.colors[0]\n    } else {\n      labelColor = dataLabelsConfig.name.color\n    }\n    let labelFontSize = dataLabelsConfig.name.fontSize\n    let labelFontFamily = dataLabelsConfig.name.fontFamily\n    let labelFontWeight = dataLabelsConfig.value.fontWeight\n\n    if (dataLabelsConfig.value.color === undefined) {\n      valueColor = w.config.chart.foreColor\n    } else {\n      valueColor = dataLabelsConfig.value.color\n    }\n\n    let lbFormatter = dataLabelsConfig.value.formatter\n    let val = ''\n    let name = ''\n\n    if (showTotal) {\n      labelColor = dataLabelsConfig.total.color\n      labelFontSize = dataLabelsConfig.total.fontSize\n      labelFontFamily = dataLabelsConfig.total.fontFamily\n      labelFontWeight = dataLabelsConfig.total.fontWeight\n      name = dataLabelsConfig.total.label\n      val = dataLabelsConfig.total.formatter(w)\n    } else {\n      if (w.globals.series.length === 1) {\n        val = lbFormatter(w.globals.series[0], w)\n        name = w.globals.seriesNames[0]\n      }\n    }\n\n    if (name) {\n      name = dataLabelsConfig.name.formatter(\n        name,\n        dataLabelsConfig.total.show,\n        w\n      )\n    }\n\n    if (dataLabelsConfig.name.show) {\n      let elLabel = graphics.drawText({\n        x,\n        y: y + parseFloat(dataLabelsConfig.name.offsetY),\n        text: name,\n        textAnchor: 'middle',\n        foreColor: labelColor,\n        fontSize: labelFontSize,\n        fontWeight: labelFontWeight,\n        fontFamily: labelFontFamily\n      })\n      elLabel.node.classList.add('apexcharts-datalabel-label')\n      g.add(elLabel)\n    }\n\n    if (dataLabelsConfig.value.show) {\n      let valOffset = dataLabelsConfig.name.show\n        ? parseFloat(dataLabelsConfig.value.offsetY) + 16\n        : dataLabelsConfig.value.offsetY\n\n      let elValue = graphics.drawText({\n        x,\n        y: y + valOffset,\n        text: val,\n        textAnchor: 'middle',\n        foreColor: valueColor,\n        fontWeight: dataLabelsConfig.value.fontWeight,\n        fontSize: dataLabelsConfig.value.fontSize,\n        fontFamily: dataLabelsConfig.value.fontFamily\n      })\n      elValue.node.classList.add('apexcharts-datalabel-value')\n      g.add(elValue)\n    }\n\n    // for a multi-series circle chart, we need to show total value instead of first series labels\n\n    return g\n  }\n\n  /**\n   *\n   * @param {string} name - The name of the series\n   * @param {string} val - The value of that series\n   * @param {object} el - Optional el (indicates which series was hovered/clicked). If this param is not present, means we need to show total\n   */\n  printInnerLabels(labelsConfig, name, val, el) {\n    const w = this.w\n\n    let labelColor\n\n    if (el) {\n      if (labelsConfig.name.color === undefined) {\n        labelColor =\n          w.globals.colors[parseInt(el.parentNode.getAttribute('rel'), 10) - 1]\n      } else {\n        labelColor = labelsConfig.name.color\n      }\n    } else {\n      if (w.globals.series.length > 1 && labelsConfig.total.show) {\n        labelColor = labelsConfig.total.color\n      }\n    }\n\n    let elLabel = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-datalabel-label'\n    )\n    let elValue = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-datalabel-value'\n    )\n\n    let lbFormatter = labelsConfig.value.formatter\n    val = lbFormatter(val, w)\n\n    // we need to show Total Val - so get the formatter of it\n    if (!el && typeof labelsConfig.total.formatter === 'function') {\n      val = labelsConfig.total.formatter(w)\n    }\n\n    const isTotal = name === labelsConfig.total.label\n    name = labelsConfig.name.formatter(name, isTotal, w)\n\n    if (elLabel !== null) {\n      elLabel.textContent = name\n    }\n\n    if (elValue !== null) {\n      elValue.textContent = val\n    }\n    if (elLabel !== null) {\n      elLabel.style.fill = labelColor\n    }\n  }\n\n  printDataLabelsInner(el, dataLabelsConfig) {\n    let w = this.w\n\n    let val = el.getAttribute('data:value')\n    let name =\n      w.globals.seriesNames[parseInt(el.parentNode.getAttribute('rel'), 10) - 1]\n\n    if (w.globals.series.length > 1) {\n      this.printInnerLabels(dataLabelsConfig, name, val, el)\n    }\n\n    let dataLabelsGroup = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-datalabels-group'\n    )\n    if (dataLabelsGroup !== null) {\n      dataLabelsGroup.style.opacity = 1\n    }\n  }\n\n  drawSpokes(parent) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n    const spokeConfig = w.config.plotOptions.polarArea.spokes\n\n    if (spokeConfig.strokeWidth === 0) return\n\n    let spokes = []\n\n    let angleDivision = 360 / w.globals.series.length\n    for (let i = 0; i < w.globals.series.length; i++) {\n      spokes.push(\n        Utils.polarToCartesian(\n          this.centerX,\n          this.centerY,\n          w.globals.radialSize,\n          w.config.plotOptions.pie.startAngle + angleDivision * i\n        )\n      )\n    }\n\n    spokes.forEach((p, i) => {\n      const line = graphics.drawLine(\n        p.x,\n        p.y,\n        this.centerX,\n        this.centerY,\n        Array.isArray(spokeConfig.connectorColors)\n          ? spokeConfig.connectorColors[i]\n          : spokeConfig.connectorColors\n      )\n\n      parent.add(line)\n    })\n  }\n\n  revertDataLabelsInner(elem, dataLabelsConfig, event) {\n    let w = this.w\n    let dataLabelsGroup = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-datalabels-group'\n    )\n\n    let sliceOut = false\n    const slices = w.globals.dom.baseEl.getElementsByClassName(\n      `apexcharts-pie-area`\n    )\n\n    const selectSlice = ({ makeSliceOut, printLabel }) => {\n      Array.prototype.forEach.call(slices, (s) => {\n        if (s.getAttribute('data:pieClicked') === 'true') {\n          if (makeSliceOut) {\n            sliceOut = true\n          }\n          if (printLabel) {\n            this.printDataLabelsInner(s, dataLabelsConfig)\n          }\n        }\n      })\n    }\n\n    selectSlice({ makeSliceOut: true, printLabel: false })\n\n    if (dataLabelsConfig.total.show && w.globals.series.length > 1) {\n      if (sliceOut && !dataLabelsConfig.total.showAlways) {\n        selectSlice({ makeSliceOut: false, printLabel: true })\n      } else {\n        this.printInnerLabels(\n          dataLabelsConfig,\n          dataLabelsConfig.total.label,\n          dataLabelsConfig.total.formatter(w)\n        )\n      }\n    } else {\n      selectSlice({ makeSliceOut: false, printLabel: true })\n\n      if (!sliceOut) {\n        if (\n          w.globals.selectedDataPoints.length &&\n          w.globals.series.length > 1\n        ) {\n          if (w.globals.selectedDataPoints[0].length > 0) {\n            const index = w.globals.selectedDataPoints[0]\n            const el = w.globals.dom.baseEl.querySelector(\n              `.apexcharts-${this.chartType.toLowerCase()}-slice-${index}`\n            )\n\n            this.printDataLabelsInner(el, dataLabelsConfig)\n          } else if (\n            dataLabelsGroup &&\n            w.globals.selectedDataPoints.length &&\n            w.globals.selectedDataPoints[0].length === 0\n          ) {\n            dataLabelsGroup.style.opacity = 0\n          }\n        } else {\n          if (dataLabelsGroup && w.globals.series.length > 1) {\n            dataLabelsGroup.style.opacity = 0\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Pie\n","import Fill from '../modules/Fill'\nimport Graphics from '../modules/Graphics'\nimport Markers from '../modules/Markers'\nimport DataLabels from '../modules/DataLabels'\nimport Filters from '../modules/Filters'\nimport Utils from '../utils/Utils'\nimport Helpers from './common/circle/Helpers'\nimport CoreUtils from '../modules/CoreUtils'\n\n/**\n * ApexCharts Radar Class for Spider/Radar Charts.\n * @module Radar\n **/\n\nclass Radar {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.chartType = this.w.config.chart.type\n\n    this.initialAnim = this.w.config.chart.animations.enabled\n    this.dynamicAnim =\n      this.initialAnim &&\n      this.w.config.chart.animations.dynamicAnimation.enabled\n\n    this.animDur = 0\n\n    const w = this.w\n    this.graphics = new Graphics(this.ctx)\n\n    this.lineColorArr =\n      w.globals.stroke.colors !== undefined\n        ? w.globals.stroke.colors\n        : w.globals.colors\n\n    this.defaultSize =\n      w.globals.svgHeight < w.globals.svgWidth\n        ? w.globals.gridHeight + w.globals.goldenPadding * 1.5\n        : w.globals.gridWidth\n\n    this.isLog = w.config.yaxis[0].logarithmic\n\n    this.coreUtils = new CoreUtils(this.ctx)\n    this.maxValue = this.isLog\n      ? this.coreUtils.getLogVal(w.globals.maxY, 0)\n      : w.globals.maxY\n    this.minValue = this.isLog\n      ? this.coreUtils.getLogVal(this.w.globals.minY, 0)\n      : w.globals.minY\n\n    this.polygons = w.config.plotOptions.radar.polygons\n\n    this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0\n\n    this.size =\n      this.defaultSize / 2.1 - this.strokeWidth - w.config.chart.dropShadow.blur\n\n    if (w.config.xaxis.labels.show) {\n      this.size = this.size - w.globals.xAxisLabelsWidth / 1.75\n    }\n\n    if (w.config.plotOptions.radar.size !== undefined) {\n      this.size = w.config.plotOptions.radar.size\n    }\n\n    this.dataRadiusOfPercent = []\n    this.dataRadius = []\n    this.angleArr = []\n\n    this.yaxisLabelsTextsPos = []\n  }\n\n  draw(series) {\n    let w = this.w\n    const fill = new Fill(this.ctx)\n\n    const allSeries = []\n    const dataLabels = new DataLabels(this.ctx)\n\n    if (series.length) {\n      this.dataPointsLen = series[w.globals.maxValsInArrayIndex].length\n    }\n    this.disAngle = (Math.PI * 2) / this.dataPointsLen\n\n    let halfW = w.globals.gridWidth / 2\n    let halfH = w.globals.gridHeight / 2\n    let translateX = halfW + w.config.plotOptions.radar.offsetX\n    let translateY = halfH + w.config.plotOptions.radar.offsetY\n\n    let ret = this.graphics.group({\n      class: 'apexcharts-radar-series apexcharts-plot-series',\n      transform: `translate(${translateX || 0}, ${translateY || 0})`\n    })\n\n    let dataPointsPos = []\n    let elPointsMain = null\n    let elDataPointsMain = null\n\n    this.yaxisLabels = this.graphics.group({\n      class: 'apexcharts-yaxis'\n    })\n\n    series.forEach((s, i) => {\n      let longestSeries = s.length === w.globals.dataPoints\n\n      // el to which series will be drawn\n      let elSeries = this.graphics.group().attr({\n        class: `apexcharts-series`,\n        'data:longestSeries': longestSeries,\n        seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n        rel: i + 1,\n        'data:realIndex': i\n      })\n\n      this.dataRadiusOfPercent[i] = []\n      this.dataRadius[i] = []\n      this.angleArr[i] = []\n\n      s.forEach((dv, j) => {\n        const range = Math.abs(this.maxValue - this.minValue)\n        dv = dv + Math.abs(this.minValue)\n\n        if (this.isLog) {\n          dv = this.coreUtils.getLogVal(dv, 0)\n        }\n\n        this.dataRadiusOfPercent[i][j] = dv / range\n\n        this.dataRadius[i][j] = this.dataRadiusOfPercent[i][j] * this.size\n        this.angleArr[i][j] = j * this.disAngle\n      })\n\n      dataPointsPos = this.getDataPointsPos(\n        this.dataRadius[i],\n        this.angleArr[i]\n      )\n      const paths = this.createPaths(dataPointsPos, {\n        x: 0,\n        y: 0\n      })\n\n      // points\n      elPointsMain = this.graphics.group({\n        class: 'apexcharts-series-markers-wrap apexcharts-element-hidden'\n      })\n\n      // datapoints\n      elDataPointsMain = this.graphics.group({\n        class: `apexcharts-datalabels`,\n        'data:realIndex': i\n      })\n\n      w.globals.delayedElements.push({\n        el: elPointsMain.node,\n        index: i\n      })\n\n      const defaultRenderedPathOptions = {\n        i,\n        realIndex: i,\n        animationDelay: i,\n        initialSpeed: w.config.chart.animations.speed,\n        dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n        className: `apexcharts-radar`,\n        shouldClipToGrid: false,\n        bindEventsOnPaths: false,\n        stroke: w.globals.stroke.colors[i],\n        strokeLineCap: w.config.stroke.lineCap\n      }\n\n      let pathFrom = null\n\n      if (w.globals.previousPaths.length > 0) {\n        pathFrom = this.getPreviousPath(i)\n      }\n\n      for (let p = 0; p < paths.linePathsTo.length; p++) {\n        let renderedLinePath = this.graphics.renderPaths({\n          ...defaultRenderedPathOptions,\n          pathFrom: pathFrom === null ? paths.linePathsFrom[p] : pathFrom,\n          pathTo: paths.linePathsTo[p],\n          strokeWidth: Array.isArray(this.strokeWidth)\n            ? this.strokeWidth[i]\n            : this.strokeWidth,\n          fill: 'none',\n          drawShadow: false\n        })\n\n        elSeries.add(renderedLinePath)\n\n        let pathFill = fill.fillPath({\n          seriesNumber: i\n        })\n\n        let renderedAreaPath = this.graphics.renderPaths({\n          ...defaultRenderedPathOptions,\n          pathFrom: pathFrom === null ? paths.areaPathsFrom[p] : pathFrom,\n          pathTo: paths.areaPathsTo[p],\n          strokeWidth: 0,\n          fill: pathFill,\n          drawShadow: false\n        })\n\n        if (w.config.chart.dropShadow.enabled) {\n          const filters = new Filters(this.ctx)\n\n          const shadow = w.config.chart.dropShadow\n          filters.dropShadow(\n            renderedAreaPath,\n            Object.assign({}, shadow, { noUserSpaceOnUse: true }),\n            i\n          )\n        }\n\n        elSeries.add(renderedAreaPath)\n      }\n\n      s.forEach((sj, j) => {\n        let markers = new Markers(this.ctx)\n\n        let opts = markers.getMarkerConfig('apexcharts-marker', i, j)\n\n        let point = this.graphics.drawMarker(\n          dataPointsPos[j].x,\n          dataPointsPos[j].y,\n          opts\n        )\n\n        point.attr('rel', j)\n        point.attr('j', j)\n        point.attr('index', i)\n        point.node.setAttribute('default-marker-size', opts.pSize)\n\n        let elPointsWrap = this.graphics.group({\n          class: 'apexcharts-series-markers'\n        })\n\n        if (elPointsWrap) {\n          elPointsWrap.add(point)\n        }\n\n        elPointsMain.add(elPointsWrap)\n\n        elSeries.add(elPointsMain)\n\n        const dataLabelsConfig = w.config.dataLabels\n\n        if (dataLabelsConfig.enabled) {\n          let text = dataLabelsConfig.formatter(w.globals.series[i][j], {\n            seriesIndex: i,\n            dataPointIndex: j,\n            w\n          })\n\n          dataLabels.plotDataLabelsText({\n            x: dataPointsPos[j].x,\n            y: dataPointsPos[j].y,\n            text,\n            textAnchor: 'middle',\n            i,\n            j: i,\n            parent: elDataPointsMain,\n            offsetCorrection: false,\n            dataLabelsConfig: {\n              ...dataLabelsConfig\n            }\n          })\n        }\n        elSeries.add(elDataPointsMain)\n      })\n\n      allSeries.push(elSeries)\n    })\n\n    this.drawPolygons({\n      parent: ret\n    })\n\n    if (w.config.xaxis.labels.show) {\n      const xaxisTexts = this.drawXAxisTexts()\n      ret.add(xaxisTexts)\n    }\n\n    allSeries.forEach((elS) => {\n      ret.add(elS)\n    })\n\n    ret.add(this.yaxisLabels)\n\n    return ret\n  }\n\n  drawPolygons(opts) {\n    const w = this.w\n    const { parent } = opts\n    const helpers = new Helpers(this.ctx)\n\n    const yaxisTexts = w.globals.yAxisScale[0].result.reverse()\n    const layers = yaxisTexts.length\n\n    let radiusSizes = []\n    let layerDis = this.size / (layers - 1)\n    for (let i = 0; i < layers; i++) {\n      radiusSizes[i] = layerDis * i\n    }\n    radiusSizes.reverse()\n\n    let polygonStrings = []\n    let lines = []\n\n    radiusSizes.forEach((radiusSize, r) => {\n      const polygon = Utils.getPolygonPos(radiusSize, this.dataPointsLen)\n      let string = ''\n\n      polygon.forEach((p, i) => {\n        if (r === 0) {\n          const line = this.graphics.drawLine(\n            p.x,\n            p.y,\n            0,\n            0,\n            Array.isArray(this.polygons.connectorColors)\n              ? this.polygons.connectorColors[i]\n              : this.polygons.connectorColors\n          )\n\n          lines.push(line)\n        }\n\n        if (i === 0) {\n          this.yaxisLabelsTextsPos.push({\n            x: p.x,\n            y: p.y\n          })\n        }\n\n        string += p.x + ',' + p.y + ' '\n      })\n\n      polygonStrings.push(string)\n    })\n\n    polygonStrings.forEach((p, i) => {\n      const strokeColors = this.polygons.strokeColors\n      const strokeWidth = this.polygons.strokeWidth\n      const polygon = this.graphics.drawPolygon(\n        p,\n        Array.isArray(strokeColors) ? strokeColors[i] : strokeColors,\n        Array.isArray(strokeWidth) ? strokeWidth[i] : strokeWidth,\n        w.globals.radarPolygons.fill.colors[i]\n      )\n      parent.add(polygon)\n    })\n\n    lines.forEach((l) => {\n      parent.add(l)\n    })\n\n    if (w.config.yaxis[0].show) {\n      this.yaxisLabelsTextsPos.forEach((p, i) => {\n        const yText = helpers.drawYAxisTexts(p.x, p.y, i, yaxisTexts[i])\n        this.yaxisLabels.add(yText)\n      })\n    }\n  }\n\n  drawXAxisTexts() {\n    const w = this.w\n\n    const xaxisLabelsConfig = w.config.xaxis.labels\n    let elXAxisWrap = this.graphics.group({\n      class: 'apexcharts-xaxis'\n    })\n\n    let polygonPos = Utils.getPolygonPos(this.size, this.dataPointsLen)\n\n    w.globals.labels.forEach((label, i) => {\n      let formatter = w.config.xaxis.labels.formatter\n      let dataLabels = new DataLabels(this.ctx)\n\n      if (polygonPos[i]) {\n        let textPos = this.getTextPos(polygonPos[i], this.size)\n\n        let text = formatter(label, {\n          seriesIndex: -1,\n          dataPointIndex: i,\n          w\n        })\n\n        dataLabels.plotDataLabelsText({\n          x: textPos.newX,\n          y: textPos.newY,\n          text,\n          textAnchor: textPos.textAnchor,\n          i,\n          j: i,\n          parent: elXAxisWrap,\n          color:\n            Array.isArray(xaxisLabelsConfig.style.colors) &&\n            xaxisLabelsConfig.style.colors[i]\n              ? xaxisLabelsConfig.style.colors[i]\n              : '#a8a8a8',\n          dataLabelsConfig: {\n            textAnchor: textPos.textAnchor,\n            dropShadow: { enabled: false },\n            ...xaxisLabelsConfig\n          },\n          offsetCorrection: false\n        })\n      }\n    })\n\n    return elXAxisWrap\n  }\n\n  createPaths(pos, origin) {\n    let linePathsTo = []\n    let linePathsFrom = []\n    let areaPathsTo = []\n    let areaPathsFrom = []\n\n    if (pos.length) {\n      linePathsFrom = [this.graphics.move(origin.x, origin.y)]\n      areaPathsFrom = [this.graphics.move(origin.x, origin.y)]\n\n      let linePathTo = this.graphics.move(pos[0].x, pos[0].y)\n      let areaPathTo = this.graphics.move(pos[0].x, pos[0].y)\n\n      pos.forEach((p, i) => {\n        linePathTo += this.graphics.line(p.x, p.y)\n        areaPathTo += this.graphics.line(p.x, p.y)\n        if (i === pos.length - 1) {\n          linePathTo += 'Z'\n          areaPathTo += 'Z'\n        }\n      })\n\n      linePathsTo.push(linePathTo)\n      areaPathsTo.push(areaPathTo)\n    }\n\n    return {\n      linePathsFrom,\n      linePathsTo,\n      areaPathsFrom,\n      areaPathsTo\n    }\n  }\n\n  getTextPos(pos, polygonSize) {\n    let limit = 10\n    let textAnchor = 'middle'\n\n    let newX = pos.x\n    let newY = pos.y\n\n    if (Math.abs(pos.x) >= limit) {\n      if (pos.x > 0) {\n        textAnchor = 'start'\n        newX += 10\n      } else if (pos.x < 0) {\n        textAnchor = 'end'\n        newX -= 10\n      }\n    } else {\n      textAnchor = 'middle'\n    }\n    if (Math.abs(pos.y) >= polygonSize - limit) {\n      if (pos.y < 0) {\n        newY -= 10\n      } else if (pos.y > 0) {\n        newY += 10\n      }\n    }\n\n    return {\n      textAnchor,\n      newX,\n      newY\n    }\n  }\n\n  getPreviousPath(realIndex) {\n    let w = this.w\n    let pathFrom = null\n    for (let pp = 0; pp < w.globals.previousPaths.length; pp++) {\n      let gpp = w.globals.previousPaths[pp]\n\n      if (\n        gpp.paths.length > 0 &&\n        parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)\n      ) {\n        if (typeof w.globals.previousPaths[pp].paths[0] !== 'undefined') {\n          pathFrom = w.globals.previousPaths[pp].paths[0].d\n        }\n      }\n    }\n    return pathFrom\n  }\n\n  getDataPointsPos(\n    dataRadiusArr,\n    angleArr,\n    dataPointsLen = this.dataPointsLen\n  ) {\n    dataRadiusArr = dataRadiusArr || []\n    angleArr = angleArr || []\n    let dataPointsPosArray = []\n    for (let j = 0; j < dataPointsLen; j++) {\n      let curPointPos = {}\n      curPointPos.x = dataRadiusArr[j] * Math.sin(angleArr[j])\n      curPointPos.y = -dataRadiusArr[j] * Math.cos(angleArr[j])\n      dataPointsPosArray.push(curPointPos)\n    }\n    return dataPointsPosArray\n  }\n}\n\nexport default Radar\n","import Pie from './Pie'\nimport Utils from '../utils/Utils'\nimport Fill from '../modules/Fill'\nimport Graphics from '../modules/Graphics'\nimport Filters from '../modules/Filters'\n\n/**\n * ApexCharts Radial Class for drawing Circle / Semi Circle Charts.\n * @module Radial\n **/\n\nclass Radial extends Pie {\n  constructor(ctx) {\n    super(ctx)\n\n    this.ctx = ctx\n    this.w = ctx.w\n    this.animBeginArr = [0]\n    this.animDur = 0\n\n    const w = this.w\n    this.startAngle = w.config.plotOptions.radialBar.startAngle\n    this.endAngle = w.config.plotOptions.radialBar.endAngle\n\n    this.totalAngle = Math.abs(\n      w.config.plotOptions.radialBar.endAngle -\n        w.config.plotOptions.radialBar.startAngle\n    )\n\n    this.trackStartAngle = w.config.plotOptions.radialBar.track.startAngle\n    this.trackEndAngle = w.config.plotOptions.radialBar.track.endAngle\n\n    this.radialDataLabels = w.config.plotOptions.radialBar.dataLabels\n\n    if (!this.trackStartAngle) this.trackStartAngle = this.startAngle\n    if (!this.trackEndAngle) this.trackEndAngle = this.endAngle\n\n    if (this.endAngle === 360) this.endAngle = 359.99\n\n    this.margin = parseInt(w.config.plotOptions.radialBar.track.margin, 10)\n  }\n\n  draw(series) {\n    let w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    let ret = graphics.group({\n      class: 'apexcharts-radialbar'\n    })\n\n    if (w.globals.noData) return ret\n\n    let elSeries = graphics.group()\n\n    let centerY = this.defaultSize / 2\n    let centerX = w.globals.gridWidth / 2\n\n    let size = this.defaultSize / 2.05\n    if (!w.config.chart.sparkline.enabled) {\n      size = size - w.config.stroke.width - w.config.chart.dropShadow.blur\n    }\n    let colorArr = w.globals.fill.colors\n\n    if (w.config.plotOptions.radialBar.track.show) {\n      let elTracks = this.drawTracks({\n        size,\n        centerX,\n        centerY,\n        colorArr,\n        series\n      })\n      elSeries.add(elTracks)\n    }\n\n    let elG = this.drawArcs({\n      size,\n      centerX,\n      centerY,\n      colorArr,\n      series\n    })\n\n    let totalAngle = 360\n\n    if (w.config.plotOptions.radialBar.startAngle < 0) {\n      totalAngle = this.totalAngle\n    }\n\n    let angleRatio = (360 - totalAngle) / 360\n    w.globals.radialSize = size - size * angleRatio\n\n    if (this.radialDataLabels.value.show) {\n      let offset = Math.max(\n        this.radialDataLabels.value.offsetY,\n        this.radialDataLabels.name.offsetY\n      )\n      w.globals.radialSize += offset * angleRatio\n    }\n\n    elSeries.add(elG.g)\n\n    if (w.config.plotOptions.radialBar.hollow.position === 'front') {\n      elG.g.add(elG.elHollow)\n      if (elG.dataLabels) {\n        elG.g.add(elG.dataLabels)\n      }\n    }\n\n    ret.add(elSeries)\n\n    return ret\n  }\n\n  drawTracks(opts) {\n    let w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    let g = graphics.group({\n      class: 'apexcharts-tracks'\n    })\n\n    let filters = new Filters(this.ctx)\n    let fill = new Fill(this.ctx)\n\n    let strokeWidth = this.getStrokeWidth(opts)\n\n    opts.size = opts.size - strokeWidth / 2\n\n    for (let i = 0; i < opts.series.length; i++) {\n      let elRadialBarTrack = graphics.group({\n        class: 'apexcharts-radialbar-track apexcharts-track'\n      })\n      g.add(elRadialBarTrack)\n\n      elRadialBarTrack.attr({\n        rel: i + 1\n      })\n\n      opts.size = opts.size - strokeWidth - this.margin\n\n      const trackConfig = w.config.plotOptions.radialBar.track\n      let pathFill = fill.fillPath({\n        seriesNumber: 0,\n        size: opts.size,\n        fillColors: Array.isArray(trackConfig.background)\n          ? trackConfig.background[i]\n          : trackConfig.background,\n        solid: true\n      })\n\n      let startAngle = this.trackStartAngle\n      let endAngle = this.trackEndAngle\n\n      if (Math.abs(endAngle) + Math.abs(startAngle) >= 360)\n        endAngle = 360 - Math.abs(this.startAngle) - 0.1\n\n      let elPath = graphics.drawPath({\n        d: '',\n        stroke: pathFill,\n        strokeWidth:\n          (strokeWidth * parseInt(trackConfig.strokeWidth, 10)) / 100,\n        fill: 'none',\n        strokeOpacity: trackConfig.opacity,\n        classes: 'apexcharts-radialbar-area'\n      })\n\n      if (trackConfig.dropShadow.enabled) {\n        const shadow = trackConfig.dropShadow\n        filters.dropShadow(elPath, shadow)\n      }\n\n      elRadialBarTrack.add(elPath)\n\n      elPath.attr('id', 'apexcharts-radialbarTrack-' + i)\n\n      this.animatePaths(elPath, {\n        centerX: opts.centerX,\n        centerY: opts.centerY,\n        endAngle,\n        startAngle,\n        size: opts.size,\n        i,\n        totalItems: 2,\n        animBeginArr: 0,\n        dur: 0,\n        isTrack: true,\n        easing: w.globals.easing\n      })\n    }\n\n    return g\n  }\n\n  drawArcs(opts) {\n    let w = this.w\n    // size, donutSize, centerX, centerY, colorArr, lineColorArr, sectorAngleArr, series\n\n    let graphics = new Graphics(this.ctx)\n    let fill = new Fill(this.ctx)\n    let filters = new Filters(this.ctx)\n    let g = graphics.group()\n\n    let strokeWidth = this.getStrokeWidth(opts)\n    opts.size = opts.size - strokeWidth / 2\n\n    let hollowFillID = w.config.plotOptions.radialBar.hollow.background\n    let hollowSize =\n      opts.size -\n      strokeWidth * opts.series.length -\n      this.margin * opts.series.length -\n      (strokeWidth *\n        parseInt(w.config.plotOptions.radialBar.track.strokeWidth, 10)) /\n        100 /\n        2\n\n    let hollowRadius = hollowSize - w.config.plotOptions.radialBar.hollow.margin\n\n    if (w.config.plotOptions.radialBar.hollow.image !== undefined) {\n      hollowFillID = this.drawHollowImage(opts, g, hollowSize, hollowFillID)\n    }\n\n    let elHollow = this.drawHollow({\n      size: hollowRadius,\n      centerX: opts.centerX,\n      centerY: opts.centerY,\n      fill: hollowFillID ? hollowFillID : 'transparent'\n    })\n\n    if (w.config.plotOptions.radialBar.hollow.dropShadow.enabled) {\n      const shadow = w.config.plotOptions.radialBar.hollow.dropShadow\n      filters.dropShadow(elHollow, shadow)\n    }\n\n    let shown = 1\n    if (!this.radialDataLabels.total.show && w.globals.series.length > 1) {\n      shown = 0\n    }\n\n    let dataLabels = null\n\n    if (this.radialDataLabels.show) {\n      dataLabels = this.renderInnerDataLabels(this.radialDataLabels, {\n        hollowSize,\n        centerX: opts.centerX,\n        centerY: opts.centerY,\n        opacity: shown\n      })\n    }\n\n    if (w.config.plotOptions.radialBar.hollow.position === 'back') {\n      g.add(elHollow)\n      if (dataLabels) {\n        g.add(dataLabels)\n      }\n    }\n\n    let reverseLoop = false\n    if (w.config.plotOptions.radialBar.inverseOrder) {\n      reverseLoop = true\n    }\n\n    for (\n      let i = reverseLoop ? opts.series.length - 1 : 0;\n      reverseLoop ? i >= 0 : i < opts.series.length;\n      reverseLoop ? i-- : i++\n    ) {\n      let elRadialBarArc = graphics.group({\n        class: `apexcharts-series apexcharts-radial-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[i])\n      })\n      g.add(elRadialBarArc)\n\n      elRadialBarArc.attr({\n        rel: i + 1,\n        'data:realIndex': i\n      })\n\n      this.ctx.series.addCollapsedClassToSeries(elRadialBarArc, i)\n\n      opts.size = opts.size - strokeWidth - this.margin\n\n      let pathFill = fill.fillPath({\n        seriesNumber: i,\n        size: opts.size,\n        value: opts.series[i]\n      })\n\n      let startAngle = this.startAngle\n      let prevStartAngle\n\n      // if data exceeds 100, make it 100\n      const dataValue =\n        Utils.negToZero(opts.series[i] > 100 ? 100 : opts.series[i]) / 100\n\n      let endAngle = Math.round(this.totalAngle * dataValue) + this.startAngle\n\n      let prevEndAngle\n      if (w.globals.dataChanged) {\n        prevStartAngle = this.startAngle\n        prevEndAngle =\n          Math.round(\n            (this.totalAngle * Utils.negToZero(w.globals.previousPaths[i])) /\n              100\n          ) + prevStartAngle\n      }\n\n      const currFullAngle = Math.abs(endAngle) + Math.abs(startAngle)\n      if (currFullAngle >= 360) {\n        endAngle = endAngle - 0.01\n      }\n\n      const prevFullAngle = Math.abs(prevEndAngle) + Math.abs(prevStartAngle)\n      if (prevFullAngle >= 360) {\n        prevEndAngle = prevEndAngle - 0.01\n      }\n\n      let angle = endAngle - startAngle\n\n      const dashArray = Array.isArray(w.config.stroke.dashArray)\n        ? w.config.stroke.dashArray[i]\n        : w.config.stroke.dashArray\n\n      let elPath = graphics.drawPath({\n        d: '',\n        stroke: pathFill,\n        strokeWidth,\n        fill: 'none',\n        fillOpacity: w.config.fill.opacity,\n        classes: 'apexcharts-radialbar-area apexcharts-radialbar-slice-' + i,\n        strokeDashArray: dashArray\n      })\n\n      Graphics.setAttrs(elPath.node, {\n        'data:angle': angle,\n        'data:value': opts.series[i]\n      })\n\n      if (w.config.chart.dropShadow.enabled) {\n        const shadow = w.config.chart.dropShadow\n        filters.dropShadow(elPath, shadow, i)\n      }\n      filters.setSelectionFilter(elPath, 0, i)\n\n      this.addListeners(elPath, this.radialDataLabels)\n\n      elRadialBarArc.add(elPath)\n\n      elPath.attr({\n        index: 0,\n        j: i\n      })\n\n      let dur = 0\n      if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n        dur = ((endAngle - startAngle) / 360) * w.config.chart.animations.speed\n\n        this.animDur = dur / (opts.series.length * 1.2) + this.animDur\n        this.animBeginArr.push(this.animDur)\n      }\n\n      if (w.globals.dataChanged) {\n        dur =\n          ((endAngle - startAngle) / 360) *\n          w.config.chart.animations.dynamicAnimation.speed\n\n        this.animDur = dur / (opts.series.length * 1.2) + this.animDur\n        this.animBeginArr.push(this.animDur)\n      }\n\n      this.animatePaths(elPath, {\n        centerX: opts.centerX,\n        centerY: opts.centerY,\n        endAngle,\n        startAngle,\n        prevEndAngle,\n        prevStartAngle,\n        size: opts.size,\n        i,\n        totalItems: 2,\n        animBeginArr: this.animBeginArr,\n        dur,\n        shouldSetPrevPaths: true,\n        easing: w.globals.easing\n      })\n    }\n\n    return {\n      g,\n      elHollow,\n      dataLabels\n    }\n  }\n\n  drawHollow(opts) {\n    const graphics = new Graphics(this.ctx)\n\n    let circle = graphics.drawCircle(opts.size * 2)\n\n    circle.attr({\n      class: 'apexcharts-radialbar-hollow',\n      cx: opts.centerX,\n      cy: opts.centerY,\n      r: opts.size,\n      fill: opts.fill\n    })\n\n    return circle\n  }\n\n  drawHollowImage(opts, g, hollowSize, hollowFillID) {\n    const w = this.w\n    let fill = new Fill(this.ctx)\n\n    let randID = Utils.randomId()\n    let hollowFillImg = w.config.plotOptions.radialBar.hollow.image\n\n    if (w.config.plotOptions.radialBar.hollow.imageClipped) {\n      fill.clippedImgArea({\n        width: hollowSize,\n        height: hollowSize,\n        image: hollowFillImg,\n        patternID: `pattern${w.globals.cuid}${randID}`\n      })\n      hollowFillID = `url(#pattern${w.globals.cuid}${randID})`\n    } else {\n      const imgWidth = w.config.plotOptions.radialBar.hollow.imageWidth\n      const imgHeight = w.config.plotOptions.radialBar.hollow.imageHeight\n      if (imgWidth === undefined && imgHeight === undefined) {\n        let image = w.globals.dom.Paper.image(hollowFillImg).loaded(function(\n          loader\n        ) {\n          this.move(\n            opts.centerX -\n              loader.width / 2 +\n              w.config.plotOptions.radialBar.hollow.imageOffsetX,\n            opts.centerY -\n              loader.height / 2 +\n              w.config.plotOptions.radialBar.hollow.imageOffsetY\n          )\n        })\n        g.add(image)\n      } else {\n        let image = w.globals.dom.Paper.image(hollowFillImg).loaded(function(\n          loader\n        ) {\n          this.move(\n            opts.centerX -\n              imgWidth / 2 +\n              w.config.plotOptions.radialBar.hollow.imageOffsetX,\n            opts.centerY -\n              imgHeight / 2 +\n              w.config.plotOptions.radialBar.hollow.imageOffsetY\n          )\n          this.size(imgWidth, imgHeight)\n        })\n        g.add(image)\n      }\n    }\n    return hollowFillID\n  }\n\n  getStrokeWidth(opts) {\n    const w = this.w\n    return (\n      (opts.size *\n        (100 - parseInt(w.config.plotOptions.radialBar.hollow.size, 10))) /\n        100 /\n        (opts.series.length + 1) -\n      this.margin\n    )\n  }\n}\n\nexport default Radial\n","import Bar from './Bar'\nimport Graphics from '../modules/Graphics'\nimport Utils from '../utils/Utils'\nimport DateTime from '../utils/DateTime'\n\n/**\n * ApexCharts Gantt Class responsible for drawing Gantt chart.\n *\n * @module Gantt\n **/\n\nclass Gantt extends Bar {\n  draw(series, seriesIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    this.rangeBarOptions = this.w.config.plotOptions.rangeBar\n\n    this.series = series\n    this.seriesRangeStart = w.globals.seriesRangeStart\n    this.seriesRangeEnd = w.globals.seriesRangeEnd\n\n    this.barHelpers.initVariables(series)\n\n    let ret = graphics.group({\n      class: 'apexcharts-rangebar-series apexcharts-plot-series'\n    })\n\n    for (let i = 0; i < series.length; i++) {\n      let x,\n        y,\n        xDivision, // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n        yDivision, // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n        zeroH, // zeroH is the baseline where 0 meets y axis\n        zeroW // zeroW is the baseline where 0 meets x axis\n\n      let realIndex = w.globals.comboCharts ? seriesIndex[i] : i\n\n      // el to which series will be drawn\n      let elSeries = graphics.group({\n        class: `apexcharts-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[realIndex]),\n        rel: i + 1,\n        'data:realIndex': realIndex\n      })\n\n      if (series[i].length > 0) {\n        this.visibleI = this.visibleI + 1\n      }\n\n      let barHeight = 0\n      let barWidth = 0\n\n      if (this.yRatio.length > 1) {\n        this.yaxisIndex = realIndex\n      }\n\n      let initPositions = this.barHelpers.initialPositions()\n\n      y = initPositions.y\n      zeroW = initPositions.zeroW\n\n      x = initPositions.x\n      barWidth = initPositions.barWidth\n      xDivision = initPositions.xDivision\n      zeroH = initPositions.zeroH\n\n      // eldatalabels\n      let elDataLabelsWrap = graphics.group({\n        class: 'apexcharts-datalabels',\n        'data:realIndex': realIndex\n      })\n\n      let elGoalsMarkers = graphics.group({\n        class: 'apexcharts-rangebar-goals-markers',\n        style: `pointer-events: none`\n      })\n\n      for (let j = 0; j < w.globals.dataPoints; j++) {\n        const strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex)\n\n        const y1 = this.seriesRangeStart[i][j]\n        const y2 = this.seriesRangeEnd[i][j]\n\n        let paths = null\n        let barYPosition = null\n        const params = { x, y, strokeWidth, elSeries }\n\n        yDivision = initPositions.yDivision\n        barHeight = initPositions.barHeight\n\n        if (this.isHorizontal) {\n          barYPosition = y + barHeight * this.visibleI\n\n          let seriesLen = this.seriesLen\n          if (w.config.plotOptions.bar.rangeBarGroupRows) {\n            seriesLen = 1\n          }\n\n          let srty = (yDivision - barHeight * seriesLen) / 2\n\n          if (typeof w.config.series[i].data[j] === 'undefined') {\n            // no data exists for further indexes, hence we need to get out the innr loop.\n            // As we are iterating over total datapoints, there is a possiblity the series might not have data for j index\n            break\n          }\n\n          if (this.isTimelineBar && w.config.series[i].data[j].x) {\n            let positions = this.detectOverlappingBars({\n              i,\n              j,\n              barYPosition,\n              srty,\n              barHeight,\n              yDivision,\n              initPositions\n            })\n\n            barHeight = positions.barHeight\n            barYPosition = positions.barYPosition\n          }\n\n          paths = this.drawRangeBarPaths({\n            indexes: { i, j, realIndex },\n            barHeight,\n            barYPosition,\n            zeroW,\n            yDivision,\n            y1,\n            y2,\n            ...params\n          })\n\n          barWidth = paths.barWidth\n        } else {\n          paths = this.drawRangeColumnPaths({\n            indexes: { i, j, realIndex },\n            zeroH,\n            barWidth,\n            xDivision,\n            ...params\n          })\n\n          barHeight = paths.barHeight\n        }\n\n        const barGoalLine = this.barHelpers.drawGoalLine({\n          barXPosition: paths.barXPosition,\n          barYPosition,\n          goalX: paths.goalX,\n          goalY: paths.goalY,\n          barHeight,\n          barWidth\n        })\n\n        if (barGoalLine) {\n          elGoalsMarkers.add(barGoalLine)\n        }\n\n        y = paths.y\n        x = paths.x\n\n        let pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex)\n\n        let lineFill = w.globals.stroke.colors[realIndex]\n\n        this.renderSeries({\n          realIndex,\n          pathFill,\n          lineFill,\n          j,\n          i,\n          x,\n          y,\n          y1,\n          y2,\n          pathFrom: paths.pathFrom,\n          pathTo: paths.pathTo,\n          strokeWidth,\n          elSeries,\n          series,\n          barHeight,\n          barYPosition,\n          barWidth,\n          elDataLabelsWrap,\n          elGoalsMarkers,\n          visibleSeries: this.visibleI,\n          type: 'gantt'\n        })\n      }\n\n      ret.add(elSeries)\n    }\n\n    return ret\n  }\n\n  detectOverlappingBars({\n    i,\n    j,\n    barYPosition,\n    srty,\n    barHeight,\n    yDivision,\n    initPositions\n  }) {\n    const w = this.w\n    let overlaps = []\n    let rangeName = w.config.series[i].data[j].rangeName\n\n    const labelX = w.config.series[i].data[j].x\n    const rowIndex = w.globals.labels.indexOf(labelX)\n    const overlappedIndex = w.globals.seriesRangeBarTimeline[i].findIndex(\n      (tx) => tx.x === labelX && tx.overlaps.length > 0\n    )\n\n    if (w.config.plotOptions.bar.rangeBarGroupRows) {\n      barYPosition = srty + yDivision * rowIndex\n    } else {\n      barYPosition = srty + barHeight * this.visibleI + yDivision * rowIndex\n    }\n\n    if (overlappedIndex > -1 && !w.config.plotOptions.bar.rangeBarOverlap) {\n      overlaps = w.globals.seriesRangeBarTimeline[i][overlappedIndex].overlaps\n\n      if (overlaps.indexOf(rangeName) > -1) {\n        barHeight = initPositions.barHeight / overlaps.length\n\n        barYPosition =\n          barHeight * this.visibleI +\n          (yDivision * (100 - parseInt(this.barOptions.barHeight, 10))) /\n            100 /\n            2 +\n          barHeight * (this.visibleI + overlaps.indexOf(rangeName)) +\n          yDivision * rowIndex\n      }\n    }\n\n    return {\n      barYPosition,\n      barHeight\n    }\n  }\n\n  drawRangeColumnPaths({\n    indexes,\n    x,\n    strokeWidth,\n    xDivision,\n    barWidth,\n    zeroH\n  }) {\n    let w = this.w\n\n    let i = indexes.i\n    let j = indexes.j\n\n    const yRatio = this.yRatio[this.yaxisIndex]\n    let realIndex = indexes.realIndex\n\n    const range = this.getRangeValue(realIndex, j)\n\n    let y1 = Math.min(range.start, range.end)\n    let y2 = Math.max(range.start, range.end)\n\n    if (w.globals.isXNumeric) {\n      x =\n        (w.globals.seriesX[i][j] - w.globals.minX) / this.xRatio - barWidth / 2\n    }\n\n    let barXPosition = x + barWidth * this.visibleI\n\n    if (\n      typeof this.series[i][j] === 'undefined' ||\n      this.series[i][j] === null\n    ) {\n      y1 = zeroH\n    } else {\n      y1 = zeroH - y1 / yRatio\n      y2 = zeroH - y2 / yRatio\n    }\n    const barHeight = Math.abs(y2 - y1)\n\n    const paths = this.barHelpers.getColumnPaths({\n      barXPosition,\n      barWidth,\n      y1,\n      y2,\n      strokeWidth: this.strokeWidth,\n      series: this.seriesRangeEnd,\n      realIndex: indexes.realIndex,\n      i: realIndex,\n      j,\n      w\n    })\n\n    if (!w.globals.isXNumeric) {\n      x = x + xDivision\n    }\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      barHeight,\n      x,\n      y: y2,\n      goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n      barXPosition\n    }\n  }\n\n  drawRangeBarPaths({\n    indexes,\n    y,\n    y1,\n    y2,\n    yDivision,\n    barHeight,\n    barYPosition,\n    zeroW\n  }) {\n    let w = this.w\n\n    const x1 = zeroW + y1 / this.invertedYRatio\n    const x2 = zeroW + y2 / this.invertedYRatio\n\n    const barWidth = Math.abs(x2 - x1)\n\n    const paths = this.barHelpers.getBarpaths({\n      barYPosition,\n      barHeight,\n      x1,\n      x2,\n      strokeWidth: this.strokeWidth,\n      series: this.seriesRangeEnd,\n      i: indexes.realIndex,\n      realIndex: indexes.realIndex,\n      j: indexes.j,\n      w\n    })\n\n    if (!w.globals.isXNumeric) {\n      y = y + yDivision\n    }\n\n    return {\n      pathTo: paths.pathTo,\n      pathFrom: paths.pathFrom,\n      barWidth,\n      x: x2,\n      goalX: this.barHelpers.getGoalValues(\n        'x',\n        zeroW,\n        null,\n        indexes.realIndex,\n        indexes.j\n      ),\n      y\n    }\n  }\n\n  getRangeValue(i, j) {\n    const w = this.w\n    return {\n      start: w.globals.seriesRangeStart[i][j],\n      end: w.globals.seriesRangeEnd[i][j]\n    }\n  }\n\n  getTooltipValues({ ctx, seriesIndex, dataPointIndex, y1, y2, w }) {\n    let start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex]\n    let end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex]\n    let ylabel = w.globals.labels[dataPointIndex]\n    let seriesName = w.config.series[seriesIndex].name\n      ? w.config.series[seriesIndex].name\n      : ''\n    const yLbFormatter = w.config.tooltip.y.formatter\n    const yLbTitleFormatter = w.config.tooltip.y.title.formatter\n\n    const opts = {\n      w,\n      seriesIndex,\n      dataPointIndex,\n      start,\n      end\n    }\n\n    if (typeof yLbTitleFormatter === 'function') {\n      seriesName = yLbTitleFormatter(seriesName, opts)\n    }\n\n    if (Number.isFinite(y1) && Number.isFinite(y2)) {\n      start = y1\n      end = y2\n\n      if (w.config.series[seriesIndex].data[dataPointIndex].x) {\n        ylabel = w.config.series[seriesIndex].data[dataPointIndex].x + ':'\n      }\n\n      if (typeof yLbFormatter === 'function') {\n        ylabel = yLbFormatter(ylabel, opts)\n      }\n    }\n\n    let startVal = ''\n    let endVal = ''\n\n    const color = w.globals.colors[seriesIndex]\n    if (w.config.tooltip.x.formatter === undefined) {\n      if (w.config.xaxis.type === 'datetime') {\n        let datetimeObj = new DateTime(ctx)\n        startVal = datetimeObj.formatDate(\n          datetimeObj.getDate(start),\n          w.config.tooltip.x.format\n        )\n        endVal = datetimeObj.formatDate(\n          datetimeObj.getDate(end),\n          w.config.tooltip.x.format\n        )\n      } else {\n        startVal = start\n        endVal = end\n      }\n    } else {\n      startVal = w.config.tooltip.x.formatter(start)\n      endVal = w.config.tooltip.x.formatter(end)\n    }\n\n    return { start, end, startVal, endVal, ylabel, color, seriesName }\n  }\n\n  buildCustomTooltipHTML({ color, seriesName, ylabel, start, end }) {\n    return (\n      '<div class=\"apexcharts-tooltip-rangebar\">' +\n      '<div> <span class=\"series-name\" style=\"color: ' +\n      color +\n      '\">' +\n      (seriesName ? seriesName : '') +\n      '</span></div>' +\n      '<div> <span class=\"category\">' +\n      ylabel +\n      ' </span> <span class=\"value start-value\">' +\n      start +\n      '</span> <span class=\"separator\">-</span> <span class=\"value end-value\">' +\n      end +\n      '</span></div>' +\n      '</div>'\n    )\n  }\n}\n\nexport default Gantt\n","import CoreUtils from '../../../modules/CoreUtils'\nimport Utils from '../../../utils/Utils'\n\nexport default class Helpers {\n  constructor(lineCtx) {\n    this.w = lineCtx.w\n    this.lineCtx = lineCtx\n  }\n\n  sameValueSeriesFix(i, series) {\n    const w = this.w\n\n    if (\n      w.config.chart.type === 'line' &&\n      (w.config.fill.type === 'gradient' ||\n        w.config.fill.type[i] === 'gradient')\n    ) {\n      const coreUtils = new CoreUtils(this.lineCtx.ctx, w)\n\n      // a small adjustment to allow gradient line to draw correctly for all same values\n      /* #fix https://github.com/apexcharts/apexcharts.js/issues/358 */\n      if (coreUtils.seriesHaveSameValues(i)) {\n        let gSeries = series[i].slice()\n        gSeries[gSeries.length - 1] = gSeries[gSeries.length - 1] + 0.000001\n        series[i] = gSeries\n      }\n    }\n    return series\n  }\n\n  calculatePoints({ series, realIndex, x, y, i, j, prevY }) {\n    let w = this.w\n\n    let ptX = []\n    let ptY = []\n\n    if (j === 0) {\n      let xPT1st =\n        this.lineCtx.categoryAxisCorrection + w.config.markers.offsetX\n      // the first point for line series\n      // we need to check whether it's not a time series, because a time series may\n      // start from the middle of the x axis\n      if (w.globals.isXNumeric) {\n        xPT1st =\n          (w.globals.seriesX[realIndex][0] - w.globals.minX) /\n            this.lineCtx.xRatio +\n          w.config.markers.offsetX\n      }\n\n      // push 2 points for the first data values\n      ptX.push(xPT1st)\n      ptY.push(\n        Utils.isNumber(series[i][0]) ? prevY + w.config.markers.offsetY : null\n      )\n      ptX.push(x + w.config.markers.offsetX)\n      ptY.push(\n        Utils.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null\n      )\n    } else {\n      ptX.push(x + w.config.markers.offsetX)\n      ptY.push(\n        Utils.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null\n      )\n    }\n\n    let pointsPos = {\n      x: ptX,\n      y: ptY\n    }\n\n    return pointsPos\n  }\n\n  checkPreviousPaths({ pathFromLine, pathFromArea, realIndex }) {\n    let w = this.w\n\n    for (let pp = 0; pp < w.globals.previousPaths.length; pp++) {\n      let gpp = w.globals.previousPaths[pp]\n\n      if (\n        (gpp.type === 'line' || gpp.type === 'area') &&\n        gpp.paths.length > 0 &&\n        parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)\n      ) {\n        if (gpp.type === 'line') {\n          this.lineCtx.appendPathFrom = false\n          pathFromLine = w.globals.previousPaths[pp].paths[0].d\n        } else if (gpp.type === 'area') {\n          this.lineCtx.appendPathFrom = false\n          pathFromArea = w.globals.previousPaths[pp].paths[0].d\n\n          if (w.config.stroke.show && w.globals.previousPaths[pp].paths[1]) {\n            pathFromLine = w.globals.previousPaths[pp].paths[1].d\n          }\n        }\n      }\n    }\n\n    return {\n      pathFromLine,\n      pathFromArea\n    }\n  }\n\n  determineFirstPrevY({ i, series, prevY, lineYPosition }) {\n    let w = this.w\n    if (typeof series[i][0] !== 'undefined') {\n      if (w.config.chart.stacked) {\n        if (i > 0) {\n          // 1st y value of previous series\n          lineYPosition = this.lineCtx.prevSeriesY[i - 1][0]\n        } else {\n          // the first series will not have prevY values\n          lineYPosition = this.lineCtx.zeroY\n        }\n      } else {\n        lineYPosition = this.lineCtx.zeroY\n      }\n      prevY =\n        lineYPosition -\n        series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +\n        (this.lineCtx.isReversed\n          ? series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex]\n          : 0) *\n          2\n    } else {\n      // the first value in the current series is null\n      if (\n        w.config.chart.stacked &&\n        i > 0 &&\n        typeof series[i][0] === 'undefined'\n      ) {\n        // check for undefined value (undefined value will occur when we clear the series while user clicks on legend to hide serieses)\n        for (let s = i - 1; s >= 0; s--) {\n          // for loop to get to 1st previous value until we get it\n          if (series[s][0] !== null && typeof series[s][0] !== 'undefined') {\n            lineYPosition = this.lineCtx.prevSeriesY[s][0]\n            prevY = lineYPosition\n            break\n          }\n        }\n      }\n    }\n    return {\n      prevY,\n      lineYPosition\n    }\n  }\n}\n","import CoreUtils from '../modules/CoreUtils'\nimport Graphics from '../modules/Graphics'\nimport Fill from '../modules/Fill'\nimport DataLabels from '../modules/DataLabels'\nimport Markers from '../modules/Markers'\nimport Scatter from './Scatter'\nimport Utils from '../utils/Utils'\nimport Helpers from './common/line/Helpers'\n\n/**\n * ApexCharts Line Class responsible for drawing Line / Area Charts.\n * This class is also responsible for generating values for Bubble/Scatter charts, so need to rename it to Axis Charts to avoid confusions\n * @module Line\n **/\n\nclass Line {\n  constructor(ctx, xyRatios, isPointsChart) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.xyRatios = xyRatios\n\n    this.pointsChart =\n      !(\n        this.w.config.chart.type !== 'bubble' &&\n        this.w.config.chart.type !== 'scatter'\n      ) || isPointsChart\n\n    this.scatter = new Scatter(this.ctx)\n\n    this.noNegatives = this.w.globals.minX === Number.MAX_VALUE\n\n    this.lineHelpers = new Helpers(this)\n    this.markers = new Markers(this.ctx)\n\n    this.prevSeriesY = []\n    this.categoryAxisCorrection = 0\n    this.yaxisIndex = 0\n  }\n\n  draw(series, ptype, seriesIndex) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n    let type = w.globals.comboCharts ? ptype : w.config.chart.type\n    let ret = graphics.group({\n      class: `apexcharts-${type}-series apexcharts-plot-series`\n    })\n\n    const coreUtils = new CoreUtils(this.ctx, w)\n    this.yRatio = this.xyRatios.yRatio\n    this.zRatio = this.xyRatios.zRatio\n    this.xRatio = this.xyRatios.xRatio\n    this.baseLineY = this.xyRatios.baseLineY\n\n    series = coreUtils.getLogSeries(series)\n    this.yRatio = coreUtils.getLogYRatios(this.yRatio)\n\n    // push all series in an array, so we can draw in reverse order (for stacked charts)\n    let allSeries = []\n\n    for (let i = 0; i < series.length; i++) {\n      series = this.lineHelpers.sameValueSeriesFix(i, series)\n\n      let realIndex = w.globals.comboCharts ? seriesIndex[i] : i\n\n      this._initSerieVariables(series, i, realIndex)\n\n      let yArrj = [] // hold y values of current iterating series\n      let xArrj = [] // hold x values of current iterating series\n\n      let x = w.globals.padHorizontal + this.categoryAxisCorrection\n      let y = 1\n\n      let linePaths = []\n      let areaPaths = []\n\n      this.ctx.series.addCollapsedClassToSeries(this.elSeries, realIndex)\n\n      if (w.globals.isXNumeric && w.globals.seriesX.length > 0) {\n        x = (w.globals.seriesX[realIndex][0] - w.globals.minX) / this.xRatio\n      }\n\n      xArrj.push(x)\n\n      let pX = x\n      let pY\n      let prevX = pX\n      let prevY = this.zeroY\n      let lineYPosition = 0\n\n      // the first value in the current series is not null or undefined\n      let firstPrevY = this.lineHelpers.determineFirstPrevY({\n        i,\n        series,\n        prevY,\n        lineYPosition\n      })\n      prevY = firstPrevY.prevY\n\n      yArrj.push(prevY)\n      pY = prevY\n\n      let pathsFrom = this._calculatePathsFrom({\n        series,\n        i,\n        realIndex,\n        prevX,\n        prevY\n      })\n\n      let paths = this._iterateOverDataPoints({\n        series,\n        realIndex,\n        i,\n        x,\n        y,\n        pX,\n        pY,\n        pathsFrom,\n        linePaths,\n        areaPaths,\n        seriesIndex,\n        lineYPosition,\n        xArrj,\n        yArrj\n      })\n\n      this._handlePaths({ type, realIndex, i, paths })\n\n      this.elSeries.add(this.elPointsMain)\n      this.elSeries.add(this.elDataLabelsWrap)\n\n      allSeries.push(this.elSeries)\n    }\n\n    if (w.config.chart.stacked) {\n      for (let s = allSeries.length; s > 0; s--) {\n        ret.add(allSeries[s - 1])\n      }\n    } else {\n      for (let s = 0; s < allSeries.length; s++) {\n        ret.add(allSeries[s])\n      }\n    }\n\n    return ret\n  }\n\n  _initSerieVariables(series, i, realIndex) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n\n    // width divided into equal parts\n    this.xDivision =\n      w.globals.gridWidth /\n      (w.globals.dataPoints - (w.config.xaxis.tickPlacement === 'on' ? 1 : 0))\n\n    this.strokeWidth = Array.isArray(w.config.stroke.width)\n      ? w.config.stroke.width[realIndex]\n      : w.config.stroke.width\n\n    if (this.yRatio.length > 1) {\n      this.yaxisIndex = realIndex\n    }\n\n    this.isReversed =\n      w.config.yaxis[this.yaxisIndex] &&\n      w.config.yaxis[this.yaxisIndex].reversed\n\n    // zeroY is the 0 value in y series which can be used in negative charts\n    this.zeroY =\n      w.globals.gridHeight -\n      this.baseLineY[this.yaxisIndex] -\n      (this.isReversed ? w.globals.gridHeight : 0) +\n      (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0)\n\n    this.areaBottomY = this.zeroY\n    if (\n      this.zeroY > w.globals.gridHeight ||\n      w.config.plotOptions.area.fillTo === 'end'\n    ) {\n      this.areaBottomY = w.globals.gridHeight\n    }\n\n    this.categoryAxisCorrection = this.xDivision / 2\n\n    // el to which series will be drawn\n    this.elSeries = graphics.group({\n      class: `apexcharts-series`,\n      seriesName: Utils.escapeString(w.globals.seriesNames[realIndex])\n    })\n\n    // points\n    this.elPointsMain = graphics.group({\n      class: 'apexcharts-series-markers-wrap',\n      'data:realIndex': realIndex\n    })\n\n    // eldatalabels\n    this.elDataLabelsWrap = graphics.group({\n      class: 'apexcharts-datalabels',\n      'data:realIndex': realIndex\n    })\n\n    let longestSeries = series[i].length === w.globals.dataPoints\n    this.elSeries.attr({\n      'data:longestSeries': longestSeries,\n      rel: i + 1,\n      'data:realIndex': realIndex\n    })\n\n    this.appendPathFrom = true\n  }\n\n  _calculatePathsFrom({ series, i, realIndex, prevX, prevY }) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n    let linePath, areaPath, pathFromLine, pathFromArea\n\n    if (series[i][0] === null) {\n      // when the first value itself is null, we need to move the pointer to a location where a null value is not found\n      for (let s = 0; s < series[i].length; s++) {\n        if (series[i][s] !== null) {\n          prevX = this.xDivision * s\n          prevY = this.zeroY - series[i][s] / this.yRatio[this.yaxisIndex]\n          linePath = graphics.move(prevX, prevY)\n          areaPath = graphics.move(prevX, this.areaBottomY)\n          break\n        }\n      }\n    } else {\n      linePath = graphics.move(prevX, prevY)\n      areaPath =\n        graphics.move(prevX, this.areaBottomY) + graphics.line(prevX, prevY)\n    }\n\n    pathFromLine = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY)\n    pathFromArea = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY)\n\n    if (w.globals.previousPaths.length > 0) {\n      const pathFrom = this.lineHelpers.checkPreviousPaths({\n        pathFromLine,\n        pathFromArea,\n        realIndex\n      })\n      pathFromLine = pathFrom.pathFromLine\n      pathFromArea = pathFrom.pathFromArea\n    }\n\n    return {\n      prevX,\n      prevY,\n      linePath,\n      areaPath,\n      pathFromLine,\n      pathFromArea\n    }\n  }\n\n  _handlePaths({ type, realIndex, i, paths }) {\n    const w = this.w\n    const graphics = new Graphics(this.ctx)\n    const fill = new Fill(this.ctx)\n\n    // push all current y values array to main PrevY Array\n    this.prevSeriesY.push(paths.yArrj)\n\n    // push all x val arrays into main xArr\n    w.globals.seriesXvalues[realIndex] = paths.xArrj\n    w.globals.seriesYvalues[realIndex] = paths.yArrj\n\n    const forecast = w.config.forecastDataPoints\n    if (forecast.count > 0) {\n      const forecastCutoff =\n        w.globals.seriesXvalues[realIndex][\n          w.globals.seriesXvalues[realIndex].length - forecast.count - 1\n        ]\n      const elForecastMask = graphics.drawRect(\n        forecastCutoff,\n        0,\n        w.globals.gridWidth,\n        w.globals.gridHeight,\n        0\n      )\n      w.globals.dom.elForecastMask.appendChild(elForecastMask.node)\n\n      const elNonForecastMask = graphics.drawRect(\n        0,\n        0,\n        forecastCutoff,\n        w.globals.gridHeight,\n        0\n      )\n      w.globals.dom.elNonForecastMask.appendChild(elNonForecastMask.node)\n    }\n\n    // these elements will be shown after area path animation completes\n    if (!this.pointsChart) {\n      w.globals.delayedElements.push({\n        el: this.elPointsMain.node,\n        index: realIndex\n      })\n    }\n\n    const defaultRenderedPathOptions = {\n      i,\n      realIndex,\n      animationDelay: i,\n      initialSpeed: w.config.chart.animations.speed,\n      dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n      className: `apexcharts-${type}`\n    }\n\n    if (type === 'area') {\n      let pathFill = fill.fillPath({\n        seriesNumber: realIndex\n      })\n\n      for (let p = 0; p < paths.areaPaths.length; p++) {\n        let renderedPath = graphics.renderPaths({\n          ...defaultRenderedPathOptions,\n          pathFrom: paths.pathFromArea,\n          pathTo: paths.areaPaths[p],\n          stroke: 'none',\n          strokeWidth: 0,\n          strokeLineCap: null,\n          fill: pathFill\n        })\n\n        this.elSeries.add(renderedPath)\n      }\n    }\n\n    if (w.config.stroke.show && !this.pointsChart) {\n      let lineFill = null\n      if (type === 'line') {\n        // fillable lines only for lineChart\n        lineFill = fill.fillPath({\n          seriesNumber: realIndex,\n          i\n        })\n      } else {\n        lineFill = w.globals.stroke.colors[realIndex]\n      }\n\n      for (let p = 0; p < paths.linePaths.length; p++) {\n        const linePathCommonOpts = {\n          ...defaultRenderedPathOptions,\n          pathFrom: paths.pathFromLine,\n          pathTo: paths.linePaths[p],\n          stroke: lineFill,\n          strokeWidth: this.strokeWidth,\n          strokeLineCap: w.config.stroke.lineCap,\n          fill: 'none'\n        }\n        let renderedPath = graphics.renderPaths(linePathCommonOpts)\n        this.elSeries.add(renderedPath)\n\n        if (forecast.count > 0) {\n          let renderedForecastPath = graphics.renderPaths(linePathCommonOpts)\n\n          renderedForecastPath.node.setAttribute(\n            'stroke-dasharray',\n            forecast.dashArray\n          )\n\n          if (forecast.strokeWidth) {\n            renderedForecastPath.node.setAttribute(\n              'stroke-width',\n              forecast.strokeWidth\n            )\n          }\n\n          this.elSeries.add(renderedForecastPath)\n          renderedForecastPath.attr(\n            'clip-path',\n            `url(#forecastMask${w.globals.cuid})`\n          )\n          renderedPath.attr(\n            'clip-path',\n            `url(#nonForecastMask${w.globals.cuid})`\n          )\n        }\n      }\n    }\n  }\n\n  _iterateOverDataPoints({\n    series,\n    realIndex,\n    i,\n    x,\n    y,\n    pX,\n    pY,\n    pathsFrom,\n    linePaths,\n    areaPaths,\n    seriesIndex,\n    lineYPosition,\n    xArrj,\n    yArrj\n  }) {\n    const w = this.w\n    let graphics = new Graphics(this.ctx)\n    let yRatio = this.yRatio\n    let { prevY, linePath, areaPath, pathFromLine, pathFromArea } = pathsFrom\n\n    const minY = Utils.isNumber(w.globals.minYArr[realIndex])\n      ? w.globals.minYArr[realIndex]\n      : w.globals.minY\n\n    const iterations =\n      w.globals.dataPoints > 1 ? w.globals.dataPoints - 1 : w.globals.dataPoints\n\n    for (let j = 0; j < iterations; j++) {\n      const isNull =\n        typeof series[i][j + 1] === 'undefined' || series[i][j + 1] === null\n\n      if (w.globals.isXNumeric) {\n        let sX = w.globals.seriesX[realIndex][j + 1]\n        if (typeof w.globals.seriesX[realIndex][j + 1] === 'undefined') {\n          /* fix #374 */\n          sX = w.globals.seriesX[realIndex][iterations - 1]\n        }\n        x = (sX - w.globals.minX) / this.xRatio\n      } else {\n        x = x + this.xDivision\n      }\n\n      if (w.config.chart.stacked) {\n        if (\n          i > 0 &&\n          w.globals.collapsedSeries.length < w.config.series.length - 1\n        ) {\n          // a collapsed series in a stacked bar chart may provide wrong result for the next series, hence find the prevIndex of prev series which is not collapsed - fixes apexcharts.js#1372\n          const prevIndex = (pi) => {\n            let pii = pi\n            for (let cpi = 0; cpi < w.globals.series.length; cpi++) {\n              if (w.globals.collapsedSeriesIndices.indexOf(pi) > -1) {\n                pii--\n                break\n              }\n            }\n\n            return pii >= 0 ? pii : 0\n          }\n          lineYPosition = this.prevSeriesY[prevIndex(i - 1)][j + 1]\n        } else {\n          // the first series will not have prevY values\n          lineYPosition = this.zeroY\n        }\n      } else {\n        lineYPosition = this.zeroY\n      }\n\n      if (isNull) {\n        y =\n          lineYPosition -\n          minY / yRatio[this.yaxisIndex] +\n          (this.isReversed ? minY / yRatio[this.yaxisIndex] : 0) * 2\n      } else {\n        y =\n          lineYPosition -\n          series[i][j + 1] / yRatio[this.yaxisIndex] +\n          (this.isReversed ? series[i][j + 1] / yRatio[this.yaxisIndex] : 0) * 2\n      }\n\n      // push current X\n      xArrj.push(x)\n\n      // push current Y that will be used as next series's bottom position\n      yArrj.push(y)\n\n      let pointsPos = this.lineHelpers.calculatePoints({\n        series,\n        x,\n        y,\n        realIndex,\n        i,\n        j,\n        prevY\n      })\n\n      let calculatedPaths = this._createPaths({\n        series,\n        i,\n        realIndex,\n        j,\n        x,\n        y,\n        pX,\n        pY,\n        linePath,\n        areaPath,\n        linePaths,\n        areaPaths,\n        seriesIndex\n      })\n\n      areaPaths = calculatedPaths.areaPaths\n      linePaths = calculatedPaths.linePaths\n      pX = calculatedPaths.pX\n      pY = calculatedPaths.pY\n      areaPath = calculatedPaths.areaPath\n      linePath = calculatedPaths.linePath\n\n      if (this.appendPathFrom) {\n        pathFromLine = pathFromLine + graphics.line(x, this.zeroY)\n        pathFromArea = pathFromArea + graphics.line(x, this.zeroY)\n      }\n\n      this.handleNullDataPoints(series, pointsPos, i, j, realIndex)\n\n      this._handleMarkersAndLabels({\n        pointsPos,\n        series,\n        x,\n        y,\n        prevY,\n        i,\n        j,\n        realIndex\n      })\n    }\n\n    return {\n      yArrj,\n      xArrj,\n      pathFromArea,\n      areaPaths,\n      pathFromLine,\n      linePaths\n    }\n  }\n\n  _handleMarkersAndLabels({ pointsPos, series, x, y, prevY, i, j, realIndex }) {\n    const w = this.w\n    let dataLabels = new DataLabels(this.ctx)\n\n    if (!this.pointsChart) {\n      if (w.globals.series[i].length > 1) {\n        this.elPointsMain.node.classList.add('apexcharts-element-hidden')\n      }\n\n      let elPointsWrap = this.markers.plotChartMarkers(\n        pointsPos,\n        realIndex,\n        j + 1\n      )\n      if (elPointsWrap !== null) {\n        this.elPointsMain.add(elPointsWrap)\n      }\n    } else {\n      // scatter / bubble chart points creation\n      this.scatter.draw(this.elSeries, j, {\n        realIndex,\n        pointsPos,\n        zRatio: this.zRatio,\n        elParent: this.elPointsMain\n      })\n    }\n\n    let drawnLabels = dataLabels.drawDataLabel(\n      pointsPos,\n      realIndex,\n      j + 1,\n      null\n    )\n    if (drawnLabels !== null) {\n      this.elDataLabelsWrap.add(drawnLabels)\n    }\n  }\n\n  _createPaths({\n    series,\n    i,\n    realIndex,\n    j,\n    x,\n    y,\n    pX,\n    pY,\n    linePath,\n    areaPath,\n    linePaths,\n    areaPaths,\n    seriesIndex\n  }) {\n    let w = this.w\n    let graphics = new Graphics(this.ctx)\n\n    let curve = w.config.stroke.curve\n    const areaBottomY = this.areaBottomY\n\n    if (Array.isArray(w.config.stroke.curve)) {\n      if (Array.isArray(seriesIndex)) {\n        curve = w.config.stroke.curve[seriesIndex[i]]\n      } else {\n        curve = w.config.stroke.curve[i]\n      }\n    }\n\n    // logic of smooth curve derived from chartist\n    // CREDITS: https://gionkunz.github.io/chartist-js/\n    if (curve === 'smooth') {\n      let length = (x - pX) * 0.35\n      if (w.globals.hasNullValues) {\n        if (series[i][j] !== null) {\n          if (series[i][j + 1] !== null) {\n            linePath =\n              graphics.move(pX, pY) +\n              graphics.curve(pX + length, pY, x - length, y, x + 1, y)\n            areaPath =\n              graphics.move(pX + 1, pY) +\n              graphics.curve(pX + length, pY, x - length, y, x + 1, y) +\n              graphics.line(x, areaBottomY) +\n              graphics.line(pX, areaBottomY) +\n              'z'\n          } else {\n            linePath = graphics.move(pX, pY)\n            areaPath = graphics.move(pX, pY) + 'z'\n          }\n        }\n\n        linePaths.push(linePath)\n        areaPaths.push(areaPath)\n      } else {\n        linePath =\n          linePath + graphics.curve(pX + length, pY, x - length, y, x, y)\n        areaPath =\n          areaPath + graphics.curve(pX + length, pY, x - length, y, x, y)\n      }\n\n      pX = x\n      pY = y\n\n      if (j === series[i].length - 2) {\n        // last loop, close path\n        areaPath =\n          areaPath +\n          graphics.curve(pX, pY, x, y, x, areaBottomY) +\n          graphics.move(x, y) +\n          'z'\n        if (!w.globals.hasNullValues) {\n          linePaths.push(linePath)\n          areaPaths.push(areaPath)\n        }\n      }\n    } else {\n      if (series[i][j + 1] === null) {\n        linePath = linePath + graphics.move(x, y)\n\n        const numericOrCatX = w.globals.isXNumeric\n          ? (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio\n          : x - this.xDivision\n        areaPath =\n          areaPath +\n          graphics.line(numericOrCatX, areaBottomY) +\n          graphics.move(x, y) +\n          'z'\n      }\n      if (series[i][j] === null) {\n        linePath = linePath + graphics.move(x, y)\n        areaPath = areaPath + graphics.move(x, areaBottomY)\n      }\n\n      if (curve === 'stepline') {\n        linePath =\n          linePath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V')\n        areaPath =\n          areaPath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V')\n      } else if (curve === 'straight') {\n        linePath = linePath + graphics.line(x, y)\n        areaPath = areaPath + graphics.line(x, y)\n      }\n\n      if (j === series[i].length - 2) {\n        // last loop, close path\n        areaPath =\n          areaPath + graphics.line(x, areaBottomY) + graphics.move(x, y) + 'z'\n        linePaths.push(linePath)\n        areaPaths.push(areaPath)\n      }\n    }\n\n    return {\n      linePaths,\n      areaPaths,\n      pX,\n      pY,\n      linePath,\n      areaPath\n    }\n  }\n\n  handleNullDataPoints(series, pointsPos, i, j, realIndex) {\n    const w = this.w\n    if (\n      (series[i][j] === null && w.config.markers.showNullDataPoints) ||\n      series[i].length === 1\n    ) {\n      // fixes apexcharts.js#1282, #1252\n      let elPointsWrap = this.markers.plotChartMarkers(\n        pointsPos,\n        realIndex,\n        j + 1,\n        this.strokeWidth - w.config.markers.strokeWidth / 2,\n        true\n      )\n      if (elPointsWrap !== null) {\n        this.elPointsMain.add(elPointsWrap)\n      }\n    }\n  }\n}\n\nexport default Line\n","import '../libs/Treemap-squared'\nimport Graphics from '../modules/Graphics'\nimport Animations from '../modules/Animations'\nimport Fill from '../modules/Fill'\nimport Helpers from './common/treemap/Helpers'\nimport Filters from '../modules/Filters'\n\nimport Utils from '../utils/Utils'\n\n/**\n * ApexCharts TreemapChart Class.\n * @module TreemapChart\n **/\n\nexport default class TreemapChart {\n  constructor(ctx, xyRatios) {\n    this.ctx = ctx\n    this.w = ctx.w\n\n    this.strokeWidth = this.w.config.stroke.width\n    this.helpers = new Helpers(ctx)\n    this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation\n\n    this.labels = []\n  }\n\n  draw(series) {\n    let w = this.w\n    const graphics = new Graphics(this.ctx)\n    const fill = new Fill(this.ctx)\n\n    let ret = graphics.group({\n      class: 'apexcharts-treemap'\n    })\n\n    if (w.globals.noData) return ret\n\n    let ser = []\n    series.forEach((s) => {\n      let d = s.map((v) => {\n        return Math.abs(v)\n      })\n      ser.push(d)\n    })\n\n    this.negRange = this.helpers.checkColorRange()\n\n    w.config.series.forEach((s, i) => {\n      s.data.forEach((l) => {\n        if (!Array.isArray(this.labels[i])) this.labels[i] = []\n        this.labels[i].push(l.x)\n      })\n    })\n\n    const nodes = window.TreemapSquared.generate(\n      ser,\n      w.globals.gridWidth,\n      w.globals.gridHeight\n    )\n\n    nodes.forEach((node, i) => {\n      let elSeries = graphics.group({\n        class: `apexcharts-series apexcharts-treemap-series`,\n        seriesName: Utils.escapeString(w.globals.seriesNames[i]),\n        rel: i + 1,\n        'data:realIndex': i\n      })\n\n      if (w.config.chart.dropShadow.enabled) {\n        const shadow = w.config.chart.dropShadow\n        const filters = new Filters(this.ctx)\n        filters.dropShadow(ret, shadow, i)\n      }\n\n      let elDataLabelWrap = graphics.group({\n        class: 'apexcharts-data-labels'\n      })\n\n      node.forEach((r, j) => {\n        const x1 = r[0]\n        const y1 = r[1]\n        const x2 = r[2]\n        const y2 = r[3]\n        let elRect = graphics.drawRect(\n          x1,\n          y1,\n          x2 - x1,\n          y2 - y1,\n          0,\n          '#fff',\n          1,\n          this.strokeWidth,\n          w.config.plotOptions.treemap.useFillColorAsStroke\n            ? color\n            : w.globals.stroke.colors[i]\n        )\n        elRect.attr({\n          cx: x1,\n          cy: y1,\n          index: i,\n          i,\n          j,\n          width: x2 - x1,\n          height: y2 - y1\n        })\n\n        let colorProps = this.helpers.getShadeColor(\n          w.config.chart.type,\n          i,\n          j,\n          this.negRange\n        )\n        let color = colorProps.color\n\n        if (\n          typeof w.config.series[i].data[j] !== 'undefined' &&\n          w.config.series[i].data[j].fillColor\n        ) {\n          color = w.config.series[i].data[j].fillColor\n        }\n        let pathFill = fill.fillPath({\n          color,\n          seriesNumber: i,\n          dataPointIndex: j\n        })\n\n        elRect.node.classList.add('apexcharts-treemap-rect')\n\n        elRect.attr({\n          fill: pathFill\n        })\n\n        this.helpers.addListeners(elRect)\n\n        let fromRect = {\n          x: x1 + (x2 - x1) / 2,\n          y: y1 + (y2 - y1) / 2,\n          width: 0,\n          height: 0\n        }\n        let toRect = {\n          x: x1,\n          y: y1,\n          width: x2 - x1,\n          height: y2 - y1\n        }\n\n        if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n          let speed = 1\n          if (!w.globals.resized) {\n            speed = w.config.chart.animations.speed\n          }\n          this.animateTreemap(elRect, fromRect, toRect, speed)\n        }\n        if (w.globals.dataChanged) {\n          let speed = 1\n          if (this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n            speed = this.dynamicAnim.speed\n\n            if (\n              w.globals.previousPaths[i] &&\n              w.globals.previousPaths[i][j] &&\n              w.globals.previousPaths[i][j].rect\n            ) {\n              fromRect = w.globals.previousPaths[i][j].rect\n            }\n\n            this.animateTreemap(elRect, fromRect, toRect, speed)\n          }\n        }\n\n        const fontSize = this.getFontSize(r)\n\n        let formattedText = w.config.dataLabels.formatter(this.labels[i][j], {\n          value: w.globals.series[i][j],\n          seriesIndex: i,\n          dataPointIndex: j,\n          w\n        })\n        let dataLabels = this.helpers.calculateDataLabels({\n          text: formattedText,\n          x: (x1 + x2) / 2,\n          y: (y1 + y2) / 2 + this.strokeWidth / 2 + fontSize / 3,\n          i,\n          j,\n          colorProps,\n          fontSize,\n          series\n        })\n        if (w.config.dataLabels.enabled && dataLabels) {\n          this.rotateToFitLabel(dataLabels, formattedText, x1, y1, x2, y2)\n        }\n        elSeries.add(elRect)\n\n        if (dataLabels !== null) {\n          elSeries.add(dataLabels)\n        }\n      })\n      elSeries.add(elDataLabelWrap)\n\n      ret.add(elSeries)\n    })\n\n    return ret\n  }\n\n  // This calculates a font-size based upon\n  // average label length and the size of the box the label is\n  // going into. The maximum font size is set in chart config.\n  getFontSize(coordinates) {\n    const w = this.w\n\n    // total length of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 16)\n    function totalLabelLength(arr) {\n      let i,\n        total = 0\n      if (Array.isArray(arr[0])) {\n        for (i = 0; i < arr.length; i++) {\n          total += totalLabelLength(arr[i])\n        }\n      } else {\n        for (i = 0; i < arr.length; i++) {\n          total += arr[i].length\n        }\n      }\n      return total\n    }\n\n    // count of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 3)\n    function countLabels(arr) {\n      let i,\n        total = 0\n      if (Array.isArray(arr[0])) {\n        for (i = 0; i < arr.length; i++) {\n          total += countLabels(arr[i])\n        }\n      } else {\n        for (i = 0; i < arr.length; i++) {\n          total += 1\n        }\n      }\n      return total\n    }\n    let averagelabelsize =\n      totalLabelLength(this.labels) / countLabels(this.labels)\n\n    function fontSize(width, height) {\n      // the font size should be proportional to the size of the box (and the value)\n      // otherwise you can end up creating a visual distortion where two boxes of identical\n      // size have different sized labels, and thus make it look as if the two boxes\n      // represent different sizes\n      let area = width * height\n      let arearoot = Math.pow(area, 0.5)\n      return Math.min(\n        arearoot / averagelabelsize,\n        parseInt(w.config.dataLabels.style.fontSize, 10)\n      )\n    }\n\n    return fontSize(\n      coordinates[2] - coordinates[0],\n      coordinates[3] - coordinates[1]\n    )\n  }\n\n  rotateToFitLabel(elText, text, x1, y1, x2, y2) {\n    const graphics = new Graphics(this.ctx)\n    const textRect = graphics.getTextRects(text)\n    //if the label fits better sideways then rotate it\n    if (textRect.width + 5 > x2 - x1 && textRect.width <= y2 - y1) {\n      let labelRotatingCenter = graphics.rotateAroundCenter(elText.node)\n\n      elText.node.setAttribute(\n        'transform',\n        `rotate(-90 ${labelRotatingCenter.x} ${labelRotatingCenter.y})`\n      )\n    }\n  }\n\n  animateTreemap(el, fromRect, toRect, speed) {\n    const animations = new Animations(this.ctx)\n    animations.animateRect(\n      el,\n      {\n        x: fromRect.x,\n        y: fromRect.y,\n        width: fromRect.width,\n        height: fromRect.height\n      },\n      {\n        x: toRect.x,\n        y: toRect.y,\n        width: toRect.width,\n        height: toRect.height\n      },\n      speed,\n      () => {\n        animations.animationCompleted(el)\n      }\n    )\n  }\n}\n","import DateTime from '../utils/DateTime'\nimport Dimensions from './dimensions/Dimensions'\nimport Graphics from './Graphics'\nimport Utils from '../utils/Utils'\n\nconst MINUTES_IN_DAY = 24 * 60\nconst SECONDS_IN_DAY = MINUTES_IN_DAY * 60\nconst MIN_ZOOM_DAYS = 10 / SECONDS_IN_DAY\n\n/**\n * ApexCharts TimeScale Class for generating time ticks for x-axis.\n *\n * @module TimeScale\n **/\n\nclass TimeScale {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    this.timeScaleArray = []\n    this.utc = this.w.config.xaxis.labels.datetimeUTC\n  }\n\n  calculateTimeScaleTicks(minX, maxX) {\n    let w = this.w\n\n    // null check when no series to show\n    if (w.globals.allSeriesCollapsed) {\n      w.globals.labels = []\n      w.globals.timescaleLabels = []\n      return []\n    }\n\n    let dt = new DateTime(this.ctx)\n\n    const daysDiff = (maxX - minX) / (1000 * SECONDS_IN_DAY)\n    this.determineInterval(daysDiff)\n\n    w.globals.disableZoomIn = false\n    w.globals.disableZoomOut = false\n\n    if (daysDiff < MIN_ZOOM_DAYS) {\n      w.globals.disableZoomIn = true\n    } else if (daysDiff > 50000) {\n      w.globals.disableZoomOut = true\n    }\n\n    const timeIntervals = dt.getTimeUnitsfromTimestamp(minX, maxX, this.utc)\n\n    const daysWidthOnXAxis = w.globals.gridWidth / daysDiff\n    const hoursWidthOnXAxis = daysWidthOnXAxis / 24\n    const minutesWidthOnXAxis = hoursWidthOnXAxis / 60\n    const secondsWidthOnXAxis = minutesWidthOnXAxis / 60\n\n    let numberOfHours = Math.floor(daysDiff * 24)\n    let numberOfMinutes = Math.floor(daysDiff * MINUTES_IN_DAY)\n    let numberOfSeconds = Math.floor(daysDiff * SECONDS_IN_DAY)\n    let numberOfDays = Math.floor(daysDiff)\n    let numberOfMonths = Math.floor(daysDiff / 30)\n    let numberOfYears = Math.floor(daysDiff / 365)\n\n    const firstVal = {\n      minMillisecond: timeIntervals.minMillisecond,\n      minSecond: timeIntervals.minSecond,\n      minMinute: timeIntervals.minMinute,\n      minHour: timeIntervals.minHour,\n      minDate: timeIntervals.minDate,\n      minMonth: timeIntervals.minMonth,\n      minYear: timeIntervals.minYear\n    }\n\n    let currentMillisecond = firstVal.minMillisecond\n    let currentSecond = firstVal.minSecond\n    let currentMinute = firstVal.minMinute\n    let currentHour = firstVal.minHour\n    let currentMonthDate = firstVal.minDate\n    let currentDate = firstVal.minDate\n    let currentMonth = firstVal.minMonth\n    let currentYear = firstVal.minYear\n\n    const params = {\n      firstVal,\n      currentMillisecond,\n      currentSecond,\n      currentMinute,\n      currentHour,\n      currentMonthDate,\n      currentDate,\n      currentMonth,\n      currentYear,\n      daysWidthOnXAxis,\n      hoursWidthOnXAxis,\n      minutesWidthOnXAxis,\n      secondsWidthOnXAxis,\n      numberOfSeconds,\n      numberOfMinutes,\n      numberOfHours,\n      numberOfDays,\n      numberOfMonths,\n      numberOfYears\n    }\n\n    switch (this.tickInterval) {\n      case 'years': {\n        this.generateYearScale(params)\n        break\n      }\n      case 'months':\n      case 'half_year': {\n        this.generateMonthScale(params)\n        break\n      }\n      case 'months_days':\n      case 'months_fortnight':\n      case 'days':\n      case 'week_days': {\n        this.generateDayScale(params)\n        break\n      }\n      case 'hours': {\n        this.generateHourScale(params)\n        break\n      }\n      case 'minutes_fives':\n      case 'minutes':\n        this.generateMinuteScale(params)\n        break\n      case 'seconds_tens':\n      case 'seconds_fives':\n      case 'seconds':\n        this.generateSecondScale(params)\n        break\n    }\n\n    // first, we will adjust the month values index\n    // as in the upper function, it is starting from 0\n    // we will start them from 1\n    const adjustedMonthInTimeScaleArray = this.timeScaleArray.map((ts) => {\n      let defaultReturn = {\n        position: ts.position,\n        unit: ts.unit,\n        year: ts.year,\n        day: ts.day ? ts.day : 1,\n        hour: ts.hour ? ts.hour : 0,\n        month: ts.month + 1\n      }\n      if (ts.unit === 'month') {\n        return {\n          ...defaultReturn,\n          day: 1,\n          value: ts.value + 1\n        }\n      } else if (ts.unit === 'day' || ts.unit === 'hour') {\n        return {\n          ...defaultReturn,\n          value: ts.value\n        }\n      } else if (ts.unit === 'minute') {\n        return {\n          ...defaultReturn,\n          value: ts.value,\n          minute: ts.value\n        }\n      } else if (ts.unit === 'second') {\n        return {\n          ...defaultReturn,\n          value: ts.value,\n          minute: ts.minute,\n          second: ts.second\n        }\n      }\n\n      return ts\n    })\n\n    const filteredTimeScale = adjustedMonthInTimeScaleArray.filter((ts) => {\n      let modulo = 1\n      let ticks = Math.ceil(w.globals.gridWidth / 120)\n      let value = ts.value\n      if (w.config.xaxis.tickAmount !== undefined) {\n        ticks = w.config.xaxis.tickAmount\n      }\n      if (adjustedMonthInTimeScaleArray.length > ticks) {\n        modulo = Math.floor(adjustedMonthInTimeScaleArray.length / ticks)\n      }\n\n      let shouldNotSkipUnit = false // there is a big change in unit i.e days to months\n      let shouldNotPrint = false // should skip these values\n\n      switch (this.tickInterval) {\n        case 'years':\n          // make years label denser\n          if (ts.unit === 'year') {\n            shouldNotSkipUnit = true\n          }\n          break\n        case 'half_year':\n          modulo = 7\n          if (ts.unit === 'year') {\n            shouldNotSkipUnit = true\n          }\n          break\n        case 'months':\n          modulo = 1\n          if (ts.unit === 'year') {\n            shouldNotSkipUnit = true\n          }\n          break\n        case 'months_fortnight':\n          modulo = 15\n          if (ts.unit === 'year' || ts.unit === 'month') {\n            shouldNotSkipUnit = true\n          }\n          if (value === 30) {\n            shouldNotPrint = true\n          }\n          break\n        case 'months_days':\n          modulo = 10\n          if (ts.unit === 'month') {\n            shouldNotSkipUnit = true\n          }\n          if (value === 30) {\n            shouldNotPrint = true\n          }\n          break\n        case 'week_days':\n          modulo = 8\n          if (ts.unit === 'month') {\n            shouldNotSkipUnit = true\n          }\n          break\n        case 'days':\n          modulo = 1\n          if (ts.unit === 'month') {\n            shouldNotSkipUnit = true\n          }\n          break\n        case 'hours':\n          if (ts.unit === 'day') {\n            shouldNotSkipUnit = true\n          }\n          break\n        case 'minutes_fives':\n          if (value % 5 !== 0) {\n            shouldNotPrint = true\n          }\n          break\n        case 'seconds_tens':\n          if (value % 10 !== 0) {\n            shouldNotPrint = true\n          }\n          break\n        case 'seconds_fives':\n          if (value % 5 !== 0) {\n            shouldNotPrint = true\n          }\n          break\n      }\n\n      if (\n        this.tickInterval === 'hours' ||\n        this.tickInterval === 'minutes_fives' ||\n        this.tickInterval === 'seconds_tens' ||\n        this.tickInterval === 'seconds_fives'\n      ) {\n        if (!shouldNotPrint) {\n          return true\n        }\n      } else {\n        if ((value % modulo === 0 || shouldNotSkipUnit) && !shouldNotPrint) {\n          return true\n        }\n      }\n    })\n\n    return filteredTimeScale\n  }\n\n  recalcDimensionsBasedOnFormat(filteredTimeScale, inverted) {\n    const w = this.w\n    const reformattedTimescaleArray = this.formatDates(filteredTimeScale)\n\n    const removedOverlappingTS = this.removeOverlappingTS(\n      reformattedTimescaleArray\n    )\n\n    w.globals.timescaleLabels = removedOverlappingTS.slice()\n\n    // at this stage, we need to re-calculate coords of the grid as timeline labels may have altered the xaxis labels coords\n    // The reason we can't do this prior to this stage is because timeline labels depends on gridWidth, and as the ticks are calculated based on available gridWidth, there can be unknown number of ticks generated for different minX and maxX\n    // Dependency on Dimensions(), need to refactor correctly\n    // TODO - find an alternate way to avoid calling this Heavy method twice\n    let dimensions = new Dimensions(this.ctx)\n    dimensions.plotCoords()\n  }\n\n  determineInterval(daysDiff) {\n    const yearsDiff = daysDiff / 365\n    const hoursDiff = daysDiff * 24\n    const minutesDiff = hoursDiff * 60\n    const secondsDiff = minutesDiff * 60\n    switch (true) {\n      case yearsDiff > 5:\n        this.tickInterval = 'years'\n        break\n      case daysDiff > 800:\n        this.tickInterval = 'half_year'\n        break\n      case daysDiff > 180:\n        this.tickInterval = 'months'\n        break\n      case daysDiff > 90:\n        this.tickInterval = 'months_fortnight'\n        break\n      case daysDiff > 60:\n        this.tickInterval = 'months_days'\n        break\n      case daysDiff > 30:\n        this.tickInterval = 'week_days'\n        break\n      case daysDiff > 2:\n        this.tickInterval = 'days'\n        break\n      case hoursDiff > 2.4:\n        this.tickInterval = 'hours'\n        break\n      case minutesDiff > 15:\n        this.tickInterval = 'minutes_fives'\n        break\n      case minutesDiff > 5:\n        this.tickInterval = 'minutes'\n        break\n      case minutesDiff > 1:\n        this.tickInterval = 'seconds_tens'\n        break\n      case secondsDiff > 20:\n        this.tickInterval = 'seconds_fives'\n        break\n      default:\n        this.tickInterval = 'seconds'\n        break\n    }\n  }\n\n  generateYearScale({\n    firstVal,\n    currentMonth,\n    currentYear,\n    daysWidthOnXAxis,\n    numberOfYears\n  }) {\n    let firstTickValue = firstVal.minYear\n    let firstTickPosition = 0\n    const dt = new DateTime(this.ctx)\n\n    let unit = 'year'\n\n    if (firstVal.minDate > 1 || firstVal.minMonth > 0) {\n      let remainingDays = dt.determineRemainingDaysOfYear(\n        firstVal.minYear,\n        firstVal.minMonth,\n        firstVal.minDate\n      )\n\n      // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n      let remainingDaysOfFirstYear =\n        dt.determineDaysOfYear(firstVal.minYear) - remainingDays + 1\n\n      // calculate the first tick position\n      firstTickPosition = remainingDaysOfFirstYear * daysWidthOnXAxis\n      firstTickValue = firstVal.minYear + 1\n      // push the first tick in the array\n      this.timeScaleArray.push({\n        position: firstTickPosition,\n        value: firstTickValue,\n        unit,\n        year: firstTickValue,\n        month: Utils.monthMod(currentMonth + 1)\n      })\n    } else if (firstVal.minDate === 1 && firstVal.minMonth === 0) {\n      // push the first tick in the array\n      this.timeScaleArray.push({\n        position: firstTickPosition,\n        value: firstTickValue,\n        unit,\n        year: currentYear,\n        month: Utils.monthMod(currentMonth + 1)\n      })\n    }\n\n    let year = firstTickValue\n    let pos = firstTickPosition\n\n    // keep drawing rest of the ticks\n    for (let i = 0; i < numberOfYears; i++) {\n      year++\n      pos = dt.determineDaysOfYear(year - 1) * daysWidthOnXAxis + pos\n      this.timeScaleArray.push({\n        position: pos,\n        value: year,\n        unit,\n        year,\n        month: 1\n      })\n    }\n  }\n\n  generateMonthScale({\n    firstVal,\n    currentMonthDate,\n    currentMonth,\n    currentYear,\n    daysWidthOnXAxis,\n    numberOfMonths\n  }) {\n    let firstTickValue = currentMonth\n    let firstTickPosition = 0\n    const dt = new DateTime(this.ctx)\n    let unit = 'month'\n    let yrCounter = 0\n\n    if (firstVal.minDate > 1) {\n      // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n      let remainingDaysOfFirstMonth =\n        dt.determineDaysOfMonths(currentMonth + 1, firstVal.minYear) -\n        currentMonthDate +\n        1\n\n      // calculate the first tick position\n      firstTickPosition = remainingDaysOfFirstMonth * daysWidthOnXAxis\n      firstTickValue = Utils.monthMod(currentMonth + 1)\n\n      let year = currentYear + yrCounter\n      let month = Utils.monthMod(firstTickValue)\n      let value = firstTickValue\n      // it's Jan, so update the year\n      if (firstTickValue === 0) {\n        unit = 'year'\n        value = year\n        month = 1\n        yrCounter += 1\n        year = year + yrCounter\n      }\n\n      // push the first tick in the array\n      this.timeScaleArray.push({\n        position: firstTickPosition,\n        value,\n        unit,\n        year,\n        month\n      })\n    } else {\n      // push the first tick in the array\n      this.timeScaleArray.push({\n        position: firstTickPosition,\n        value: firstTickValue,\n        unit,\n        year: currentYear,\n        month: Utils.monthMod(currentMonth)\n      })\n    }\n\n    let month = firstTickValue + 1\n    let pos = firstTickPosition\n\n    // keep drawing rest of the ticks\n    for (let i = 0, j = 1; i < numberOfMonths; i++, j++) {\n      month = Utils.monthMod(month)\n\n      if (month === 0) {\n        unit = 'year'\n        yrCounter += 1\n      } else {\n        unit = 'month'\n      }\n      let year = this._getYear(currentYear, month, yrCounter)\n\n      pos = dt.determineDaysOfMonths(month, year) * daysWidthOnXAxis + pos\n      let monthVal = month === 0 ? year : month\n      this.timeScaleArray.push({\n        position: pos,\n        value: monthVal,\n        unit,\n        year,\n        month: month === 0 ? 1 : month\n      })\n      month++\n    }\n  }\n\n  generateDayScale({\n    firstVal,\n    currentMonth,\n    currentYear,\n    hoursWidthOnXAxis,\n    numberOfDays\n  }) {\n    const dt = new DateTime(this.ctx)\n    let unit = 'day'\n    let firstTickValue = firstVal.minDate + 1\n    let date = firstTickValue\n\n    const changeMonth = (dateVal, month, year) => {\n      let monthdays = dt.determineDaysOfMonths(month + 1, year)\n\n      if (dateVal > monthdays) {\n        month = month + 1\n        date = 1\n        unit = 'month'\n        val = month\n        return month\n      }\n\n      return month\n    }\n\n    let remainingHours = 24 - firstVal.minHour\n    let yrCounter = 0\n\n    // calculate the first tick position\n    let firstTickPosition = remainingHours * hoursWidthOnXAxis\n\n    let val = firstTickValue\n    let month = changeMonth(date, currentMonth, currentYear)\n\n    if (firstVal.minHour === 0 && firstVal.minDate === 1) {\n      // the first value is the first day of month\n      firstTickPosition = 0\n      val = Utils.monthMod(firstVal.minMonth)\n      unit = 'month'\n      date = firstVal.minDate\n      numberOfDays++\n    } else if (\n      firstVal.minDate !== 1 &&\n      firstVal.minHour === 0 &&\n      firstVal.minMinute === 0\n    ) {\n      // fixes apexcharts/apexcharts.js/issues/1730\n      firstTickPosition = 0\n      firstTickValue = firstVal.minDate\n      date = firstTickValue\n      val = firstTickValue\n      // in case it's the last date of month, we need to check it\n      month = changeMonth(date, currentMonth, currentYear)\n    }\n\n    // push the first tick in the array\n    this.timeScaleArray.push({\n      position: firstTickPosition,\n      value: val,\n      unit,\n      year: this._getYear(currentYear, month, yrCounter),\n      month: Utils.monthMod(month),\n      day: date\n    })\n\n    let pos = firstTickPosition\n    // keep drawing rest of the ticks\n    for (let i = 0; i < numberOfDays; i++) {\n      date += 1\n      unit = 'day'\n      month = changeMonth(\n        date,\n        month,\n        this._getYear(currentYear, month, yrCounter)\n      )\n\n      let year = this._getYear(currentYear, month, yrCounter)\n\n      pos = 24 * hoursWidthOnXAxis + pos\n      let value = date === 1 ? Utils.monthMod(month) : date\n      this.timeScaleArray.push({\n        position: pos,\n        value,\n        unit,\n        year,\n        month: Utils.monthMod(month),\n        day: value\n      })\n    }\n  }\n\n  generateHourScale({\n    firstVal,\n    currentDate,\n    currentMonth,\n    currentYear,\n    minutesWidthOnXAxis,\n    numberOfHours\n  }) {\n    const dt = new DateTime(this.ctx)\n\n    let yrCounter = 0\n    let unit = 'hour'\n\n    const changeDate = (dateVal, month) => {\n      let monthdays = dt.determineDaysOfMonths(month + 1, currentYear)\n      if (dateVal > monthdays) {\n        date = 1\n        month = month + 1\n      }\n      return { month, date }\n    }\n\n    const changeMonth = (dateVal, month) => {\n      let monthdays = dt.determineDaysOfMonths(month + 1, currentYear)\n      if (dateVal > monthdays) {\n        month = month + 1\n        return month\n      }\n\n      return month\n    }\n\n    // factor in minSeconds as well\n    let remainingMins = 60 - (firstVal.minMinute + firstVal.minSecond / 60.0)\n\n    let firstTickPosition = remainingMins * minutesWidthOnXAxis\n    let firstTickValue = firstVal.minHour + 1\n    let hour = firstTickValue + 1\n\n    if (remainingMins === 60) {\n      firstTickPosition = 0\n      firstTickValue = firstVal.minHour\n      hour = firstTickValue + 1\n    }\n\n    let date = currentDate\n\n    let month = changeMonth(date, currentMonth)\n\n    // push the first tick in the array\n    this.timeScaleArray.push({\n      position: firstTickPosition,\n      value: firstTickValue,\n      unit,\n      day: date,\n      hour,\n      year: currentYear,\n      month: Utils.monthMod(month)\n    })\n\n    let pos = firstTickPosition\n    // keep drawing rest of the ticks\n    for (let i = 0; i < numberOfHours; i++) {\n      unit = 'hour'\n\n      if (hour >= 24) {\n        hour = 0\n        date += 1\n        unit = 'day'\n\n        const checkNextMonth = changeDate(date, month)\n\n        month = checkNextMonth.month\n        month = changeMonth(date, month)\n      }\n\n      let year = this._getYear(currentYear, month, yrCounter)\n      pos =\n        hour === 0 && i === 0\n          ? remainingMins * minutesWidthOnXAxis\n          : 60 * minutesWidthOnXAxis + pos\n      let val = hour === 0 ? date : hour\n      this.timeScaleArray.push({\n        position: pos,\n        value: val,\n        unit,\n        hour,\n        day: date,\n        year,\n        month: Utils.monthMod(month)\n      })\n\n      hour++\n    }\n  }\n\n  generateMinuteScale({\n    currentMillisecond,\n    currentSecond,\n    currentMinute,\n    currentHour,\n    currentDate,\n    currentMonth,\n    currentYear,\n    minutesWidthOnXAxis,\n    secondsWidthOnXAxis,\n    numberOfMinutes\n  }) {\n    let yrCounter = 0\n    let unit = 'minute'\n\n    let remainingSecs = 60 - currentSecond\n    let firstTickPosition =\n      (remainingSecs - currentMillisecond / 1000) * secondsWidthOnXAxis\n    let minute = currentMinute + 1\n\n    let date = currentDate\n    let month = currentMonth\n    let year = currentYear\n    let hour = currentHour\n\n    let pos = firstTickPosition\n    for (let i = 0; i < numberOfMinutes; i++) {\n      if (minute >= 60) {\n        minute = 0\n        hour += 1\n        if (hour === 24) {\n          hour = 0\n        }\n      }\n\n      this.timeScaleArray.push({\n        position: pos,\n        value: minute,\n        unit,\n        hour,\n        minute,\n        day: date,\n        year: this._getYear(year, month, yrCounter),\n        month: Utils.monthMod(month)\n      })\n\n      pos += minutesWidthOnXAxis\n      minute++\n    }\n  }\n\n  generateSecondScale({\n    currentMillisecond,\n    currentSecond,\n    currentMinute,\n    currentHour,\n    currentDate,\n    currentMonth,\n    currentYear,\n    secondsWidthOnXAxis,\n    numberOfSeconds\n  }) {\n    let yrCounter = 0\n    let unit = 'second'\n\n    const remainingMillisecs = 1000 - currentMillisecond\n    let firstTickPosition = (remainingMillisecs / 1000) * secondsWidthOnXAxis\n\n    let second = currentSecond + 1\n    let minute = currentMinute\n    let date = currentDate\n    let month = currentMonth\n    let year = currentYear\n    let hour = currentHour\n\n    let pos = firstTickPosition\n    for (let i = 0; i < numberOfSeconds; i++) {\n      if (second >= 60) {\n        minute++\n        second = 0\n        if (minute >= 60) {\n          hour++\n          minute = 0\n          if (hour === 24) {\n            hour = 0\n          }\n        }\n      }\n\n      this.timeScaleArray.push({\n        position: pos,\n        value: second,\n        unit,\n        hour,\n        minute,\n        second,\n        day: date,\n        year: this._getYear(year, month, yrCounter),\n        month: Utils.monthMod(month)\n      })\n\n      pos += secondsWidthOnXAxis\n      second++\n    }\n  }\n\n  createRawDateString(ts, value) {\n    let raw = ts.year\n\n    if (ts.month === 0) {\n      // invalid month, correct it\n      ts.month = 1\n    }\n    raw += '-' + ('0' + ts.month.toString()).slice(-2)\n\n    // unit is day\n    if (ts.unit === 'day') {\n      raw += ts.unit === 'day' ? '-' + ('0' + value).slice(-2) : '-01'\n    } else {\n      raw += '-' + ('0' + (ts.day ? ts.day : '1')).slice(-2)\n    }\n\n    // unit is hour\n    if (ts.unit === 'hour') {\n      raw += ts.unit === 'hour' ? 'T' + ('0' + value).slice(-2) : 'T00'\n    } else {\n      raw += 'T' + ('0' + (ts.hour ? ts.hour : '0')).slice(-2)\n    }\n\n    if (ts.unit === 'minute') {\n      raw += ':' + ('0' + value).slice(-2)\n    } else {\n      raw += ':' + (ts.minute ? ('0' + ts.minute).slice(-2) : '00')\n    }\n\n    if (ts.unit === 'second') {\n      raw += ':' + ('0' + value).slice(-2)\n    } else {\n      raw += ':00'\n    }\n\n    if (this.utc) {\n      raw += '.000Z'\n    }\n    return raw\n  }\n\n  formatDates(filteredTimeScale) {\n    const w = this.w\n\n    const reformattedTimescaleArray = filteredTimeScale.map((ts) => {\n      let value = ts.value.toString()\n\n      let dt = new DateTime(this.ctx)\n\n      const raw = this.createRawDateString(ts, value)\n\n      let dateToFormat = dt.getDate(dt.parseDate(raw))\n      if (!this.utc) {\n        // Fixes #1726, #1544, #1485, #1255\n        dateToFormat = dt.getDate(dt.parseDateWithTimezone(raw))\n      }\n\n      if (w.config.xaxis.labels.format === undefined) {\n        let customFormat = 'dd MMM'\n        const dtFormatter = w.config.xaxis.labels.datetimeFormatter\n        if (ts.unit === 'year') customFormat = dtFormatter.year\n        if (ts.unit === 'month') customFormat = dtFormatter.month\n        if (ts.unit === 'day') customFormat = dtFormatter.day\n        if (ts.unit === 'hour') customFormat = dtFormatter.hour\n        if (ts.unit === 'minute') customFormat = dtFormatter.minute\n        if (ts.unit === 'second') customFormat = dtFormatter.second\n\n        value = dt.formatDate(dateToFormat, customFormat)\n      } else {\n        value = dt.formatDate(dateToFormat, w.config.xaxis.labels.format)\n      }\n\n      return {\n        dateString: raw,\n        position: ts.position,\n        value,\n        unit: ts.unit,\n        year: ts.year,\n        month: ts.month\n      }\n    })\n\n    return reformattedTimescaleArray\n  }\n\n  removeOverlappingTS(arr) {\n    const graphics = new Graphics(this.ctx)\n\n    let equalLabelLengthFlag = false // These labels got same length?\n    let constantLabelWidth // If true, what is the constant length to use\n    if (\n      arr.length > 0 && // check arr length\n      arr[0].value && // check arr[0] contains value\n      arr.every((lb) => lb.value.length === arr[0].value.length) // check every arr label value is the same as the first one\n    ) {\n      equalLabelLengthFlag = true // These labels got same length\n      constantLabelWidth = graphics.getTextRects(arr[0].value).width // The constant label width to use\n    }\n\n    let lastDrawnIndex = 0\n\n    let filteredArray = arr.map((item, index) => {\n      if (index > 0 && this.w.config.xaxis.labels.hideOverlappingLabels) {\n        const prevLabelWidth = !equalLabelLengthFlag // if vary in label length\n          ? graphics.getTextRects(arr[lastDrawnIndex].value).width // get individual length\n          : constantLabelWidth // else: use constant length\n        const prevPos = arr[lastDrawnIndex].position\n        const pos = item.position\n\n        if (pos > prevPos + prevLabelWidth + 10) {\n          lastDrawnIndex = index\n          return item\n        } else {\n          return null\n        }\n      } else {\n        return item\n      }\n    })\n\n    filteredArray = filteredArray.filter((f) => f !== null)\n\n    return filteredArray\n  }\n\n  _getYear(currentYear, month, yrCounter) {\n    return currentYear + Math.floor(month / 12) + yrCounter\n  }\n}\n\nexport default TimeScale\n","import Bar from '../charts/Bar'\nimport BarStacked from '../charts/BarStacked'\nimport BoxCandleStick from '../charts/BoxCandleStick'\nimport CoreUtils from './CoreUtils'\nimport Crosshairs from './Crosshairs'\nimport HeatMap from '../charts/HeatMap'\nimport Globals from '../modules/settings/Globals'\nimport Pie from '../charts/Pie'\nimport Radar from '../charts/Radar'\nimport Radial from '../charts/Radial'\nimport RangeBar from '../charts/RangeBar'\nimport Gantt from '../charts/Gantt'\nimport Legend from './legend/Legend'\nimport Line from '../charts/Line'\nimport Treemap from '../charts/Treemap'\nimport Graphics from './Graphics'\nimport Range from './Range'\nimport Utils from '../utils/Utils'\nimport Scales from './Scales'\nimport TimeScale from './TimeScale'\n\n/**\n * ApexCharts Core Class responsible for major calculations and creating elements.\n *\n * @module Core\n **/\n\nexport default class Core {\n  constructor(el, ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n    this.el = el\n  }\n\n  // get data and store into appropriate vars\n\n  setupElements() {\n    let gl = this.w.globals\n    let cnf = this.w.config\n\n    // const graphics = new Graphics(this.ctx)\n\n    let ct = cnf.chart.type\n    let axisChartsArrTypes = [\n      'line',\n      'area',\n      'bar',\n      'rangeBar',\n      'candlestick',\n      'boxPlot',\n      'scatter',\n      'bubble',\n      'radar',\n      'heatmap',\n      'treemap',\n      'gantt'\n    ]\n\n    let xyChartsArrTypes = [\n      'line',\n      'area',\n      'bar',\n      'rangeBar',\n      'candlestick',\n      'boxPlot',\n      'scatter',\n      'bubble',\n      'gantt'\n    ]\n\n    gl.axisCharts = axisChartsArrTypes.indexOf(ct) > -1\n\n    gl.xyCharts = xyChartsArrTypes.indexOf(ct) > -1\n\n    gl.isBarHorizontal =\n      (cnf.chart.type === 'bar' ||\n        cnf.chart.type === 'rangeBar' ||\n        cnf.chart.type === 'gantt') &&\n      cnf.plotOptions.bar.horizontal\n\n    gl.chartClass = '.apexcharts' + gl.chartID\n\n    gl.dom.baseEl = this.el\n\n    gl.dom.elWrap = document.createElement('div')\n    Graphics.setAttrs(gl.dom.elWrap, {\n      id: gl.chartClass.substring(1),\n      class: 'apexcharts-canvas ' + gl.chartClass.substring(1)\n    })\n    this.el.appendChild(gl.dom.elWrap)\n\n    gl.dom.Paper = new window.SVG.Doc(gl.dom.elWrap)\n    gl.dom.Paper.attr({\n      class: 'apexcharts-svg',\n      'xmlns:data': 'ApexChartsNS',\n      transform: `translate(${cnf.chart.offsetX}, ${cnf.chart.offsetY})`\n    })\n\n    gl.dom.Paper.node.style.background = cnf.chart.background\n\n    this.setSVGDimensions()\n\n    gl.dom.elGraphical = gl.dom.Paper.group().attr({\n      class: 'apexcharts-inner apexcharts-graphical'\n    })\n\n    gl.dom.elAnnotations = gl.dom.Paper.group().attr({\n      class: 'apexcharts-annotations'\n    })\n\n    gl.dom.elDefs = gl.dom.Paper.defs()\n\n    gl.dom.elLegendWrap = document.createElement('div')\n    gl.dom.elLegendWrap.classList.add('apexcharts-legend')\n    gl.dom.elWrap.appendChild(gl.dom.elLegendWrap)\n    gl.dom.Paper.add(gl.dom.elGraphical)\n    gl.dom.elGraphical.add(gl.dom.elDefs)\n  }\n\n  plotChartType(ser, xyRatios) {\n    const w = this.w\n    const cnf = w.config\n    const gl = w.globals\n\n    let lineSeries = {\n      series: [],\n      i: []\n    }\n    let areaSeries = {\n      series: [],\n      i: []\n    }\n    let scatterSeries = {\n      series: [],\n      i: []\n    }\n\n    let bubbleSeries = {\n      series: [],\n      i: []\n    }\n\n    let columnSeries = {\n      series: [],\n      i: []\n    }\n\n    let candlestickSeries = {\n      series: [],\n      i: []\n    }\n\n    let boxplotSeries = {\n      series: [],\n      i: []\n    }\n\n    gl.series.map((series, st) => {\n      let comboCount = 0\n      // if user has specified a particular type for particular series\n      if (typeof ser[st].type !== 'undefined') {\n        if (ser[st].type === 'column' || ser[st].type === 'bar') {\n          if (gl.series.length > 1 && cnf.plotOptions.bar.horizontal) {\n            // horizontal bars not supported in mixed charts, hence show a warning\n            console.warn(\n              'Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`'\n            )\n          }\n          columnSeries.series.push(series)\n          columnSeries.i.push(st)\n          comboCount++\n          w.globals.columnSeries = columnSeries.series\n        } else if (ser[st].type === 'area') {\n          areaSeries.series.push(series)\n          areaSeries.i.push(st)\n          comboCount++\n        } else if (ser[st].type === 'line') {\n          lineSeries.series.push(series)\n          lineSeries.i.push(st)\n          comboCount++\n        } else if (ser[st].type === 'scatter') {\n          scatterSeries.series.push(series)\n          scatterSeries.i.push(st)\n        } else if (ser[st].type === 'bubble') {\n          bubbleSeries.series.push(series)\n          bubbleSeries.i.push(st)\n          comboCount++\n        } else if (ser[st].type === 'candlestick') {\n          candlestickSeries.series.push(series)\n          candlestickSeries.i.push(st)\n          comboCount++\n        } else if (ser[st].type === 'boxPlot') {\n          boxplotSeries.series.push(series)\n          boxplotSeries.i.push(st)\n          comboCount++\n        } else {\n          // user has specified type, but it is not valid (other than line/area/column)\n          console.warn(\n            'You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble'\n          )\n        }\n        if (comboCount > 1) {\n          gl.comboCharts = true\n        }\n      } else {\n        lineSeries.series.push(series)\n        lineSeries.i.push(st)\n      }\n    })\n\n    let line = new Line(this.ctx, xyRatios)\n    let boxCandlestick = new BoxCandleStick(this.ctx, xyRatios)\n    this.ctx.pie = new Pie(this.ctx)\n    let radialBar = new Radial(this.ctx)\n    this.ctx.rangeBar = new RangeBar(this.ctx, xyRatios)\n    let gantt = new Gantt(this.ctx, xyRatios)\n    let radar = new Radar(this.ctx)\n    let elGraph = []\n\n    if (gl.comboCharts) {\n      if (areaSeries.series.length > 0) {\n        elGraph.push(line.draw(areaSeries.series, 'area', areaSeries.i))\n      }\n      if (columnSeries.series.length > 0) {\n        if (w.config.chart.stacked) {\n          let barStacked = new BarStacked(this.ctx, xyRatios)\n          elGraph.push(barStacked.draw(columnSeries.series, columnSeries.i))\n        } else {\n          this.ctx.bar = new Bar(this.ctx, xyRatios)\n          elGraph.push(this.ctx.bar.draw(columnSeries.series, columnSeries.i))\n        }\n      }\n      if (lineSeries.series.length > 0) {\n        elGraph.push(line.draw(lineSeries.series, 'line', lineSeries.i))\n      }\n      if (candlestickSeries.series.length > 0) {\n        elGraph.push(\n          boxCandlestick.draw(candlestickSeries.series, candlestickSeries.i)\n        )\n      }\n      if (boxplotSeries.series.length > 0) {\n        elGraph.push(boxCandlestick.draw(boxplotSeries.series, boxplotSeries.i))\n      }\n      if (scatterSeries.series.length > 0) {\n        const scatterLine = new Line(this.ctx, xyRatios, true)\n        elGraph.push(\n          scatterLine.draw(scatterSeries.series, 'scatter', scatterSeries.i)\n        )\n      }\n      if (bubbleSeries.series.length > 0) {\n        const bubbleLine = new Line(this.ctx, xyRatios, true)\n        elGraph.push(\n          bubbleLine.draw(bubbleSeries.series, 'bubble', bubbleSeries.i)\n        )\n      }\n    } else {\n      switch (cnf.chart.type) {\n        case 'line':\n          elGraph = line.draw(gl.series, 'line')\n          break\n        case 'area':\n          elGraph = line.draw(gl.series, 'area')\n          break\n        case 'bar':\n          if (cnf.chart.stacked) {\n            let barStacked = new BarStacked(this.ctx, xyRatios)\n            elGraph = barStacked.draw(gl.series)\n          } else {\n            this.ctx.bar = new Bar(this.ctx, xyRatios)\n            elGraph = this.ctx.bar.draw(gl.series)\n          }\n          break\n        case 'candlestick':\n          let candleStick = new BoxCandleStick(this.ctx, xyRatios)\n          elGraph = candleStick.draw(gl.series)\n          break\n        case 'boxPlot':\n          let boxPlot = new BoxCandleStick(this.ctx, xyRatios)\n          elGraph = boxPlot.draw(gl.series)\n          break\n        case 'rangeBar':\n          elGraph = this.ctx.rangeBar.draw(gl.series)\n          break\n        case 'gantt':\n          elGraph = gantt.draw(gl.series)\n          break\n        case 'heatmap':\n          let heatmap = new HeatMap(this.ctx, xyRatios)\n          elGraph = heatmap.draw(gl.series)\n          break\n        case 'treemap':\n          let treemap = new Treemap(this.ctx, xyRatios)\n          elGraph = treemap.draw(gl.series)\n          break\n        case 'pie':\n        case 'donut':\n        case 'polarArea':\n          elGraph = this.ctx.pie.draw(gl.series)\n          break\n        case 'radialBar':\n          elGraph = radialBar.draw(gl.series)\n          break\n        case 'radar':\n          elGraph = radar.draw(gl.series)\n          break\n        default:\n          elGraph = line.draw(gl.series)\n      }\n    }\n\n    return elGraph\n  }\n\n  setSVGDimensions() {\n    let gl = this.w.globals\n    let cnf = this.w.config\n\n    gl.svgWidth = cnf.chart.width\n    gl.svgHeight = cnf.chart.height\n\n    let elDim = Utils.getDimensions(this.el)\n\n    let widthUnit = cnf.chart.width\n      .toString()\n      .split(/[0-9]+/g)\n      .pop()\n\n    if (widthUnit === '%') {\n      if (Utils.isNumber(elDim[0])) {\n        if (elDim[0].width === 0) {\n          elDim = Utils.getDimensions(this.el.parentNode)\n        }\n\n        gl.svgWidth = (elDim[0] * parseInt(cnf.chart.width, 10)) / 100\n      }\n    } else if (widthUnit === 'px' || widthUnit === '') {\n      gl.svgWidth = parseInt(cnf.chart.width, 10)\n    }\n\n    let heightUnit = cnf.chart.height\n      .toString()\n      .split(/[0-9]+/g)\n      .pop()\n    if (gl.svgHeight !== 'auto' && gl.svgHeight !== '') {\n      if (heightUnit === '%') {\n        let elParentDim = Utils.getDimensions(this.el.parentNode)\n        gl.svgHeight = (elParentDim[1] * parseInt(cnf.chart.height, 10)) / 100\n      } else {\n        gl.svgHeight = parseInt(cnf.chart.height, 10)\n      }\n    } else {\n      if (gl.axisCharts) {\n        gl.svgHeight = gl.svgWidth / 1.61\n      } else {\n        gl.svgHeight = gl.svgWidth / 1.2\n      }\n    }\n\n    if (gl.svgWidth < 0) gl.svgWidth = 0\n    if (gl.svgHeight < 0) gl.svgHeight = 0\n\n    Graphics.setAttrs(gl.dom.Paper.node, {\n      width: gl.svgWidth,\n      height: gl.svgHeight\n    })\n\n    if (heightUnit !== '%') {\n      // fixes https://github.com/apexcharts/apexcharts.js/issues/2059\n      let offsetY = cnf.chart.sparkline.enabled\n        ? 0\n        : gl.axisCharts\n        ? cnf.chart.parentHeightOffset\n        : 0\n\n      gl.dom.Paper.node.parentNode.parentNode.style.minHeight =\n        gl.svgHeight + offsetY + 'px'\n    }\n\n    gl.dom.elWrap.style.width = gl.svgWidth + 'px'\n    gl.dom.elWrap.style.height = gl.svgHeight + 'px'\n  }\n\n  shiftGraphPosition() {\n    let gl = this.w.globals\n\n    let tY = gl.translateY\n    let tX = gl.translateX\n\n    let scalingAttrs = {\n      transform: 'translate(' + tX + ', ' + tY + ')'\n    }\n    Graphics.setAttrs(gl.dom.elGraphical.node, scalingAttrs)\n  }\n\n  // To prevent extra spacings in the bottom of the chart, we need to recalculate the height for pie/donut/radialbar charts\n  resizeNonAxisCharts() {\n    const w = this.w\n\n    const gl = w.globals\n\n    let legendHeight = 0\n    let offY = w.config.chart.sparkline.enabled ? 1 : 15\n    offY = offY + w.config.grid.padding.bottom\n\n    if (\n      (w.config.legend.position === 'top' ||\n        w.config.legend.position === 'bottom') &&\n      w.config.legend.show &&\n      !w.config.legend.floating\n    ) {\n      legendHeight =\n        new Legend(this.ctx).legendHelpers.getLegendBBox().clwh + 10\n    }\n\n    let el = w.globals.dom.baseEl.querySelector(\n      '.apexcharts-radialbar, .apexcharts-pie'\n    )\n\n    let chartInnerDimensions = w.globals.radialSize * 2.05\n\n    if (el && !w.config.chart.sparkline.enabled) {\n      let elRadialRect = Utils.getBoundingClientRect(el)\n      chartInnerDimensions = elRadialRect.bottom\n\n      let maxHeight = elRadialRect.bottom - elRadialRect.top\n\n      chartInnerDimensions = Math.max(w.globals.radialSize * 2.05, maxHeight)\n    }\n\n    let newHeight = chartInnerDimensions + gl.translateY + legendHeight + offY\n\n    if (gl.dom.elLegendForeign) {\n      gl.dom.elLegendForeign.setAttribute('height', newHeight)\n    }\n\n    gl.dom.elWrap.style.height = newHeight + 'px'\n\n    Graphics.setAttrs(gl.dom.Paper.node, {\n      height: newHeight\n    })\n\n    gl.dom.Paper.node.parentNode.parentNode.style.minHeight = newHeight + 'px'\n  }\n\n  /*\n   ** All the calculations for setting range in charts will be done here\n   */\n  coreCalculations() {\n    const range = new Range(this.ctx)\n    range.init()\n  }\n\n  resetGlobals() {\n    const resetxyValues = () => {\n      return this.w.config.series.map((s) => [])\n    }\n    const globalObj = new Globals()\n\n    let gl = this.w.globals\n    globalObj.initGlobalVars(gl)\n    gl.seriesXvalues = resetxyValues()\n    gl.seriesYvalues = resetxyValues()\n  }\n\n  isMultipleY() {\n    // user has supplied an array in yaxis property. So, turn on multipleYAxis flag\n    if (\n      this.w.config.yaxis.constructor === Array &&\n      this.w.config.yaxis.length > 1\n    ) {\n      this.w.globals.isMultipleYAxis = true\n      return true\n    }\n  }\n\n  xySettings() {\n    let xyRatios = null\n    const w = this.w\n\n    if (w.globals.axisCharts) {\n      if (w.config.xaxis.crosshairs.position === 'back') {\n        const crosshairs = new Crosshairs(this.ctx)\n        crosshairs.drawXCrosshairs()\n      }\n      if (w.config.yaxis[0].crosshairs.position === 'back') {\n        const crosshairs = new Crosshairs(this.ctx)\n        crosshairs.drawYCrosshairs()\n      }\n\n      if (\n        w.config.xaxis.type === 'datetime' &&\n        w.config.xaxis.labels.formatter === undefined\n      ) {\n        this.ctx.timeScale = new TimeScale(this.ctx)\n        let formattedTimeScale = []\n        if (\n          isFinite(w.globals.minX) &&\n          isFinite(w.globals.maxX) &&\n          !w.globals.isBarHorizontal\n        ) {\n          formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(\n            w.globals.minX,\n            w.globals.maxX\n          )\n        } else if (w.globals.isBarHorizontal) {\n          formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(\n            w.globals.minY,\n            w.globals.maxY\n          )\n        }\n        this.ctx.timeScale.recalcDimensionsBasedOnFormat(formattedTimeScale)\n      }\n\n      const coreUtils = new CoreUtils(this.ctx)\n      xyRatios = coreUtils.getCalculatedRatios()\n    }\n    return xyRatios\n  }\n\n  updateSourceChart(targetChart) {\n    this.ctx.w.globals.selection = undefined\n    this.ctx.updateHelpers._updateOptions(\n      {\n        chart: {\n          selection: {\n            xaxis: {\n              min: targetChart.w.globals.minX,\n              max: targetChart.w.globals.maxX\n            }\n          }\n        }\n      },\n      false,\n      false\n    )\n  }\n\n  setupBrushHandler() {\n    const w = this.w\n\n    // only for brush charts\n    if (!w.config.chart.brush.enabled) {\n      return\n    }\n\n    // if user has not defined a custom function for selection - we handle the brush chart\n    // otherwise we leave it to the user to define the functionality for selection\n    if (typeof w.config.chart.events.selection !== 'function') {\n      let targets = w.config.chart.brush.targets || [\n        w.config.chart.brush.target\n      ]\n      // retro compatibility with single target option\n      targets.forEach((target) => {\n        let targetChart = ApexCharts.getChartByID(target)\n        targetChart.w.globals.brushSource = this.ctx\n\n        if (typeof targetChart.w.config.chart.events.zoomed !== 'function') {\n          targetChart.w.config.chart.events.zoomed = () => {\n            this.updateSourceChart(targetChart)\n          }\n        }\n        if (typeof targetChart.w.config.chart.events.scrolled !== 'function') {\n          targetChart.w.config.chart.events.scrolled = () => {\n            this.updateSourceChart(targetChart)\n          }\n        }\n      })\n\n      w.config.chart.events.selection = (chart, e) => {\n        targets.forEach((target) => {\n          let targetChart = ApexCharts.getChartByID(target)\n          let yaxis = Utils.clone(w.config.yaxis)\n\n          if (\n            w.config.chart.brush.autoScaleYaxis &&\n            targetChart.w.globals.series.length === 1\n          ) {\n            const scale = new Scales(targetChart)\n            yaxis = scale.autoScaleY(targetChart, yaxis, e)\n          }\n\n          const multipleYaxis = targetChart.w.config.yaxis.reduce(\n            (acc, curr, index) => {\n              return [\n                ...acc,\n                {\n                  ...targetChart.w.config.yaxis[index],\n                  min: yaxis[0].min,\n                  max: yaxis[0].max\n                }\n              ]\n            },\n            []\n          )\n\n          targetChart.ctx.updateHelpers._updateOptions(\n            {\n              xaxis: {\n                min: e.xaxis.min,\n                max: e.xaxis.max\n              },\n              yaxis: multipleYaxis\n            },\n            false,\n            false,\n            false,\n            false\n          )\n        })\n      }\n    }\n  }\n}\n","import Defaults from '../settings/Defaults'\nimport Config from '../settings/Config'\nimport CoreUtils from '../CoreUtils'\nimport Graphics from '../Graphics'\nimport Utils from '../../utils/Utils'\n\nexport default class UpdateHelpers {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  /**\n   * private method to update Options.\n   *\n   * @param {object} options - A new config object can be passed which will be merged with the existing config object\n   * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n   * @param {boolean} animate - should animate or not on updating Options\n   * @param {boolean} overwriteInitialConfig - should update the initial config or not\n   */\n  _updateOptions(\n    options,\n    redraw = false,\n    animate = true,\n    updateSyncedCharts = true,\n    overwriteInitialConfig = false\n  ) {\n    let charts = [this.ctx]\n    if (updateSyncedCharts) {\n      charts = this.ctx.getSyncedCharts()\n    }\n\n    if (this.ctx.w.globals.isExecCalled) {\n      // If the user called exec method, we don't want to get grouped charts as user specifically provided a chartID to update\n      charts = [this.ctx]\n      this.ctx.w.globals.isExecCalled = false\n    }\n\n    charts.forEach((ch) => {\n      let w = ch.w\n\n      w.globals.shouldAnimate = animate\n\n      if (!redraw) {\n        w.globals.resized = true\n        w.globals.dataChanged = true\n\n        if (animate) {\n          ch.series.getPreviousPaths()\n        }\n      }\n\n      if (options && typeof options === 'object') {\n        ch.config = new Config(options)\n        options = CoreUtils.extendArrayProps(ch.config, options, w)\n\n        // fixes #914, #623\n        if (ch.w.globals.chartID !== this.ctx.w.globals.chartID) {\n          // don't overwrite series of synchronized charts\n          delete options.series\n        }\n\n        w.config = Utils.extend(w.config, options)\n\n        if (overwriteInitialConfig) {\n          // we need to forget the lastXAxis and lastYAxis is user forcefully overwriteInitialConfig. If we do not do this, and next time when user zooms the chart after setting yaxis.min/max or xaxis.min/max - the stored lastXAxis will never allow the chart to use the updated min/max by user.\n          w.globals.lastXAxis = options.xaxis ? Utils.clone(options.xaxis) : []\n          w.globals.lastYAxis = options.yaxis ? Utils.clone(options.yaxis) : []\n\n          // After forgetting lastAxes, we need to restore the new config in initialConfig/initialSeries\n          w.globals.initialConfig = Utils.extend({}, w.config)\n          w.globals.initialSeries = Utils.clone(w.config.series)\n        }\n      }\n\n      return ch.update(options)\n    })\n  }\n\n  /**\n   * Private method to update Series.\n   *\n   * @param {array} series - New series which will override the existing\n   */\n  _updateSeries(newSeries, animate, overwriteInitialSeries = false) {\n    const w = this.w\n\n    w.globals.shouldAnimate = animate\n\n    w.globals.dataChanged = true\n\n    if (animate) {\n      this.ctx.series.getPreviousPaths()\n    }\n\n    let existingSeries\n\n    // axis charts\n    if (w.globals.axisCharts) {\n      existingSeries = newSeries.map((s, i) => {\n        return this._extendSeries(s, i)\n      })\n\n      if (existingSeries.length === 0) {\n        existingSeries = [{ data: [] }]\n      }\n      w.config.series = existingSeries\n    } else {\n      // non-axis chart (pie/radialbar)\n      w.config.series = newSeries.slice()\n    }\n\n    if (overwriteInitialSeries) {\n      w.globals.initialSeries = Utils.clone(w.config.series)\n    }\n    return this.ctx.update()\n  }\n\n  _extendSeries(s, i) {\n    const w = this.w\n    const ser = w.config.series[i]\n\n    return {\n      ...w.config.series[i],\n      name: s.name ? s.name : ser && ser.name,\n      color: s.color ? s.color : ser && ser.color,\n      type: s.type ? s.type : ser && ser.type,\n      data: s.data ? s.data : ser && ser.data\n    }\n  }\n\n  toggleDataPointSelection(seriesIndex, dataPointIndex) {\n    const w = this.w\n    let elPath = null\n    const parent = `.apexcharts-series[data\\\\:realIndex='${seriesIndex}']`\n\n    if (w.globals.axisCharts) {\n      elPath = w.globals.dom.Paper.select(\n        `${parent} path[j='${dataPointIndex}'], ${parent} circle[j='${dataPointIndex}'], ${parent} rect[j='${dataPointIndex}']`\n      ).members[0]\n    } else {\n      // dataPointIndex will be undefined here, hence using seriesIndex\n      if (typeof dataPointIndex === 'undefined') {\n        elPath = w.globals.dom.Paper.select(\n          `${parent} path[j='${seriesIndex}']`\n        ).members[0]\n\n        if (\n          w.config.chart.type === 'pie' ||\n          w.config.chart.type === 'polarArea' ||\n          w.config.chart.type === 'donut'\n        ) {\n          this.ctx.pie.pieClicked(seriesIndex)\n        }\n      }\n    }\n\n    if (elPath) {\n      const graphics = new Graphics(this.ctx)\n      graphics.pathMouseDown(elPath, null)\n    } else {\n      console.warn('toggleDataPointSelection: Element not found')\n      return null\n    }\n\n    return elPath.node ? elPath.node : null\n  }\n\n  forceXAxisUpdate(options) {\n    const w = this.w\n    const minmax = ['min', 'max']\n\n    minmax.forEach((a) => {\n      if (typeof options.xaxis[a] !== 'undefined') {\n        w.config.xaxis[a] = options.xaxis[a]\n        w.globals.lastXAxis[a] = options.xaxis[a]\n      }\n    })\n\n    if (options.xaxis.categories && options.xaxis.categories.length) {\n      w.config.xaxis.categories = options.xaxis.categories\n    }\n\n    if (w.config.xaxis.convertedCatToNumeric) {\n      const defaults = new Defaults(options)\n      options = defaults.convertCatToNumericXaxis(options, this.ctx)\n    }\n    return options\n  }\n\n  forceYAxisUpdate(options) {\n    const w = this.w\n    if (w.config.chart.stacked && w.config.chart.stackType === '100%') {\n      if (Array.isArray(options.yaxis)) {\n        options.yaxis.forEach((yaxe, index) => {\n          options.yaxis[index].min = 0\n          options.yaxis[index].max = 100\n        })\n      } else {\n        options.yaxis.min = 0\n        options.yaxis.max = 100\n      }\n    }\n    return options\n  }\n\n  /**\n   * This function reverts the yaxis and xaxis min/max values to what it was when the chart was defined.\n   * This function fixes an important bug where a user might load a new series after zooming in/out of previous series which resulted in wrong min/max\n   * Also, this should never be called internally on zoom/pan - the reset should only happen when user calls the updateSeries() function externally\n   * The function also accepts an object {xaxis, yaxis} which when present is set as the new xaxis/yaxis\n   */\n  revertDefaultAxisMinMax(opts) {\n    const w = this.w\n\n    let xaxis = w.globals.lastXAxis\n    let yaxis = w.globals.lastYAxis\n\n    if (opts && opts.xaxis) {\n      xaxis = opts.xaxis\n    }\n    if (opts && opts.yaxis) {\n      yaxis = opts.yaxis\n    }\n    w.config.xaxis.min = xaxis.min\n    w.config.xaxis.max = xaxis.max\n\n    const getLastYAxis = (index) => {\n      if (typeof yaxis[index] !== 'undefined') {\n        w.config.yaxis[index].min = yaxis[index].min\n        w.config.yaxis[index].max = yaxis[index].max\n      }\n    }\n\n    w.config.yaxis.map((yaxe, index) => {\n      if (w.globals.zoomed) {\n        // user has zoomed, check the last yaxis\n        getLastYAxis(index)\n      } else {\n        // user hasn't zoomed, check the last yaxis first\n        if (typeof yaxis[index] !== 'undefined') {\n          getLastYAxis(index)\n        } else {\n          // if last y-axis don't exist, check the original yaxis\n          if (typeof this.ctx.opts.yaxis[index] !== 'undefined') {\n            yaxe.min = this.ctx.opts.yaxis[index].min\n            yaxe.max = this.ctx.opts.yaxis[index].max\n          }\n        }\n      }\n    })\n  }\n}\n","import Events from '../Events'\nimport Localization from './Localization'\nimport Animations from '../Animations'\nimport Axes from '../axes/Axes'\nimport Config from '../settings/Config'\nimport CoreUtils from '../CoreUtils'\nimport Crosshairs from '../Crosshairs'\nimport Grid from '../axes/Grid'\nimport Graphics from '../Graphics'\nimport Exports from '../Exports'\nimport Options from '../settings/Options'\nimport Responsive from '../Responsive'\nimport Series from '../Series'\nimport Theme from '../Theme'\nimport Formatters from '../Formatters'\nimport TitleSubtitle from '../TitleSubtitle'\nimport Legend from '../legend/Legend'\nimport Toolbar from '../Toolbar'\nimport Dimensions from '../dimensions/Dimensions'\nimport ZoomPanSelection from '../ZoomPanSelection'\nimport Tooltip from '../tooltip/Tooltip'\nimport Core from '../Core'\nimport Data from '../Data'\nimport UpdateHelpers from './UpdateHelpers'\n\nimport 'svg.js'\nimport 'svg.filter.js'\nimport 'svg.pathmorphing.js'\nimport 'svg.draggable.js'\nimport 'svg.select.js'\nimport 'svg.resize.js'\n\nimport '../../assets/apexcharts.css'\nimport '../../utils/DetectElementResize'\n\n// global Apex object which user can use to override chart's defaults globally\nif (typeof window.Apex === 'undefined') {\n  window.Apex = {}\n}\n\nexport default class InitCtxVariables {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  initModules() {\n    this.ctx.publicMethods = [\n      'updateOptions',\n      'updateSeries',\n      'appendData',\n      'appendSeries',\n      'toggleSeries',\n      'showSeries',\n      'hideSeries',\n      'setLocale',\n      'resetSeries',\n      'zoomX',\n      'toggleDataPointSelection',\n      'dataURI',\n      'addXaxisAnnotation',\n      'addYaxisAnnotation',\n      'addPointAnnotation',\n      'clearAnnotations',\n      'removeAnnotation',\n      'paper',\n      'destroy'\n    ]\n\n    this.ctx.eventList = [\n      'click',\n      'mousedown',\n      'mousemove',\n      'mouseleave',\n      'touchstart',\n      'touchmove',\n      'touchleave',\n      'mouseup',\n      'touchend'\n    ]\n\n    this.ctx.animations = new Animations(this.ctx)\n    this.ctx.axes = new Axes(this.ctx)\n    this.ctx.core = new Core(this.ctx.el, this.ctx)\n    this.ctx.config = new Config({})\n    this.ctx.data = new Data(this.ctx)\n    this.ctx.grid = new Grid(this.ctx)\n    this.ctx.graphics = new Graphics(this.ctx)\n    this.ctx.coreUtils = new CoreUtils(this.ctx)\n    this.ctx.crosshairs = new Crosshairs(this.ctx)\n    this.ctx.events = new Events(this.ctx)\n    this.ctx.exports = new Exports(this.ctx)\n    this.ctx.localization = new Localization(this.ctx)\n    this.ctx.options = new Options()\n    this.ctx.responsive = new Responsive(this.ctx)\n    this.ctx.series = new Series(this.ctx)\n    this.ctx.theme = new Theme(this.ctx)\n    this.ctx.formatters = new Formatters(this.ctx)\n    this.ctx.titleSubtitle = new TitleSubtitle(this.ctx)\n    this.ctx.legend = new Legend(this.ctx)\n    this.ctx.toolbar = new Toolbar(this.ctx)\n    this.ctx.dimensions = new Dimensions(this.ctx)\n    this.ctx.updateHelpers = new UpdateHelpers(this.ctx)\n    this.ctx.zoomPanSelection = new ZoomPanSelection(this.ctx)\n    this.ctx.w.globals.tooltip = new Tooltip(this.ctx)\n  }\n}\n","export default class Destroy {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.w = ctx.w\n  }\n\n  clear({ isUpdating }) {\n    if (this.ctx.zoomPanSelection) {\n      this.ctx.zoomPanSelection.destroy()\n    }\n    if (this.ctx.toolbar) {\n      this.ctx.toolbar.destroy()\n    }\n\n    this.ctx.animations = null\n    this.ctx.axes = null\n    this.ctx.annotations = null\n    this.ctx.core = null\n    this.ctx.data = null\n    this.ctx.grid = null\n    this.ctx.series = null\n    this.ctx.responsive = null\n    this.ctx.theme = null\n    this.ctx.formatters = null\n    this.ctx.titleSubtitle = null\n    this.ctx.legend = null\n    this.ctx.dimensions = null\n    this.ctx.options = null\n    this.ctx.crosshairs = null\n    this.ctx.zoomPanSelection = null\n    this.ctx.updateHelpers = null\n    this.ctx.toolbar = null\n    this.ctx.localization = null\n    this.ctx.w.globals.tooltip = null\n    this.clearDomElements({ isUpdating })\n  }\n\n  killSVG(draw) {\n    draw.each(function(i, children) {\n      this.removeClass('*')\n      this.off()\n      this.stop()\n    }, true)\n    draw.ungroup()\n    draw.clear()\n  }\n\n  clearDomElements({ isUpdating }) {\n    const elSVG = this.w.globals.dom.Paper.node\n    // fixes apexcharts.js#1654 & vue-apexcharts#256\n    if (elSVG.parentNode && elSVG.parentNode.parentNode && !isUpdating) {\n      elSVG.parentNode.parentNode.style.minHeight = 'unset'\n    }\n\n    // detach root event\n    const baseEl = this.w.globals.dom.baseEl\n    if (baseEl) {\n      // see https://github.com/apexcharts/vue-apexcharts/issues/275\n      this.ctx.eventList.forEach((event) => {\n        baseEl.removeEventListener(event, this.ctx.events.documentEvent)\n      })\n    }\n\n    const domEls = this.w.globals.dom\n\n    if (this.ctx.el !== null) {\n      // remove all child elements - resetting the whole chart\n      while (this.ctx.el.firstChild) {\n        this.ctx.el.removeChild(this.ctx.el.firstChild)\n      }\n    }\n\n    this.killSVG(domEls.Paper)\n    domEls.Paper.remove()\n\n    domEls.elWrap = null\n    domEls.elGraphical = null\n    domEls.elAnnotations = null\n    domEls.elLegendWrap = null\n    domEls.baseEl = null\n    domEls.elGridRect = null\n    domEls.elGridRectMask = null\n    domEls.elGridRectMarkerMask = null\n    domEls.elForecastMask = null\n    domEls.elNonForecastMask = null\n    domEls.elDefs = null\n  }\n}\n","import Annotations from './modules/annotations/Annotations'\nimport Base from './modules/Base'\nimport CoreUtils from './modules/CoreUtils'\nimport DataLabels from './modules/DataLabels'\nimport Defaults from './modules/settings/Defaults'\nimport Exports from './modules/Exports'\nimport Grid from './modules/axes/Grid'\nimport Markers from './modules/Markers'\nimport Range from './modules/Range'\nimport Utils from './utils/Utils'\nimport XAxis from './modules/axes/XAxis'\nimport YAxis from './modules/axes/YAxis'\nimport InitCtxVariables from './modules/helpers/InitCtxVariables'\nimport Destroy from './modules/helpers/Destroy'\n\n/**\n *\n * @module ApexCharts\n **/\n\nexport default class ApexCharts {\n  constructor(el, opts) {\n    this.opts = opts\n    this.ctx = this\n\n    // Pass the user supplied options to the Base Class where these options will be extended with defaults. The returned object from Base Class will become the config object in the entire codebase.\n    this.w = new Base(opts).init()\n\n    this.el = el\n\n    this.w.globals.cuid = Utils.randomId()\n    this.w.globals.chartID = this.w.config.chart.id\n      ? Utils.escapeString(this.w.config.chart.id)\n      : this.w.globals.cuid\n\n    const initCtx = new InitCtxVariables(this)\n    initCtx.initModules()\n\n    this.create = Utils.bind(this.create, this)\n    this.windowResizeHandler = this._windowResizeHandler.bind(this)\n    this.parentResizeHandler = this._parentResizeCallback.bind(this)\n  }\n\n  /**\n   * The primary method user will call to render the chart.\n   */\n  render() {\n    // main method\n    return new Promise((resolve, reject) => {\n      // only draw chart, if element found\n      if (this.el !== null) {\n        if (typeof Apex._chartInstances === 'undefined') {\n          Apex._chartInstances = []\n        }\n        if (this.w.config.chart.id) {\n          Apex._chartInstances.push({\n            id: this.w.globals.chartID,\n            group: this.w.config.chart.group,\n            chart: this\n          })\n        }\n\n        // set the locale here\n        this.setLocale(this.w.config.chart.defaultLocale)\n        const beforeMount = this.w.config.chart.events.beforeMount\n        if (typeof beforeMount === 'function') {\n          beforeMount(this, this.w)\n        }\n\n        this.events.fireEvent('beforeMount', [this, this.w])\n        window.addEventListener('resize', this.windowResizeHandler)\n        window.addResizeListener(this.el.parentNode, this.parentResizeHandler)\n\n        let graphData = this.create(this.w.config.series, {})\n        if (!graphData) return resolve(this)\n        this.mount(graphData)\n          .then(() => {\n            if (typeof this.w.config.chart.events.mounted === 'function') {\n              this.w.config.chart.events.mounted(this, this.w)\n            }\n\n            this.events.fireEvent('mounted', [this, this.w])\n            resolve(graphData)\n          })\n          .catch((e) => {\n            reject(e)\n            // handle error in case no data or element not found\n          })\n      } else {\n        reject(new Error('Element not found'))\n      }\n    })\n  }\n\n  create(ser, opts) {\n    let w = this.w\n\n    const initCtx = new InitCtxVariables(this)\n    initCtx.initModules()\n    let gl = this.w.globals\n\n    gl.noData = false\n    gl.animationEnded = false\n\n    this.responsive.checkResponsiveConfig(opts)\n\n    if (w.config.xaxis.convertedCatToNumeric) {\n      const defaults = new Defaults(w.config)\n      defaults.convertCatToNumericXaxis(w.config, this.ctx)\n    }\n\n    if (this.el === null) {\n      gl.animationEnded = true\n      return null\n    }\n\n    this.core.setupElements()\n\n    if (w.config.chart.type === 'treemap') {\n      w.config.grid.show = false\n      w.config.yaxis[0].show = false\n    }\n\n    if (gl.svgWidth === 0) {\n      // if the element is hidden, skip drawing\n      gl.animationEnded = true\n      return null\n    }\n\n    const combo = CoreUtils.checkComboSeries(ser)\n    gl.comboCharts = combo.comboCharts\n    gl.comboBarCount = combo.comboBarCount\n\n    const allSeriesAreEmpty = ser.every((s) => s.data && s.data.length === 0)\n\n    if (ser.length === 0 || allSeriesAreEmpty) {\n      this.series.handleNoData()\n    }\n\n    this.events.setupEventHandlers()\n\n    // Handle the data inputted by user and set some of the global variables (for eg, if data is datetime / numeric / category). Don't calculate the range / min / max at this time\n    this.data.parseData(ser)\n\n    // this is a good time to set theme colors first\n    this.theme.init()\n\n    // as markers accepts array, we need to setup global markers for easier access\n    const markers = new Markers(this)\n    markers.setGlobalMarkerSize()\n\n    // labelFormatters should be called before dimensions as in dimensions we need text labels width\n    this.formatters.setLabelFormatters()\n    this.titleSubtitle.draw()\n\n    // legend is calculated here before coreCalculations because it affects the plottable area\n    // if there is some data to show or user collapsed all series, then proceed drawing legend\n    if (\n      !gl.noData ||\n      gl.collapsedSeries.length === gl.series.length ||\n      w.config.legend.showForSingleSeries\n    ) {\n      this.legend.init()\n    }\n\n    // check whether in multiple series, all series share the same X\n    this.series.hasAllSeriesEqualX()\n\n    // coreCalculations will give the min/max range and yaxis/axis values. It should be called here to set series variable from config to globals\n    if (gl.axisCharts) {\n      this.core.coreCalculations()\n      if (w.config.xaxis.type !== 'category') {\n        // as we have minX and maxX values, determine the default DateTimeFormat for time series\n        this.formatters.setLabelFormatters()\n      }\n      this.ctx.toolbar.minX = w.globals.minX\n      this.ctx.toolbar.maxX = w.globals.maxX\n    }\n\n    // we need to generate yaxis for heatmap separately as we are not showing numerics there, but seriesNames. There are some tweaks which are required for heatmap to align labels correctly which are done in below function\n    // Also we need to do this before calculating Dimensions plotCoords() method of Dimensions\n    this.formatters.heatmapLabelFormatters()\n\n    // We got plottable area here, next task would be to calculate axis areas\n    this.dimensions.plotCoords()\n\n    const xyRatios = this.core.xySettings()\n\n    this.grid.createGridMask()\n\n    const elGraph = this.core.plotChartType(ser, xyRatios)\n\n    const dataLabels = new DataLabels(this)\n    dataLabels.bringForward()\n    if (w.config.dataLabels.background.enabled) {\n      dataLabels.dataLabelsBackground()\n    }\n\n    // after all the drawing calculations, shift the graphical area (actual charts/bars) excluding legends\n    this.core.shiftGraphPosition()\n\n    const dim = {\n      plot: {\n        left: w.globals.translateX,\n        top: w.globals.translateY,\n        width: w.globals.gridWidth,\n        height: w.globals.gridHeight\n      }\n    }\n\n    return {\n      elGraph,\n      xyRatios,\n      elInner: w.globals.dom.elGraphical,\n      dimensions: dim\n    }\n  }\n\n  mount(graphData = null) {\n    let me = this\n    let w = me.w\n\n    return new Promise((resolve, reject) => {\n      // no data to display\n      if (me.el === null) {\n        return reject(\n          new Error('Not enough data to display or target element not found')\n        )\n      } else if (graphData === null || w.globals.allSeriesCollapsed) {\n        me.series.handleNoData()\n      }\n      if (w.config.chart.type !== 'treemap') {\n        me.axes.drawAxis(w.config.chart.type, graphData.xyRatios)\n      }\n\n      me.grid = new Grid(me)\n      let elgrid = me.grid.drawGrid()\n\n      me.annotations = new Annotations(me)\n      me.annotations.drawImageAnnos()\n      me.annotations.drawTextAnnos()\n\n      if (w.config.grid.position === 'back' && elgrid) {\n        w.globals.dom.elGraphical.add(elgrid.el)\n      }\n\n      let xAxis = new XAxis(this.ctx)\n      let yaxis = new YAxis(this.ctx)\n      if (elgrid !== null) {\n        xAxis.xAxisLabelCorrections(elgrid.xAxisTickWidth)\n        yaxis.setYAxisTextAlignments()\n\n        w.config.yaxis.map((yaxe, index) => {\n          if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n            yaxis.yAxisTitleRotate(index, yaxe.opposite)\n          }\n        })\n      }\n\n      if (w.config.annotations.position === 'back') {\n        w.globals.dom.Paper.add(w.globals.dom.elAnnotations)\n        me.annotations.drawAxesAnnotations()\n      }\n\n      if (Array.isArray(graphData.elGraph)) {\n        for (let g = 0; g < graphData.elGraph.length; g++) {\n          w.globals.dom.elGraphical.add(graphData.elGraph[g])\n        }\n      } else {\n        w.globals.dom.elGraphical.add(graphData.elGraph)\n      }\n\n      if (w.config.grid.position === 'front' && elgrid) {\n        w.globals.dom.elGraphical.add(elgrid.el)\n      }\n\n      if (w.config.xaxis.crosshairs.position === 'front') {\n        me.crosshairs.drawXCrosshairs()\n      }\n\n      if (w.config.yaxis[0].crosshairs.position === 'front') {\n        me.crosshairs.drawYCrosshairs()\n      }\n\n      if (w.config.annotations.position === 'front') {\n        w.globals.dom.Paper.add(w.globals.dom.elAnnotations)\n        me.annotations.drawAxesAnnotations()\n      }\n\n      if (!w.globals.noData) {\n        // draw tooltips at the end\n        if (w.config.tooltip.enabled && !w.globals.noData) {\n          me.w.globals.tooltip.drawTooltip(graphData.xyRatios)\n        }\n\n        if (\n          w.globals.axisCharts &&\n          (w.globals.isXNumeric ||\n            w.config.xaxis.convertedCatToNumeric ||\n            w.globals.isTimelineBar)\n        ) {\n          if (\n            w.config.chart.zoom.enabled ||\n            (w.config.chart.selection && w.config.chart.selection.enabled) ||\n            (w.config.chart.pan && w.config.chart.pan.enabled)\n          ) {\n            me.zoomPanSelection.init({\n              xyRatios: graphData.xyRatios\n            })\n          }\n        } else {\n          const tools = w.config.chart.toolbar.tools\n          let toolsArr = [\n            'zoom',\n            'zoomin',\n            'zoomout',\n            'selection',\n            'pan',\n            'reset'\n          ]\n          toolsArr.forEach((t) => {\n            tools[t] = false\n          })\n        }\n\n        if (w.config.chart.toolbar.show && !w.globals.allSeriesCollapsed) {\n          me.toolbar.createToolbar()\n        }\n      }\n\n      if (w.globals.memory.methodsToExec.length > 0) {\n        w.globals.memory.methodsToExec.forEach((fn) => {\n          fn.method(fn.params, false, fn.context)\n        })\n      }\n\n      if (!w.globals.axisCharts && !w.globals.noData) {\n        me.core.resizeNonAxisCharts()\n      }\n      resolve(me)\n    })\n  }\n\n  /**\n   * Destroy the chart instance by removing all elements which also clean up event listeners on those elements.\n   */\n  destroy() {\n    window.removeEventListener('resize', this.windowResizeHandler)\n\n    window.removeResizeListener(this.el.parentNode, this.parentResizeHandler)\n    // remove the chart's instance from the global Apex._chartInstances\n    const chartID = this.w.config.chart.id\n    if (chartID) {\n      Apex._chartInstances.forEach((c, i) => {\n        if (c.id === Utils.escapeString(chartID)) {\n          Apex._chartInstances.splice(i, 1)\n        }\n      })\n    }\n    new Destroy(this.ctx).clear({ isUpdating: false })\n  }\n\n  /**\n   * Allows users to update Options after the chart has rendered.\n   *\n   * @param {object} options - A new config object can be passed which will be merged with the existing config object\n   * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n   * @param {boolean} animate - should animate or not on updating Options\n   */\n  updateOptions(\n    options,\n    redraw = false,\n    animate = true,\n    updateSyncedCharts = true,\n    overwriteInitialConfig = true\n  ) {\n    const w = this.w\n\n    // when called externally, clear some global variables\n    // fixes apexcharts.js#1488\n    w.globals.selection = undefined\n\n    if (options.series) {\n      this.series.resetSeries(false, true, false)\n      if (options.series.length && options.series[0].data) {\n        options.series = options.series.map((s, i) => {\n          return this.updateHelpers._extendSeries(s, i)\n        })\n      }\n\n      // user updated the series via updateOptions() function.\n      // Hence, we need to reset axis min/max to avoid zooming issues\n      this.updateHelpers.revertDefaultAxisMinMax()\n    }\n    // user has set x-axis min/max externally - hence we need to forcefully set the xaxis min/max\n    if (options.xaxis) {\n      options = this.updateHelpers.forceXAxisUpdate(options)\n    }\n    if (options.yaxis) {\n      options = this.updateHelpers.forceYAxisUpdate(options)\n    }\n    if (w.globals.collapsedSeriesIndices.length > 0) {\n      this.series.clearPreviousPaths()\n    }\n    /* update theme mode#459 */\n    if (options.theme) {\n      options = this.theme.updateThemeOptions(options)\n    }\n    return this.updateHelpers._updateOptions(\n      options,\n      redraw,\n      animate,\n      updateSyncedCharts,\n      overwriteInitialConfig\n    )\n  }\n\n  /**\n   * Allows users to update Series after the chart has rendered.\n   *\n   * @param {array} series - New series which will override the existing\n   */\n  updateSeries(newSeries = [], animate = true, overwriteInitialSeries = true) {\n    this.series.resetSeries(false)\n    this.updateHelpers.revertDefaultAxisMinMax()\n    return this.updateHelpers._updateSeries(\n      newSeries,\n      animate,\n      overwriteInitialSeries\n    )\n  }\n\n  /**\n   * Allows users to append a new series after the chart has rendered.\n   *\n   * @param {array} newSerie - New serie which will be appended to the existing series\n   */\n  appendSeries(newSerie, animate = true, overwriteInitialSeries = true) {\n    const newSeries = this.w.config.series.slice()\n    newSeries.push(newSerie)\n    this.series.resetSeries(false)\n    this.updateHelpers.revertDefaultAxisMinMax()\n    return this.updateHelpers._updateSeries(\n      newSeries,\n      animate,\n      overwriteInitialSeries\n    )\n  }\n\n  /**\n   * Allows users to append Data to series.\n   *\n   * @param {array} newData - New data in the same format as series\n   */\n  appendData(newData, overwriteInitialSeries = true) {\n    let me = this\n\n    me.w.globals.dataChanged = true\n\n    me.series.getPreviousPaths()\n\n    let newSeries = me.w.config.series.slice()\n\n    for (let i = 0; i < newSeries.length; i++) {\n      if (newData[i] !== null && typeof newData[i] !== 'undefined') {\n        for (let j = 0; j < newData[i].data.length; j++) {\n          newSeries[i].data.push(newData[i].data[j])\n        }\n      }\n    }\n    me.w.config.series = newSeries\n    if (overwriteInitialSeries) {\n      me.w.globals.initialSeries = Utils.clone(me.w.config.series)\n    }\n\n    return this.update()\n  }\n\n  update(options) {\n    return new Promise((resolve, reject) => {\n      new Destroy(this.ctx).clear({ isUpdating: true })\n\n      const graphData = this.create(this.w.config.series, options)\n      if (!graphData) return resolve(this)\n      this.mount(graphData)\n        .then(() => {\n          if (typeof this.w.config.chart.events.updated === 'function') {\n            this.w.config.chart.events.updated(this, this.w)\n          }\n          this.events.fireEvent('updated', [this, this.w])\n\n          this.w.globals.isDirty = true\n\n          resolve(this)\n        })\n        .catch((e) => {\n          reject(e)\n        })\n    })\n  }\n\n  /**\n   * Get all charts in the same \"group\" (including the instance which is called upon) to sync them when user zooms in/out or pan.\n   */\n  getSyncedCharts() {\n    const chartGroups = this.getGroupedCharts()\n    let allCharts = [this]\n    if (chartGroups.length) {\n      allCharts = []\n      chartGroups.forEach((ch) => {\n        allCharts.push(ch)\n      })\n    }\n\n    return allCharts\n  }\n\n  /**\n   * Get charts in the same \"group\" (excluding the instance which is called upon) to perform operations on the other charts of the same group (eg., tooltip hovering)\n   */\n  getGroupedCharts() {\n    return Apex._chartInstances\n      .filter((ch) => {\n        if (ch.group) {\n          return true\n        }\n      })\n      .map((ch) => (this.w.config.chart.group === ch.group ? ch.chart : this))\n  }\n\n  static getChartByID(id) {\n    const chartId = Utils.escapeString(id)\n    const c = Apex._chartInstances.filter((ch) => ch.id === chartId)[0]\n    return c && c.chart\n  }\n\n  /**\n   * Allows the user to provide data attrs in the element and the chart will render automatically when this method is called by searching for the elements containing 'data-apexcharts' attribute\n   */\n  static initOnLoad() {\n    const els = document.querySelectorAll('[data-apexcharts]')\n\n    for (let i = 0; i < els.length; i++) {\n      const el = els[i]\n      const options = JSON.parse(els[i].getAttribute('data-options'))\n      const apexChart = new ApexCharts(el, options)\n      apexChart.render()\n    }\n  }\n\n  /**\n   * This static method allows users to call chart methods without necessarily from the\n   * instance of the chart in case user has assigned chartID to the targeted chart.\n   * The chartID is used for mapping the instance stored in Apex._chartInstances global variable\n   *\n   * This is helpful in cases when you don't have reference of the chart instance\n   * easily and need to call the method from anywhere.\n   * For eg, in React/Vue applications when you have many parent/child components,\n   * and need easy reference to other charts for performing dynamic operations\n   *\n   * @param {string} chartID - The unique identifier which will be used to call methods\n   * on that chart instance\n   * @param {function} fn - The method name to call\n   * @param {object} opts - The parameters which are accepted in the original method will be passed here in the same order.\n   */\n  static exec(chartID, fn, ...opts) {\n    const chart = this.getChartByID(chartID)\n    if (!chart) return\n\n    // turn on the global exec flag to indicate this method was called\n    chart.w.globals.isExecCalled = true\n\n    let ret = null\n    if (chart.publicMethods.indexOf(fn) !== -1) {\n      ret = chart[fn](...opts)\n    }\n    return ret\n  }\n\n  static merge(target, source) {\n    return Utils.extend(target, source)\n  }\n\n  toggleSeries(seriesName) {\n    return this.series.toggleSeries(seriesName)\n  }\n\n  showSeries(seriesName) {\n    this.series.showSeries(seriesName)\n  }\n\n  hideSeries(seriesName) {\n    this.series.hideSeries(seriesName)\n  }\n\n  resetSeries(shouldUpdateChart = true, shouldResetZoom = true) {\n    this.series.resetSeries(shouldUpdateChart, shouldResetZoom)\n  }\n\n  // Public method to add event listener on chart context\n  addEventListener(name, handler) {\n    this.events.addEventListener(name, handler)\n  }\n\n  // Public method to remove event listener on chart context\n  removeEventListener(name, handler) {\n    this.events.removeEventListener(name, handler)\n  }\n\n  addXaxisAnnotation(opts, pushToMemory = true, context = undefined) {\n    let me = this\n    if (context) {\n      me = context\n    }\n    me.annotations.addXaxisAnnotationExternal(opts, pushToMemory, me)\n  }\n\n  addYaxisAnnotation(opts, pushToMemory = true, context = undefined) {\n    let me = this\n    if (context) {\n      me = context\n    }\n    me.annotations.addYaxisAnnotationExternal(opts, pushToMemory, me)\n  }\n\n  addPointAnnotation(opts, pushToMemory = true, context = undefined) {\n    let me = this\n    if (context) {\n      me = context\n    }\n    me.annotations.addPointAnnotationExternal(opts, pushToMemory, me)\n  }\n\n  clearAnnotations(context = undefined) {\n    let me = this\n    if (context) {\n      me = context\n    }\n    me.annotations.clearAnnotations(me)\n  }\n\n  removeAnnotation(id, context = undefined) {\n    let me = this\n    if (context) {\n      me = context\n    }\n    me.annotations.removeAnnotation(me, id)\n  }\n\n  getChartArea() {\n    const el = this.w.globals.dom.baseEl.querySelector('.apexcharts-inner')\n\n    return el\n  }\n\n  getSeriesTotalXRange(minX, maxX) {\n    return this.coreUtils.getSeriesTotalsXRange(minX, maxX)\n  }\n\n  getHighestValueInSeries(seriesIndex = 0) {\n    const range = new Range(this.ctx)\n    return range.getMinYMaxY(seriesIndex).highestY\n  }\n\n  getLowestValueInSeries(seriesIndex = 0) {\n    const range = new Range(this.ctx)\n    return range.getMinYMaxY(seriesIndex).lowestY\n  }\n\n  getSeriesTotal() {\n    return this.w.globals.seriesTotals\n  }\n\n  toggleDataPointSelection(seriesIndex, dataPointIndex) {\n    return this.updateHelpers.toggleDataPointSelection(\n      seriesIndex,\n      dataPointIndex\n    )\n  }\n\n  zoomX(min, max) {\n    this.ctx.toolbar.zoomUpdateOptions(min, max)\n  }\n\n  setLocale(localeName) {\n    this.localization.setCurrentLocaleValues(localeName)\n  }\n\n  dataURI(options) {\n    const exp = new Exports(this.ctx)\n    return exp.dataURI(options)\n  }\n\n  paper() {\n    return this.w.globals.dom.Paper\n  }\n\n  _parentResizeCallback() {\n    if (\n      this.w.globals.animationEnded &&\n      this.w.config.chart.redrawOnParentResize\n    ) {\n      this._windowResize()\n    }\n  }\n\n  /**\n   * Handle window resize and re-draw the whole chart.\n   */\n  _windowResize() {\n    clearTimeout(this.w.globals.resizeTimer)\n    this.w.globals.resizeTimer = window.setTimeout(() => {\n      this.w.globals.resized = true\n      this.w.globals.dataChanged = false\n\n      // we need to redraw the whole chart on window resize (with a small delay).\n      this.ctx.update()\n    }, 150)\n  }\n\n  _windowResizeHandler() {\n    let { redrawOnWindowResize: redraw } = this.w.config.chart\n\n    if (typeof redraw === 'function') {\n      redraw = redraw()\n    }\n\n    redraw && this._windowResize()\n  }\n}\n","/*\n * treemap-squarify.js - open source implementation of squarified treemaps\n *\n * Treemap Squared 0.5 - Treemap Charting library\n *\n * https://github.com/imranghory/treemap-squared/\n *\n * Copyright (c) 2012 Imran Ghory (imranghory@gmail.com)\n * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.\n *\n *\n * Implementation of the squarify treemap algorithm described in:\n *\n * Bruls, Mark; Huizing, Kees; van Wijk, Jarke J. (2000), \"Squarified treemaps\"\n * in de Leeuw, W.; van Liere, R., Data Visualization 2000:\n * Proc. Joint Eurographics and IEEE TCVG Symp. on Visualization, Springer-Verlag, pp. 33–42.\n *\n * Paper is available online at: http://www.win.tue.nl/~vanwijk/stm.pdf\n *\n * The code in this file is completeley decoupled from the drawing code so it should be trivial\n * to port it to any other vector drawing library. Given an array of datapoints this library returns\n * an array of cartesian coordinates that represent the rectangles that make up the treemap.\n *\n * The library also supports multidimensional data (nested treemaps) and performs normalization on the data.\n *\n * See the README file for more details.\n */\n\nwindow.TreemapSquared = {}\n;(function() {\n  'use strict'\n  window.TreemapSquared.generate = (function() {\n    function Container(xoffset, yoffset, width, height) {\n      this.xoffset = xoffset // offset from the the top left hand corner\n      this.yoffset = yoffset // ditto\n      this.height = height\n      this.width = width\n\n      this.shortestEdge = function() {\n        return Math.min(this.height, this.width)\n      }\n\n      // getCoordinates - for a row of boxes which we've placed\n      //                  return an array of their cartesian coordinates\n      this.getCoordinates = function(row) {\n        let coordinates = []\n        let subxoffset = this.xoffset,\n          subyoffset = this.yoffset //our offset within the container\n        let areawidth = sumArray(row) / this.height\n        let areaheight = sumArray(row) / this.width\n        let i\n\n        if (this.width >= this.height) {\n          for (i = 0; i < row.length; i++) {\n            coordinates.push([\n              subxoffset,\n              subyoffset,\n              subxoffset + areawidth,\n              subyoffset + row[i] / areawidth\n            ])\n            subyoffset = subyoffset + row[i] / areawidth\n          }\n        } else {\n          for (i = 0; i < row.length; i++) {\n            coordinates.push([\n              subxoffset,\n              subyoffset,\n              subxoffset + row[i] / areaheight,\n              subyoffset + areaheight\n            ])\n            subxoffset = subxoffset + row[i] / areaheight\n          }\n        }\n        return coordinates\n      }\n\n      // cutArea - once we've placed some boxes into an row we then need to identify the remaining area,\n      //           this function takes the area of the boxes we've placed and calculates the location and\n      //           dimensions of the remaining space and returns a container box defined by the remaining area\n      this.cutArea = function(area) {\n        let newcontainer\n\n        if (this.width >= this.height) {\n          let areawidth = area / this.height\n          let newwidth = this.width - areawidth\n          newcontainer = new Container(\n            this.xoffset + areawidth,\n            this.yoffset,\n            newwidth,\n            this.height\n          )\n        } else {\n          let areaheight = area / this.width\n          let newheight = this.height - areaheight\n          newcontainer = new Container(\n            this.xoffset,\n            this.yoffset + areaheight,\n            this.width,\n            newheight\n          )\n        }\n        return newcontainer\n      }\n    }\n\n    // normalize - the Bruls algorithm assumes we're passing in areas that nicely fit into our\n    //             container box, this method takes our raw data and normalizes the data values into\n    //             area values so that this assumption is valid.\n    function normalize(data, area) {\n      let normalizeddata = []\n      let sum = sumArray(data)\n      let multiplier = area / sum\n      let i\n\n      for (i = 0; i < data.length; i++) {\n        normalizeddata[i] = data[i] * multiplier\n      }\n      return normalizeddata\n    }\n\n    // treemapMultidimensional - takes multidimensional data (aka [[23,11],[11,32]] - nested array)\n    //                           and recursively calls itself using treemapSingledimensional\n    //                           to create a patchwork of treemaps and merge them\n    function treemapMultidimensional(data, width, height, xoffset, yoffset) {\n      xoffset = typeof xoffset === 'undefined' ? 0 : xoffset\n      yoffset = typeof yoffset === 'undefined' ? 0 : yoffset\n\n      let mergeddata = []\n      let mergedtreemap\n      let results = []\n      let i\n\n      if (isArray(data[0])) {\n        // if we've got more dimensions of depth\n        for (i = 0; i < data.length; i++) {\n          mergeddata[i] = sumMultidimensionalArray(data[i])\n        }\n        mergedtreemap = treemapSingledimensional(\n          mergeddata,\n          width,\n          height,\n          xoffset,\n          yoffset\n        )\n\n        for (i = 0; i < data.length; i++) {\n          results.push(\n            treemapMultidimensional(\n              data[i],\n              mergedtreemap[i][2] - mergedtreemap[i][0],\n              mergedtreemap[i][3] - mergedtreemap[i][1],\n              mergedtreemap[i][0],\n              mergedtreemap[i][1]\n            )\n          )\n        }\n      } else {\n        results = treemapSingledimensional(\n          data,\n          width,\n          height,\n          xoffset,\n          yoffset\n        )\n      }\n      return results\n    }\n\n    // treemapSingledimensional - simple wrapper around squarify\n    function treemapSingledimensional(data, width, height, xoffset, yoffset) {\n      xoffset = typeof xoffset === 'undefined' ? 0 : xoffset\n      yoffset = typeof yoffset === 'undefined' ? 0 : yoffset\n\n      let rawtreemap = squarify(\n        normalize(data, width * height),\n        [],\n        new Container(xoffset, yoffset, width, height),\n        []\n      )\n      return flattenTreemap(rawtreemap)\n    }\n\n    // flattenTreemap - squarify implementation returns an array of arrays of coordinates\n    //                  because we have a new array everytime we switch to building a new row\n    //                  this converts it into an array of coordinates.\n    function flattenTreemap(rawtreemap) {\n      let flattreemap = []\n      let i, j\n\n      for (i = 0; i < rawtreemap.length; i++) {\n        for (j = 0; j < rawtreemap[i].length; j++) {\n          flattreemap.push(rawtreemap[i][j])\n        }\n      }\n      return flattreemap\n    }\n\n    // squarify  - as per the Bruls paper\n    //             plus coordinates stack and containers so we get\n    //             usable data out of it\n    function squarify(data, currentrow, container, stack) {\n      let length\n      let nextdatapoint\n      let newcontainer\n\n      if (data.length === 0) {\n        stack.push(container.getCoordinates(currentrow))\n        return\n      }\n\n      length = container.shortestEdge()\n      nextdatapoint = data[0]\n\n      if (improvesRatio(currentrow, nextdatapoint, length)) {\n        currentrow.push(nextdatapoint)\n        squarify(data.slice(1), currentrow, container, stack)\n      } else {\n        newcontainer = container.cutArea(sumArray(currentrow), stack)\n        stack.push(container.getCoordinates(currentrow))\n        squarify(data, [], newcontainer, stack)\n      }\n      return stack\n    }\n\n    // improveRatio - implements the worse calculation and comparision as given in Bruls\n    //                (note the error in the original paper; fixed here)\n    function improvesRatio(currentrow, nextnode, length) {\n      let newrow\n\n      if (currentrow.length === 0) {\n        return true\n      }\n\n      newrow = currentrow.slice()\n      newrow.push(nextnode)\n\n      let currentratio = calculateRatio(currentrow, length)\n      let newratio = calculateRatio(newrow, length)\n\n      // the pseudocode in the Bruls paper has the direction of the comparison\n      // wrong, this is the correct one.\n      return currentratio >= newratio\n    }\n\n    // calculateRatio - calculates the maximum width to height ratio of the\n    //                  boxes in this row\n    function calculateRatio(row, length) {\n      let min = Math.min.apply(Math, row)\n      let max = Math.max.apply(Math, row)\n      let sum = sumArray(row)\n      return Math.max(\n        (Math.pow(length, 2) * max) / Math.pow(sum, 2),\n        Math.pow(sum, 2) / (Math.pow(length, 2) * min)\n      )\n    }\n\n    // isArray - checks if arr is an array\n    function isArray(arr) {\n      return arr && arr.constructor === Array\n    }\n\n    // sumArray - sums a single dimensional array\n    function sumArray(arr) {\n      let sum = 0\n      let i\n\n      for (i = 0; i < arr.length; i++) {\n        sum += arr[i]\n      }\n      return sum\n    }\n\n    // sumMultidimensionalArray - sums the values in a nested array (aka [[0,1],[[2,3]]])\n    function sumMultidimensionalArray(arr) {\n      let i,\n        total = 0\n\n      if (isArray(arr[0])) {\n        for (i = 0; i < arr.length; i++) {\n          total += sumMultidimensionalArray(arr[i])\n        }\n      } else {\n        total = sumArray(arr)\n      }\n      return total\n    }\n\n    return treemapMultidimensional\n  })()\n})()\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    for (var i = 0; i < modules.length; i++) {\n      var item = [].concat(modules[i]);\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*! svg.draggable.js - v2.2.2 - 2019-01-08\r\n* https://github.com/svgdotjs/svg.draggable.js\r\n* Copyright (c) 2019 Wout Fierens; Licensed MIT */\r\n;(function() {\r\n\r\n  // creates handler, saves it\r\n  function DragHandler(el){\r\n    el.remember('_draggable', this)\r\n    this.el = el\r\n  }\r\n\r\n\r\n  // Sets new parameter, starts dragging\r\n  DragHandler.prototype.init = function(constraint, val){\r\n    var _this = this\r\n    this.constraint = constraint\r\n    this.value = val\r\n    this.el.on('mousedown.drag', function(e){ _this.start(e) })\r\n    this.el.on('touchstart.drag', function(e){ _this.start(e) })\r\n  }\r\n\r\n  // transforms one point from screen to user coords\r\n  DragHandler.prototype.transformPoint = function(event, offset){\r\n      event = event || window.event\r\n      var touches = event.changedTouches && event.changedTouches[0] || event\r\n      this.p.x = touches.clientX - (offset || 0)\r\n      this.p.y = touches.clientY\r\n      return this.p.matrixTransform(this.m)\r\n  }\r\n\r\n  // gets elements bounding box with special handling of groups, nested and use\r\n  DragHandler.prototype.getBBox = function(){\r\n\r\n    var box = this.el.bbox()\r\n\r\n    if(this.el instanceof SVG.Nested) box = this.el.rbox()\r\n\r\n    if (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) {\r\n      box.x = this.el.x()\r\n      box.y = this.el.y()\r\n    }\r\n\r\n    return box\r\n  }\r\n\r\n  // start dragging\r\n  DragHandler.prototype.start = function(e){\r\n\r\n    // check for left button\r\n    if(e.type == 'click'|| e.type == 'mousedown' || e.type == 'mousemove'){\r\n      if((e.which || e.buttons) != 1){\r\n          return\r\n      }\r\n    }\r\n\r\n    var _this = this\r\n\r\n    // fire beforedrag event\r\n    this.el.fire('beforedrag', { event: e, handler: this })\r\n    if(this.el.event().defaultPrevented) return;\r\n\r\n    // prevent browser drag behavior as soon as possible\r\n    e.preventDefault();\r\n\r\n    // prevent propagation to a parent that might also have dragging enabled\r\n    e.stopPropagation();\r\n\r\n    // search for parent on the fly to make sure we can call\r\n    // draggable() even when element is not in the dom currently\r\n    this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc)\r\n    this.p = this.parent.node.createSVGPoint()\r\n\r\n    // save current transformation matrix\r\n    this.m = this.el.node.getScreenCTM().inverse()\r\n\r\n    var box = this.getBBox()\r\n\r\n    var anchorOffset;\r\n\r\n    // fix text-anchor in text-element (#37)\r\n    if(this.el instanceof SVG.Text){\r\n      anchorOffset = this.el.node.getComputedTextLength();\r\n\r\n      switch(this.el.attr('text-anchor')){\r\n        case 'middle':\r\n          anchorOffset /= 2;\r\n          break\r\n        case 'start':\r\n          anchorOffset = 0;\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.startPoints = {\r\n      // We take absolute coordinates since we are just using a delta here\r\n      point: this.transformPoint(e, anchorOffset),\r\n      box:   box,\r\n      transform: this.el.transform()\r\n    }\r\n\r\n    // add drag and end events to window\r\n    SVG.on(window, 'mousemove.drag', function(e){ _this.drag(e) })\r\n    SVG.on(window, 'touchmove.drag', function(e){ _this.drag(e) })\r\n    SVG.on(window, 'mouseup.drag', function(e){ _this.end(e) })\r\n    SVG.on(window, 'touchend.drag', function(e){ _this.end(e) })\r\n\r\n    // fire dragstart event\r\n    this.el.fire('dragstart', {event: e, p: this.startPoints.point, m: this.m, handler: this})\r\n  }\r\n\r\n  // while dragging\r\n  DragHandler.prototype.drag = function(e){\r\n\r\n    var box = this.getBBox()\r\n      , p   = this.transformPoint(e)\r\n      , x   = this.startPoints.box.x + p.x - this.startPoints.point.x\r\n      , y   = this.startPoints.box.y + p.y - this.startPoints.point.y\r\n      , c   = this.constraint\r\n      , gx  = p.x - this.startPoints.point.x\r\n      , gy  = p.y - this.startPoints.point.y\r\n\r\n    this.el.fire('dragmove', {\r\n        event: e\r\n      , p: p\r\n      , m: this.m\r\n      , handler: this\r\n    })\r\n\r\n    if(this.el.event().defaultPrevented) return p\r\n\r\n    // move the element to its new position, if possible by constraint\r\n    if (typeof c == 'function') {\r\n\r\n      var coord = c.call(this.el, x, y, this.m)\r\n\r\n      // bool, just show us if movement is allowed or not\r\n      if (typeof coord == 'boolean') {\r\n        coord = {\r\n          x: coord,\r\n          y: coord\r\n        }\r\n      }\r\n\r\n      // if true, we just move. If !false its a number and we move it there\r\n      if (coord.x === true) {\r\n        this.el.x(x)\r\n      } else if (coord.x !== false) {\r\n        this.el.x(coord.x)\r\n      }\r\n\r\n      if (coord.y === true) {\r\n        this.el.y(y)\r\n      } else if (coord.y !== false) {\r\n        this.el.y(coord.y)\r\n      }\r\n\r\n    } else if (typeof c == 'object') {\r\n\r\n      // keep element within constrained box\r\n      if (c.minX != null && x < c.minX) {\r\n        x = c.minX\r\n        gx = x - this.startPoints.box.x\r\n      } else if (c.maxX != null && x > c.maxX - box.width) {\r\n        x = c.maxX - box.width\r\n        gx = x - this.startPoints.box.x\r\n      } if (c.minY != null && y < c.minY) {\r\n        y = c.minY\r\n        gy = y - this.startPoints.box.y\r\n      } else if (c.maxY != null && y > c.maxY - box.height) {\r\n        y = c.maxY - box.height\r\n        gy = y - this.startPoints.box.y\r\n      }\r\n\r\n      if (c.snapToGrid != null) {\r\n        x = x - (x % c.snapToGrid)\r\n        y = y - (y % c.snapToGrid)\r\n        gx = gx - (gx % c.snapToGrid)\r\n        gy = gy - (gy % c.snapToGrid)\r\n      }\r\n\r\n      if(this.el instanceof SVG.G)\r\n        this.el.matrix(this.startPoints.transform).transform({x:gx, y: gy}, true)\r\n      else\r\n        this.el.move(x, y)\r\n    }\r\n\r\n    // so we can use it in the end-method, too\r\n    return p\r\n  }\r\n\r\n  DragHandler.prototype.end = function(e){\r\n\r\n    // final drag\r\n    var p = this.drag(e);\r\n\r\n    // fire dragend event\r\n    this.el.fire('dragend', { event: e, p: p, m: this.m, handler: this })\r\n\r\n    // unbind events\r\n    SVG.off(window, 'mousemove.drag')\r\n    SVG.off(window, 'touchmove.drag')\r\n    SVG.off(window, 'mouseup.drag')\r\n    SVG.off(window, 'touchend.drag')\r\n\r\n  }\r\n\r\n  SVG.extend(SVG.Element, {\r\n    // Make element draggable\r\n    // Constraint might be an object (as described in readme.md) or a function in the form \"function (x, y)\" that gets called before every move.\r\n    // The function can return a boolean or an object of the form {x, y}, to which the element will be moved. \"False\" skips moving, true moves to raw x, y.\r\n    draggable: function(value, constraint) {\r\n\r\n      // Check the parameters and reassign if needed\r\n      if (typeof value == 'function' || typeof value == 'object') {\r\n        constraint = value\r\n        value = true\r\n      }\r\n\r\n      var dragHandler = this.remember('_draggable') || new DragHandler(this)\r\n\r\n      // When no parameter is given, value is true\r\n      value = typeof value === 'undefined' ? true : value\r\n\r\n      if(value) dragHandler.init(constraint || {}, value)\r\n      else {\r\n        this.off('mousedown.drag')\r\n        this.off('touchstart.drag')\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n  })\r\n\r\n}).call(this);\r\n","/*! svg.filter.js - v2.0.2 - 2016-02-24\r\n* https://github.com/wout/svg.filter.js\r\n* Copyright (c) 2016 Wout Fierens; Licensed MIT */\r\n;(function() {\r\n\r\n  // Main filter class\r\n  SVG.Filter = SVG.invent({\r\n    create: 'filter',\r\n    inherit: SVG.Parent,\r\n    extend: {\r\n      // Static strings\r\n      source:           'SourceGraphic',\r\n      sourceAlpha:      'SourceAlpha',\r\n      background:       'BackgroundImage',\r\n      backgroundAlpha:  'BackgroundAlpha',\r\n      fill:             'FillPaint',\r\n      stroke:           'StrokePaint',\r\n\r\n      autoSetIn: true,\r\n      // Custom put method for leaner code\r\n      put: function(element, i) {\r\n        this.add(element, i)\r\n\r\n        if(!element.attr('in') && this.autoSetIn){\r\n          element.attr('in',this.source)\r\n        }\r\n        if(!element.attr('result')){\r\n          element.attr('result',element)\r\n        }\r\n\r\n        return element\r\n      },\r\n      // Blend effect\r\n      blend: function(in1, in2, mode) {\r\n        return this.put(new SVG.BlendEffect(in1, in2, mode))\r\n      },\r\n      // ColorMatrix effect\r\n      colorMatrix: function(type, values) {\r\n        return this.put(new SVG.ColorMatrixEffect(type, values))\r\n      },\r\n      // ConvolveMatrix effect\r\n      convolveMatrix: function(matrix) {\r\n        return this.put(new SVG.ConvolveMatrixEffect(matrix))\r\n      },\r\n      // ComponentTransfer effect\r\n      componentTransfer: function(components) {\r\n        return this.put(new SVG.ComponentTransferEffect(components))\r\n      },\r\n      // Composite effect\r\n      composite: function(in1, in2, operator) {\r\n        return this.put(new SVG.CompositeEffect(in1, in2, operator))\r\n      },\r\n      // Flood effect\r\n      flood: function(color, opacity) {\r\n        return this.put(new SVG.FloodEffect(color, opacity))\r\n      },\r\n      // Offset effect\r\n      offset: function(x, y) {\r\n        return this.put(new SVG.OffsetEffect(x,y))\r\n      },\r\n      // Image effect\r\n      image: function(src) {\r\n        return this.put(new SVG.ImageEffect(src))\r\n      },\r\n      // Merge effect\r\n      merge: function() {\r\n        //pass the array of arguments to the constructor because we dont know if the user gave us an array as the first arguemnt or wether they listed the effects in the arguments\r\n        var args = [undefined]\r\n        for(var i in arguments) args.push(arguments[i])\r\n        return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect,args)))\r\n      },\r\n      // Gaussian Blur effect\r\n      gaussianBlur: function(x,y) {\r\n        return this.put(new SVG.GaussianBlurEffect(x,y))\r\n      },\r\n      // Morphology effect\r\n      morphology: function(operator,radius){\r\n        return this.put(new SVG.MorphologyEffect(operator,radius))\r\n      },\r\n      // DiffuseLighting effect\r\n      diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\r\n        return this.put(new SVG.DiffuseLightingEffect(surfaceScale,diffuseConstant,kernelUnitLength))\r\n      },\r\n      // DisplacementMap effect\r\n      displacementMap: function(in1,in2,scale,xChannelSelector,yChannelSelector){\r\n        return this.put(new SVG.DisplacementMapEffect(in1,in2,scale,xChannelSelector,yChannelSelector))\r\n      },\r\n      // SpecularLighting effect\r\n      specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\r\n        return this.put(new SVG.SpecularLightingEffect(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength))\r\n      },\r\n      // Tile effect\r\n      tile: function(){\r\n        return this.put(new SVG.TileEffect());\r\n      },\r\n      // Turbulence effect\r\n      turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\r\n        return this.put(new SVG.TurbulenceEffect(baseFrequency,numOctaves,seed,stitchTiles,type))\r\n      },\r\n      // Default string value\r\n      toString: function() {\r\n        return 'url(#' + this.attr('id') + ')'\r\n      }\r\n    }\r\n  })\r\n\r\n  //add .filter function\r\n  SVG.extend(SVG.Defs, {\r\n    // Define filter\r\n    filter: function(block) {\r\n      var filter = this.put(new SVG.Filter)\r\n\r\n      /* invoke passed block */\r\n      if (typeof block === 'function')\r\n        block.call(filter, filter)\r\n\r\n      return filter\r\n    }\r\n  })\r\n  SVG.extend(SVG.Container, {\r\n    // Define filter on defs\r\n    filter: function(block) {\r\n      return this.defs().filter(block)\r\n    }\r\n  })\r\n  SVG.extend(SVG.Element, SVG.G, SVG.Nested, {\r\n    // Create filter element in defs and store reference\r\n    filter: function(block) {\r\n      this.filterer = block instanceof SVG.Element ?\r\n        block : this.doc().filter(block)\r\n\r\n      if(this.doc() && this.filterer.doc() !== this.doc()){\r\n        this.doc().defs().add(this.filterer)\r\n      }\r\n\r\n      this.attr('filter', this.filterer)\r\n\r\n      return this.filterer\r\n    },\r\n    // Remove filter\r\n    unfilter: function(remove) {\r\n      /* also remove the filter node */\r\n      if (this.filterer && remove === true)\r\n        this.filterer.remove()\r\n\r\n      /* delete reference to filterer */\r\n      delete this.filterer\r\n\r\n      /* remove filter attribute */\r\n      return this.attr('filter', null)\r\n    }\r\n  })\r\n\r\n  // Create SVG.Effect class\r\n  SVG.Effect = SVG.invent({\r\n    create: function(){\r\n      this.constructor.call(this)\r\n    },\r\n    inherit: SVG.Element,\r\n    extend: {\r\n      // Set in attribute\r\n      in: function(effect) {\r\n        return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in')+'\"]').get(0) || this.attr('in') : this.attr('in', effect)\r\n      },\r\n      // Named result\r\n      result: function(result) {\r\n        return result == null? this.attr('result') : this.attr('result',result)\r\n      },\r\n      // Stringification\r\n      toString: function() {\r\n        return this.result()\r\n      }\r\n    }\r\n  })\r\n\r\n  // create class for parent effects like merge\r\n  // Inherit from SVG.Parent\r\n  SVG.ParentEffect = SVG.invent({\r\n    create: function(){\r\n      this.constructor.call(this)\r\n    },\r\n    inherit: SVG.Parent,\r\n    extend: {\r\n      // Set in attribute\r\n      in: function(effect) {\r\n        return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in')+'\"]').get(0) || this.attr('in') : this.attr('in', effect)\r\n      },\r\n      // Named result\r\n      result: function(result) {\r\n        return result == null? this.attr('result') : this.attr('result',result)\r\n      },\r\n      // Stringification\r\n      toString: function() {\r\n        return this.result()\r\n      }\r\n    }\r\n  })\r\n\r\n  //chaining\r\n  var chainingEffects = {\r\n    // Blend effect\r\n    blend: function(in2, mode) {\r\n      return this.parent() && this.parent().blend(this, in2, mode) //pass this as the first input\r\n    },\r\n    // ColorMatrix effect\r\n    colorMatrix: function(type, values) {\r\n      return this.parent() && this.parent().colorMatrix(type, values).in(this)\r\n    },\r\n    // ConvolveMatrix effect\r\n    convolveMatrix: function(matrix) {\r\n      return this.parent() && this.parent().convolveMatrix(matrix).in(this)\r\n    },\r\n    // ComponentTransfer effect\r\n    componentTransfer: function(components) {\r\n      return this.parent() && this.parent().componentTransfer(components).in(this)\r\n    },\r\n    // Composite effect\r\n    composite: function(in2, operator) {\r\n      return this.parent() && this.parent().composite(this, in2, operator) //pass this as the first input\r\n    },\r\n    // Flood effect\r\n    flood: function(color, opacity) {\r\n      return this.parent() && this.parent().flood(color, opacity) //this effect dont have inputs\r\n    },\r\n    // Offset effect\r\n    offset: function(x, y) {\r\n      return this.parent() && this.parent().offset(x,y).in(this)\r\n    },\r\n    // Image effect\r\n    image: function(src) {\r\n      return this.parent() && this.parent().image(src) //this effect dont have inputs\r\n    },\r\n    // Merge effect\r\n    merge: function() {\r\n      return this.parent() && this.parent().merge.apply(this.parent(),[this].concat(arguments)) //pass this as the first argument\r\n    },\r\n    // Gaussian Blur effect\r\n    gaussianBlur: function(x,y) {\r\n      return this.parent() && this.parent().gaussianBlur(x,y).in(this)\r\n    },\r\n    // Morphology effect\r\n    morphology: function(operator,radius){\r\n      return this.parent() && this.parent().morphology(operator,radius).in(this)\r\n    },\r\n    // DiffuseLighting effect\r\n    diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\r\n      return this.parent() && this.parent().diffuseLighting(surfaceScale,diffuseConstant,kernelUnitLength).in(this)\r\n    },\r\n    // DisplacementMap effect\r\n    displacementMap: function(in2,scale,xChannelSelector,yChannelSelector){\r\n      return this.parent() && this.parent().displacementMap(this,in2,scale,xChannelSelector,yChannelSelector) //pass this as the first input\r\n    },\r\n    // SpecularLighting effect\r\n    specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\r\n      return this.parent() && this.parent().specularLighting(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength).in(this)\r\n    },\r\n    // Tile effect\r\n    tile: function(){\r\n      return this.parent() && this.parent().tile().in(this)\r\n    },\r\n    // Turbulence effect\r\n    turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\r\n      return this.parent() && this.parent().turbulence(baseFrequency,numOctaves,seed,stitchTiles,type).in(this)\r\n    }\r\n  }\r\n  SVG.extend(SVG.Effect,chainingEffects)\r\n  SVG.extend(SVG.ParentEffect,chainingEffects)\r\n\r\n  //crea class for child effects, like MergeNode, FuncR and lights\r\n  SVG.ChildEffect = SVG.invent({\r\n    create: function(){\r\n      this.constructor.call(this)\r\n    },\r\n    inherit: SVG.Element,\r\n    extend: {\r\n    in: function(effect){\r\n      this.attr('in',effect)\r\n    }\r\n    //dont include any \"result\" functions because these types of nodes dont have them\r\n    }\r\n  })\r\n\r\n  // Create all different effects\r\n  var effects = {\r\n    blend: function(in1,in2,mode){\r\n      this.attr({\r\n        in: in1,\r\n        in2: in2,\r\n        mode: mode || 'normal'\r\n      })\r\n    },\r\n    colorMatrix: function(type,values){\r\n      if (type == 'matrix')\r\n        values = normaliseMatrix(values)\r\n\r\n      this.attr({\r\n        type:   type\r\n      , values: typeof values == 'undefined' ? null : values\r\n      })\r\n    },\r\n    convolveMatrix: function(matrix){\r\n      matrix = normaliseMatrix(matrix)\r\n\r\n      this.attr({\r\n        order:        Math.sqrt(matrix.split(' ').length)\r\n      , kernelMatrix: matrix\r\n      })\r\n    },\r\n    composite: function(in1, in2, operator){\r\n      this.attr({\r\n        in: in1,\r\n        in2: in2,\r\n        operator: operator\r\n      })\r\n    },\r\n    flood: function(color,opacity){\r\n      this.attr('flood-color',color)\r\n      if(opacity != null) this.attr('flood-opacity',opacity)\r\n    },\r\n    offset: function(x,y){\r\n      this.attr({\r\n        dx: x,\r\n        dy: y\r\n      })\r\n    },\r\n    image: function(src){\r\n      this.attr('href', src, SVG.xlink)\r\n    },\r\n    displacementMap: function(in1,in2,scale,xChannelSelector,yChannelSelector){\r\n      this.attr({\r\n        in: in1,\r\n        in2: in2,\r\n        scale: scale,\r\n        xChannelSelector: xChannelSelector,\r\n        yChannelSelector: yChannelSelector\r\n      })\r\n    },\r\n    gaussianBlur: function(x,y){\r\n      if(x != null || y != null)\r\n        this.attr('stdDeviation', listString(Array.prototype.slice.call(arguments)))\r\n      else\r\n        this.attr('stdDeviation', '0 0')\r\n    },\r\n    morphology: function(operator,radius){\r\n      this.attr({\r\n        operator: operator,\r\n        radius: radius\r\n      })\r\n    },\r\n    tile: function(){\r\n\r\n    },\r\n    turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\r\n      this.attr({\r\n        numOctaves: numOctaves,\r\n        seed: seed,\r\n        stitchTiles: stitchTiles,\r\n        baseFrequency: baseFrequency,\r\n        type: type\r\n      })\r\n    }\r\n  }\r\n\r\n  // Create all parent effects\r\n  var parentEffects = {\r\n    merge: function(){\r\n      var children\r\n\r\n      //test to see if we have a set\r\n      if(arguments[0] instanceof SVG.Set){\r\n        var that = this\r\n        arguments[0].each(function(i){\r\n          if(this instanceof SVG.MergeNode)\r\n            that.put(this)\r\n          else if(this instanceof SVG.Effect || this instanceof SVG.ParentEffect)\r\n            that.put(new SVG.MergeNode(this))\r\n        })\r\n      }\r\n      else{\r\n        //if the first argument is an array use it\r\n        if(Array.isArray(arguments[0]))\r\n          children = arguments[0]\r\n        else\r\n          children = arguments\r\n\r\n        for(var i = 0; i < children.length; i++){\r\n          if(children[i] instanceof SVG.MergeNode){\r\n            this.put(children[i])\r\n          }\r\n          else this.put(new SVG.MergeNode(children[i]))\r\n        }\r\n      }\r\n    },\r\n    componentTransfer: function(compontents){\r\n      /* create rgb set */\r\n      this.rgb = new SVG.Set\r\n\r\n      /* create components */\r\n      ;(['r', 'g', 'b', 'a']).forEach(function(c) {\r\n        /* create component */\r\n        this[c] = new SVG['Func' + c.toUpperCase()]('identity')\r\n\r\n        /* store component in set */\r\n        this.rgb.add(this[c])\r\n\r\n        /* add component node */\r\n        this.node.appendChild(this[c].node)\r\n      }.bind(this)) //lost context in foreach\r\n\r\n      /* set components */\r\n      if (compontents) {\r\n        if (compontents.rgb) {\r\n          /* set bundled components */\r\n          ;(['r', 'g', 'b']).forEach(function(c) {\r\n            this[c].attr(compontents.rgb)\r\n          }.bind(this))\r\n\r\n          delete compontents.rgb\r\n        }\r\n\r\n        /* set individual components */\r\n        for (var c in compontents)\r\n          this[c].attr(compontents[c])\r\n      }\r\n    },\r\n    diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\r\n      this.attr({\r\n        surfaceScale: surfaceScale,\r\n        diffuseConstant: diffuseConstant,\r\n        kernelUnitLength: kernelUnitLength\r\n      })\r\n    },\r\n    specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\r\n      this.attr({\r\n        surfaceScale: surfaceScale,\r\n        diffuseConstant: diffuseConstant,\r\n        specularExponent: specularExponent,\r\n        kernelUnitLength: kernelUnitLength\r\n      })\r\n    },\r\n  }\r\n\r\n  // Create child effects like PointLight and MergeNode\r\n  var childEffects = {\r\n    distantLight: function(azimuth, elevation){\r\n      this.attr({\r\n        azimuth: azimuth,\r\n        elevation: elevation\r\n      })\r\n    },\r\n    pointLight: function(x,y,z){\r\n      this.attr({\r\n        x: x,\r\n        y: y,\r\n        z: z\r\n      })\r\n    },\r\n    spotLight: function(x,y,z,pointsAtX,pointsAtY,pointsAtZ){\r\n      this.attr({\r\n        x: x,\r\n        y: y,\r\n        z: z,\r\n        pointsAtX: pointsAtX,\r\n        pointsAtY: pointsAtY,\r\n        pointsAtZ: pointsAtZ\r\n      })\r\n    },\r\n    mergeNode: function(in1){\r\n      this.attr('in',in1)\r\n    }\r\n  }\r\n\r\n  // Create compontent functions\r\n  ;(['r', 'g', 'b', 'a']).forEach(function(c) {\r\n    /* create class */\r\n    childEffects['Func' + c.toUpperCase()] = function(type) {\r\n      this.attr('type',type)\r\n\r\n      // take diffent arguments based on the type\r\n      switch(type){\r\n        case 'table':\r\n          this.attr('tableValues',arguments[1])\r\n          break\r\n        case 'linear':\r\n          this.attr('slope',arguments[1])\r\n          this.attr('intercept',arguments[2])\r\n          break\r\n        case 'gamma':\r\n          this.attr('amplitude',arguments[1])\r\n          this.attr('exponent',arguments[2])\r\n          this.attr('offset',arguments[2])\r\n          break\r\n      }\r\n    }\r\n  })\r\n\r\n  //create effects\r\n  foreach(effects,function(effect,i){\r\n\r\n    /* capitalize name */\r\n    var name = i.charAt(0).toUpperCase() + i.slice(1)\r\n    var proto = {}\r\n\r\n    /* create class */\r\n    SVG[name + 'Effect'] = SVG.invent({\r\n      create: function() {\r\n        //call super\r\n        this.constructor.call(this, SVG.create('fe' + name))\r\n\r\n        //call constructor for this effect\r\n        effect.apply(this,arguments)\r\n\r\n        //set the result\r\n        this.result(this.attr('id') + 'Out')\r\n      },\r\n      inherit: SVG.Effect,\r\n      extend: proto\r\n    })\r\n  })\r\n\r\n  //create parent effects\r\n  foreach(parentEffects,function(effect,i){\r\n\r\n    /* capitalize name */\r\n    var name = i.charAt(0).toUpperCase() + i.slice(1)\r\n    var proto = {}\r\n\r\n    /* create class */\r\n    SVG[name + 'Effect'] = SVG.invent({\r\n      create: function() {\r\n        //call super\r\n        this.constructor.call(this, SVG.create('fe' + name))\r\n\r\n        //call constructor for this effect\r\n        effect.apply(this,arguments)\r\n\r\n        //set the result\r\n        this.result(this.attr('id') + 'Out')\r\n      },\r\n      inherit: SVG.ParentEffect,\r\n      extend: proto\r\n    })\r\n  })\r\n\r\n  //create child effects\r\n  foreach(childEffects,function(effect,i){\r\n\r\n    /* capitalize name */\r\n    var name = i.charAt(0).toUpperCase() + i.slice(1)\r\n    var proto = {}\r\n\r\n    /* create class */\r\n    SVG[name] = SVG.invent({\r\n      create: function() {\r\n        //call super\r\n        this.constructor.call(this, SVG.create('fe' + name))\r\n\r\n        //call constructor for this effect\r\n        effect.apply(this,arguments)\r\n      },\r\n      inherit: SVG.ChildEffect,\r\n      extend: proto\r\n    })\r\n  })\r\n\r\n  // Effect-specific extensions\r\n  SVG.extend(SVG.MergeEffect,{\r\n    in: function(effect){\r\n      if(effect instanceof SVG.MergeNode)\r\n        this.add(effect,0)\r\n      else\r\n        this.add(new SVG.MergeNode(effect),0)\r\n\r\n      return this\r\n    }\r\n  })\r\n  SVG.extend(SVG.CompositeEffect,SVG.BlendEffect,SVG.DisplacementMapEffect,{\r\n    in2: function(effect){\r\n        return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in2')+'\"]').get(0) || this.attr('in2') : this.attr('in2', effect)\r\n    }\r\n  })\r\n\r\n  // Presets\r\n  SVG.filter = {\r\n    sepiatone:  [ .343, .669, .119, 0, 0\r\n                , .249, .626, .130, 0, 0\r\n                , .172, .334, .111, 0, 0\r\n                , .000, .000, .000, 1, 0 ]\r\n  }\r\n\r\n  // Helpers\r\n  function normaliseMatrix(matrix) {\r\n    /* convert possible array value to string */\r\n    if (Array.isArray(matrix))\r\n      matrix = new SVG.Array(matrix)\r\n\r\n    /* ensure there are no leading, tailing or double spaces */\r\n    return matrix.toString().replace(/^\\s+/, '').replace(/\\s+$/, '').replace(/\\s+/g, ' ')\r\n  }\r\n\r\n  function listString(list) {\r\n    if (!Array.isArray(list))\r\n      return list\r\n\r\n    for (var i = 0, l = list.length, s = []; i < l; i++)\r\n      s.push(list[i])\r\n\r\n    return s.join(' ')\r\n  }\r\n\r\n  function foreach(){ //loops through mutiple objects\r\n    var fn = function(){}\r\n    if(typeof arguments[arguments.length-1] == 'function'){\r\n      fn = arguments[arguments.length-1]\r\n      Array.prototype.splice.call(arguments,arguments.length-1,1)\r\n    }\r\n    for(var k in arguments){\r\n      for(var i in arguments[k]){\r\n        fn(arguments[k][i],i,arguments[k])\r\n      }\r\n    }\r\n  }\r\n\r\n}).call(this)\r\n","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.7.1\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Fri Nov 30 2018 10:01:55 GMT+0100 (GMT+01:00)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// Find global reference - uses 'this' by default when available,\r\n// falls back to 'window' otherwise (for bundlers like Webpack)\r\nvar globalRef = (typeof this !== \"undefined\") ? this : window;\r\n\r\n// The main wrapping element\r\nvar SVG = globalRef.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').attr('focusable', 'false').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        // make sure to use a clone\r\n        return array.map(function (el) { return el.slice() })\r\n      } else if (array[0].x != null){\r\n        // allow point objects to be passed\r\n        return array.map(function (el) { return [el.x, el.y] })\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n    this._events = {}\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n      this._events = node._events || {}\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document' || parent.node.parentNode.nodeName == '#document-fragment') return null // #759, #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // check if we have a list of values\r\n    if(SVG.regex.delimiter.test(from)) {\r\n      // prepare path for morphing\r\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\r\n      // prepare value list for morphing\r\n      else return new SVG.Array(from).morph(to)\r\n    }\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      // Construct the matrix directly, avoid values that are too small\r\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\r\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\r\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\r\n        + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n\r\n;[ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].forEach(function (event) {\r\n    // add event to SVG.Element\r\n    SVG.Element.prototype[event] = function (f) {\r\n      // bind event to element rather than element node\r\n      if (f == null) {\r\n        SVG.off(this, event)\r\n      } else {\r\n        SVG.on(this, event, f)\r\n      }\r\n      return this\r\n    }\r\n  })\r\n\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function (node, events, listener, binding, options) {\r\n  var l = listener.bind(binding || node)\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n\r\n  // ensure instance object for nodes which are not adopted\r\n  n.instance = n.instance || {_events: {}}\r\n\r\n  var bag = n.instance._events\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) { listener._svgjsListenerId = ++SVG.listenerId }\r\n\r\n  events.split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event.split('.')[0]\r\n    var ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function (node, events, listener, options) {\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n  if (!n.instance) return\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  var bag = n.instance._events\r\n\r\n  ;(events || '').split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event && event.split('.')[0]\r\n    var ns = event && event.split('.')[1]\r\n    var namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) { SVG.off(n, [ev, ns].join('.'), l) }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) { SVG.off(n, [event, ns].join('.')) }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) { SVG.off(n, [ev, namespace].join('.')) }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) { SVG.off(n, event) }\r\n\r\n      n.instance._events = {}\r\n    }\r\n  })\r\n}\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function (event, listener, binding, options) {\r\n    SVG.on(this, event, listener, binding, options)\r\n    return this\r\n  },\r\n  // Unbind event from listener\r\n  off: function (event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n    return this\r\n  },\r\n  fire: function (event, data) {\r\n    // Dispatch event\r\n    if (event instanceof window.Event) {\r\n      this.node.dispatchEvent(event)\r\n    } else {\r\n      this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail: data, cancelable: true}))\r\n    }\r\n    this._event = event\r\n    return this\r\n  },\r\n  event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document' || this.node.parentNode.nodeName == '#document-fragment') return null\r\n      return this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  , clone: function (parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // get reference to node\r\n      var node = this.node\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) {\r\n        (parent.node || parent).appendChild(clone.node)\r\n      } else {\r\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\r\n      }\r\n\r\n      return clone\r\n    }\r\n  }\r\n\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      SVG.Element.prototype.remove.call(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    if (members instanceof SVG.Set) {\r\n      this.members = members.members.slice()\r\n    } else {\r\n      Array.isArray(members) ? this.members = members : this.clear()\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = (url || '').toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\r\n// but in those cases, we are so close to 0 that 0 works well!\r\nfunction float32String(v) {\r\n  return Math.abs(v) > 1e-37 ? v : 0\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\r\n\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEventPoly = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEventPoly.prototype = window.Event.prototype\r\n\r\n  SVG.CustomEvent = CustomEventPoly\r\n} else {\r\n  SVG.CustomEvent = window.CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r","/*!\r\n* svg.pathmorphing.js - Enables pathmorphing / path animation in svg.js\r\n* @version 0.1.3\r\n*\r\n*\r\n* @copyright (c) 2018 Ulrich-Matthias Schäfer\r\n* @license MIT\r\n*/;\r\n;(function() {\r\n\"use strict\";\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  morph: function(array) {\r\n\r\n    var startArr = this.value\r\n      ,  destArr = this.parse(array)\r\n\r\n    var startOffsetM = 0\r\n      ,  destOffsetM = 0\r\n\r\n    var startOffsetNextM = false\r\n      ,  destOffsetNextM = false\r\n\r\n    while(true){\r\n      // stop if there is no M anymore\r\n      if(startOffsetM === false && destOffsetM === false) break\r\n\r\n      // find the next M in path array\r\n      startOffsetNextM = findNextM(startArr, startOffsetM === false ? false : startOffsetM+1)\r\n       destOffsetNextM = findNextM( destArr,  destOffsetM === false ? false :  destOffsetM+1)\r\n\r\n      // We have to add one M to the startArray\r\n      if(startOffsetM === false){\r\n        var bbox = new SVG.PathArray(result.start).bbox()\r\n\r\n        // when the last block had no bounding box we simply take the first M we got\r\n        if(bbox.height == 0 || bbox.width == 0){\r\n          startOffsetM =  startArr.push(startArr[0]) - 1\r\n        }else{\r\n          // we take the middle of the bbox instead when we got one\r\n          startOffsetM = startArr.push( ['M', bbox.x + bbox.width/2, bbox.y + bbox.height/2 ] ) - 1\r\n        }\r\n      }\r\n\r\n      // We have to add one M to the destArray\r\n      if( destOffsetM === false){\r\n        var bbox = new SVG.PathArray(result.dest).bbox()\r\n\r\n        if(bbox.height == 0 || bbox.width == 0){\r\n          destOffsetM =  destArr.push(destArr[0]) - 1\r\n        }else{\r\n          destOffsetM =  destArr.push( ['M', bbox.x + bbox.width/2, bbox.y + bbox.height/2 ] ) - 1\r\n        }\r\n      }\r\n\r\n      // handle block from M to next M\r\n      var result = handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM)\r\n\r\n      // update the arrays to their new values\r\n      startArr = startArr.slice(0, startOffsetM).concat(result.start, startOffsetNextM === false ? [] : startArr.slice(startOffsetNextM))\r\n       destArr =  destArr.slice(0,  destOffsetM).concat(result.dest ,  destOffsetNextM === false ? [] :  destArr.slice( destOffsetNextM))\r\n\r\n      // update offsets\r\n      startOffsetM = startOffsetNextM === false ? false : startOffsetM + result.start.length\r\n       destOffsetM =  destOffsetNextM === false ? false :  destOffsetM + result.dest.length\r\n\r\n    }\r\n\r\n    // copy back arrays\r\n    this.value = startArr\r\n    this.destination = new SVG.PathArray()\r\n    this.destination.value = destArr\r\n\r\n    return this\r\n  }\r\n})\r\n\r\n\r\n\r\n// sorry for the long declaration\r\n// slices out one block (from M to M) and syncronize it so the types and length match\r\nfunction handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM, undefined){\r\n\r\n  // slice out the block we need\r\n  var startArrTemp = startArr.slice(startOffsetM, startOffsetNextM || undefined)\r\n    ,  destArrTemp =  destArr.slice( destOffsetM,  destOffsetNextM || undefined)\r\n\r\n  var i = 0\r\n    , posStart = {pos:[0,0], start:[0,0]}\r\n    , posDest  = {pos:[0,0], start:[0,0]}\r\n\r\n  do{\r\n\r\n    // convert shorthand types to long form\r\n    startArrTemp[i] = simplyfy.call(posStart, startArrTemp[i])\r\n     destArrTemp[i] = simplyfy.call(posDest ,  destArrTemp[i])\r\n\r\n    // check if both shape types match\r\n    // 2 elliptical arc curve commands ('A'), are considered different if the\r\n    // flags (large-arc-flag, sweep-flag) don't match\r\n    if(startArrTemp[i][0] != destArrTemp[i][0] || startArrTemp[i][0] == 'M' ||\r\n        (startArrTemp[i][0] == 'A' &&\r\n          (startArrTemp[i][4] != destArrTemp[i][4] || startArrTemp[i][5] != destArrTemp[i][5])\r\n        )\r\n      ) {\r\n\r\n      // if not, convert shapes to beziere\r\n      Array.prototype.splice.apply(startArrTemp, [i, 1].concat(toBeziere.call(posStart, startArrTemp[i])))\r\n       Array.prototype.splice.apply(destArrTemp, [i, 1].concat(toBeziere.call(posDest, destArrTemp[i])))\r\n\r\n    } else {\r\n\r\n      // only update positions otherwise\r\n      startArrTemp[i] = setPosAndReflection.call(posStart, startArrTemp[i])\r\n       destArrTemp[i] = setPosAndReflection.call(posDest ,  destArrTemp[i])\r\n\r\n    }\r\n\r\n    // we are at the end at both arrays. stop here\r\n    if(++i == startArrTemp.length && i == destArrTemp.length) break\r\n\r\n    // destArray is longer. Add one element\r\n    if(i == startArrTemp.length){\r\n      startArrTemp.push([\r\n        'C',\r\n        posStart.pos[0],\r\n        posStart.pos[1],\r\n        posStart.pos[0],\r\n        posStart.pos[1],\r\n        posStart.pos[0],\r\n        posStart.pos[1],\r\n      ])\r\n    }\r\n\r\n    // startArr is longer. Add one element\r\n    if(i == destArrTemp.length){\r\n      destArrTemp.push([\r\n        'C',\r\n        posDest.pos[0],\r\n        posDest.pos[1],\r\n        posDest.pos[0],\r\n        posDest.pos[1],\r\n        posDest.pos[0],\r\n        posDest.pos[1]\r\n      ])\r\n    }\r\n\r\n\r\n  }while(true)\r\n\r\n  // return the updated block\r\n  return {start:startArrTemp, dest:destArrTemp}\r\n}\r\n\r\n// converts shorthand types to long form\r\nfunction simplyfy(val){\r\n\r\n  switch(val[0]){\r\n    case 'z': // shorthand line to start\r\n    case 'Z':\r\n      val[0] = 'L'\r\n      val[1] = this.start[0]\r\n      val[2] = this.start[1]\r\n      break\r\n    case 'H': // shorthand horizontal line\r\n      val[0] = 'L'\r\n      val[2] = this.pos[1]\r\n      break\r\n    case 'V': // shorthand vertical line\r\n      val[0] = 'L'\r\n      val[2] = val[1]\r\n      val[1] = this.pos[0]\r\n      break\r\n    case 'T': // shorthand quadratic beziere\r\n      val[0] = 'Q'\r\n      val[3] = val[1]\r\n      val[4] = val[2]\r\n      val[1] = this.reflection[1]\r\n      val[2] = this.reflection[0]\r\n      break\r\n    case 'S': // shorthand cubic beziere\r\n      val[0] = 'C'\r\n      val[6] = val[4]\r\n      val[5] = val[3]\r\n      val[4] = val[2]\r\n      val[3] = val[1]\r\n      val[2] = this.reflection[1]\r\n      val[1] = this.reflection[0]\r\n      break\r\n  }\r\n\r\n  return val\r\n\r\n}\r\n\r\n// updates reflection point and current position\r\nfunction setPosAndReflection(val){\r\n\r\n  var len = val.length\r\n\r\n  this.pos = [ val[len-2], val[len-1] ]\r\n\r\n  if('SCQT'.indexOf(val[0]) != -1)\r\n    this.reflection = [ 2 * this.pos[0] - val[len-4], 2 * this.pos[1] - val[len-3] ]\r\n\r\n  return val\r\n}\r\n\r\n// converts all types to cubic beziere\r\nfunction toBeziere(val){\r\n  var retVal = [val]\r\n\r\n  switch(val[0]){\r\n    case 'M': // special handling for M\r\n      this.pos = this.start = [val[1], val[2]]\r\n      return retVal\r\n    case 'L':\r\n      val[5] = val[3] = val[1]\r\n      val[6] = val[4] = val[2]\r\n      val[1] = this.pos[0]\r\n      val[2] = this.pos[1]\r\n      break\r\n    case 'Q':\r\n      val[6] = val[4]\r\n      val[5] = val[3]\r\n      val[4] = val[4] * 1/3 + val[2] * 2/3\r\n      val[3] = val[3] * 1/3 + val[1] * 2/3\r\n      val[2] = this.pos[1] * 1/3 + val[2] * 2/3\r\n      val[1] = this.pos[0] * 1/3 + val[1] * 2/3\r\n      break\r\n    case 'A':\r\n      retVal = arcToBeziere(this.pos, val)\r\n      val = retVal[0]\r\n      break\r\n  }\r\n\r\n  val[0] = 'C'\r\n  this.pos = [val[5], val[6]]\r\n  this.reflection = [2 * val[5] - val[3], 2 * val[6] - val[4]]\r\n\r\n  return retVal\r\n\r\n}\r\n\r\n// finds the next position of type M\r\nfunction findNextM(arr, offset){\r\n\r\n  if(offset === false) return false\r\n\r\n  for(var i = offset, len = arr.length;i < len;++i){\r\n\r\n    if(arr[i][0] == 'M') return i\r\n\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n\r\n\r\n// Convert an arc segment into equivalent cubic Bezier curves\r\n// Depending on the arc, up to 4 curves might be used to represent it since a\r\n// curve gives a good approximation for only a quarter of an ellipse\r\n// The curves are returned as an array of SVG curve commands:\r\n// [ ['C', x1, y1, x2, y2, x, y] ... ]\r\nfunction arcToBeziere(pos, val) {\r\n    // Parameters extraction, handle out-of-range parameters as specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/implnote.html#ArcOutOfRangeParameters\r\n    var rx = Math.abs(val[1]), ry = Math.abs(val[2]), xAxisRotation = val[3] % 360\r\n      , largeArcFlag = val[4], sweepFlag = val[5], x = val[6], y = val[7]\r\n      , A = new SVG.Point(pos), B = new SVG.Point(x, y)\r\n      , primedCoord, lambda, mat, k, c, cSquare, t, O, OA, OB, tetaStart, tetaEnd\r\n      , deltaTeta, nbSectors, f, arcSegPoints, angle, sinAngle, cosAngle, pt, i, il\r\n      , retVal = [], x1, y1, x2, y2\r\n\r\n    // Ensure radii are non-zero\r\n    if(rx === 0 || ry === 0 || (A.x === B.x && A.y === B.y)) {\r\n      // treat this arc as a straight line segment\r\n      return [['C', A.x, A.y, B.x, B.y, B.x, B.y]]\r\n    }\r\n\r\n    // Ensure radii are large enough using the algorithm provided in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/implnote.html#ArcCorrectionOutOfRangeRadii\r\n    primedCoord = new SVG.Point((A.x-B.x)/2, (A.y-B.y)/2).transform(new SVG.Matrix().rotate(xAxisRotation))\r\n    lambda = (primedCoord.x * primedCoord.x) / (rx * rx) + (primedCoord.y * primedCoord.y) / (ry * ry)\r\n    if(lambda > 1) {\r\n      lambda = Math.sqrt(lambda)\r\n      rx = lambda*rx\r\n      ry = lambda*ry\r\n    }\r\n\r\n    // To simplify calculations, we make the arc part of a unit circle (rayon is 1) instead of an ellipse\r\n    mat = new SVG.Matrix().rotate(xAxisRotation).scale(1/rx, 1/ry).rotate(-xAxisRotation)\r\n    A = A.transform(mat)\r\n    B = B.transform(mat)\r\n\r\n    // Calculate the horizontal and vertical distance between the initial and final point of the arc\r\n    k = [B.x-A.x, B.y-A.y]\r\n\r\n    // Find the length of the chord formed by A and B\r\n    cSquare = k[0]*k[0] + k[1]*k[1]\r\n    c = Math.sqrt(cSquare)\r\n\r\n    // Calculate the ratios of the horizontal and vertical distance on the length of the chord\r\n    k[0] /= c\r\n    k[1] /= c\r\n\r\n    // Calculate the distance between the circle center and the chord midpoint\r\n    // using this formula: t = sqrt(r^2 - c^2 / 4)\r\n    // where t is the distance between the cirle center and the chord midpoint,\r\n    //       r is the rayon of the circle and c is the chord length\r\n    // From: http://www.ajdesigner.com/phpcircle/circle_segment_chord_t.php\r\n    // Because of the imprecision of floating point numbers, cSquare might end\r\n    // up being slightly above 4 which would result in a negative radicand\r\n    // To prevent that, a test is made before computing the square root\r\n    t = (cSquare < 4) ? Math.sqrt(1 - cSquare/4) : 0\r\n\r\n    // For most situations, there are actually two different ellipses that\r\n    // satisfy the constraints imposed by the points A and B, the radii rx and ry,\r\n    // and the xAxisRotation\r\n    // When the flags largeArcFlag and sweepFlag are equal, it means that the\r\n    // second ellipse is used as a solution\r\n    // See: https://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\r\n    if(largeArcFlag === sweepFlag) {\r\n        t *= -1\r\n    }\r\n\r\n    // Calculate the coordinates of the center of the circle from the midpoint of the chord\r\n    // This is done by multiplying the ratios calculated previously by the distance between\r\n    // the circle center and the chord midpoint and using these values to go from the midpoint\r\n    // to the center of the circle\r\n    // The negative of the vertical distance ratio is used to modify the x coordinate while\r\n    // the horizontal distance ratio is used to modify the y coordinate\r\n    // That is because the center of the circle is perpendicular to the chord and perpendicular\r\n    // lines are negative reciprocals\r\n    O = new SVG.Point((B.x+A.x)/2 + t*-k[1], (B.y+A.y)/2 + t*k[0])\r\n    // Move the center of the circle at the origin\r\n    OA = new SVG.Point(A.x-O.x, A.y-O.y)\r\n    OB = new SVG.Point(B.x-O.x, B.y-O.y)\r\n\r\n    // Calculate the start and end angle\r\n    tetaStart = Math.acos(OA.x/Math.sqrt(OA.x*OA.x + OA.y*OA.y))\r\n    if (OA.y < 0) {\r\n      tetaStart *= -1\r\n    }\r\n    tetaEnd = Math.acos(OB.x/Math.sqrt(OB.x*OB.x + OB.y*OB.y))\r\n    if (OB.y < 0) {\r\n      tetaEnd *= -1\r\n    }\r\n\r\n    // If sweep-flag is '1', then the arc will be drawn in a \"positive-angle\" direction,\r\n    // make sure that the end angle is above the start angle\r\n    if (sweepFlag && tetaStart > tetaEnd) {\r\n      tetaEnd += 2*Math.PI\r\n    }\r\n    // If sweep-flag is '0', then the arc will be drawn in a \"negative-angle\" direction,\r\n    // make sure that the end angle is below the start angle\r\n    if (!sweepFlag && tetaStart < tetaEnd) {\r\n      tetaEnd -= 2*Math.PI\r\n    }\r\n\r\n    // Find the number of Bezier curves that are required to represent the arc\r\n    // A cubic Bezier curve gives a good enough approximation when representing at most a quarter of a circle\r\n    nbSectors = Math.ceil(Math.abs(tetaStart-tetaEnd) * 2/Math.PI)\r\n\r\n    // Calculate the coordinates of the points of all the Bezier curves required to represent the arc\r\n    // For an in-depth explanation of this part see: http://pomax.github.io/bezierinfo/#circles_cubic\r\n    arcSegPoints = []\r\n    angle = tetaStart\r\n    deltaTeta = (tetaEnd-tetaStart)/nbSectors\r\n    f = 4*Math.tan(deltaTeta/4)/3\r\n    for (i = 0; i <= nbSectors; i++) { // The <= is because a Bezier curve have a start and a endpoint\r\n      cosAngle = Math.cos(angle)\r\n      sinAngle = Math.sin(angle)\r\n\r\n      pt = new SVG.Point(O.x+cosAngle, O.y+sinAngle)\r\n      arcSegPoints[i] = [new SVG.Point(pt.x+f*sinAngle, pt.y-f*cosAngle), pt, new SVG.Point(pt.x-f*sinAngle, pt.y+f*cosAngle)]\r\n\r\n      angle += deltaTeta\r\n    }\r\n\r\n    // Remove the first control point of the first segment point and remove the second control point of the last segment point\r\n    // These two control points are not used in the approximation of the arc, that is why they are removed\r\n    arcSegPoints[0][0] = arcSegPoints[0][1].clone()\r\n    arcSegPoints[arcSegPoints.length-1][2] = arcSegPoints[arcSegPoints.length-1][1].clone()\r\n\r\n    // Revert the transformation that was applied to make the arc part of a unit circle instead of an ellipse\r\n    mat = new SVG.Matrix().rotate(xAxisRotation).scale(rx, ry).rotate(-xAxisRotation)\r\n    for (i = 0, il = arcSegPoints.length; i < il; i++) {\r\n      arcSegPoints[i][0] = arcSegPoints[i][0].transform(mat)\r\n      arcSegPoints[i][1] = arcSegPoints[i][1].transform(mat)\r\n      arcSegPoints[i][2] = arcSegPoints[i][2].transform(mat)\r\n    }\r\n\r\n\r\n    // Convert the segments points to SVG curve commands\r\n    for (i = 1, il = arcSegPoints.length; i < il; i++) {\r\n      pt = arcSegPoints[i-1][2]\r\n      x1 = pt.x\r\n      y1 = pt.y\r\n\r\n      pt = arcSegPoints[i][0]\r\n      x2 = pt.x\r\n      y2 = pt.y\r\n\r\n      pt = arcSegPoints[i][1]\r\n      x = pt.x\r\n      y = pt.y\r\n\r\n      retVal.push(['C', x1, y1, x2, y2, x, y])\r\n    }\r\n\r\n    return retVal\r\n}\r\n}());\r\n","/*!\n* svg.resize.js - An extension for svg.js which allows to resize elements which are selected\n* @version 1.4.3\n* https://github.com/svgdotjs/svg.resize.js\n*\n* @copyright [object Object]\n* @license MIT\n*/;\n;(function() {\n\"use strict\";\n\n;(function () {\r\n\r\n    function ResizeHandler(el) {\r\n\r\n        el.remember('_resizeHandler', this);\r\n\r\n        this.el = el;\r\n        this.parameters = {};\r\n        this.lastUpdateCall = null;\r\n        this.p = el.doc().node.createSVGPoint();\r\n    }\r\n\r\n    ResizeHandler.prototype.transformPoint = function(x, y, m){\r\n\r\n        this.p.x = x - (this.offset.x - window.pageXOffset);\r\n        this.p.y = y - (this.offset.y - window.pageYOffset);\r\n\r\n        return this.p.matrixTransform(m || this.m);\r\n\r\n    };\r\n\r\n    ResizeHandler.prototype._extractPosition = function(event) {\r\n        // Extract a position from a mouse/touch event.\r\n        // Returns { x: .., y: .. }\r\n        return {\r\n            x: event.clientX != null ? event.clientX : event.touches[0].clientX,\r\n            y: event.clientY != null ? event.clientY : event.touches[0].clientY\r\n        }\r\n    };\r\n\r\n    ResizeHandler.prototype.init = function (options) {\r\n\r\n        var _this = this;\r\n\r\n        this.stop();\r\n\r\n        if (options === 'stop') {\r\n            return;\r\n        }\r\n\r\n        this.options = {};\r\n\r\n        // Merge options and defaults\r\n        for (var i in this.el.resize.defaults) {\r\n            this.options[i] = this.el.resize.defaults[i];\r\n            if (typeof options[i] !== 'undefined') {\r\n                this.options[i] = options[i];\r\n            }\r\n        }\r\n\r\n        // We listen to all these events which are specifying different edges\r\n        this.el.on('lt.resize', function(e){ _this.resize(e || window.event); });  // Left-Top\r\n        this.el.on('rt.resize', function(e){ _this.resize(e || window.event); });  // Right-Top\r\n        this.el.on('rb.resize', function(e){ _this.resize(e || window.event); });  // Right-Bottom\r\n        this.el.on('lb.resize', function(e){ _this.resize(e || window.event); });  // Left-Bottom\r\n\r\n        this.el.on('t.resize', function(e){ _this.resize(e || window.event); });   // Top\r\n        this.el.on('r.resize', function(e){ _this.resize(e || window.event); });   // Right\r\n        this.el.on('b.resize', function(e){ _this.resize(e || window.event); });   // Bottom\r\n        this.el.on('l.resize', function(e){ _this.resize(e || window.event); });   // Left\r\n\r\n        this.el.on('rot.resize', function(e){ _this.resize(e || window.event); }); // Rotation\r\n\r\n        this.el.on('point.resize', function(e){ _this.resize(e || window.event); }); // Point-Moving\r\n\r\n        // This call ensures, that the plugin reacts to a change of snapToGrid immediately\r\n        this.update();\r\n\r\n    };\r\n\r\n    ResizeHandler.prototype.stop = function(){\r\n        this.el.off('lt.resize');\r\n        this.el.off('rt.resize');\r\n        this.el.off('rb.resize');\r\n        this.el.off('lb.resize');\r\n\r\n        this.el.off('t.resize');\r\n        this.el.off('r.resize');\r\n        this.el.off('b.resize');\r\n        this.el.off('l.resize');\r\n\r\n        this.el.off('rot.resize');\r\n\r\n        this.el.off('point.resize');\r\n\r\n        return this;\r\n    };\r\n\r\n    ResizeHandler.prototype.resize = function (event) {\r\n\r\n        var _this = this;\r\n\r\n        this.m = this.el.node.getScreenCTM().inverse();\r\n        this.offset = { x: window.pageXOffset, y: window.pageYOffset };\r\n\r\n        var txPt = this._extractPosition(event.detail.event);\r\n        this.parameters = {\r\n            type: this.el.type, // the type of element\r\n            p: this.transformPoint(txPt.x, txPt.y),\r\n            x: event.detail.x,      // x-position of the mouse when resizing started\r\n            y: event.detail.y,      // y-position of the mouse when resizing started\r\n            box: this.el.bbox(),    // The bounding-box of the element\r\n            rotation: this.el.transform().rotation  // The current rotation of the element\r\n        };\r\n\r\n        // Add font-size parameter if the element type is text\r\n        if (this.el.type === \"text\") {\r\n            this.parameters.fontSize = this.el.attr()[\"font-size\"];\r\n        }\r\n\r\n        // the i-param in the event holds the index of the point which is moved, when using `deepSelect`\r\n        if (event.detail.i !== undefined) {\r\n\r\n            // get the point array\r\n            var array = this.el.array().valueOf();\r\n\r\n            // Save the index and the point which is moved\r\n            this.parameters.i = event.detail.i;\r\n            this.parameters.pointCoords = [array[event.detail.i][0], array[event.detail.i][1]];\r\n        }\r\n\r\n        // Lets check which edge of the bounding-box was clicked and resize the this.el according to this\r\n        switch (event.type) {\r\n\r\n            // Left-Top-Edge\r\n            case 'lt':\r\n                // We build a calculating function for every case which gives us the new position of the this.el\r\n                this.calc = function (diffX, diffY) {\r\n                    // The procedure is always the same\r\n                    // First we snap the edge to the given grid (snapping to 1px grid is normal resizing)\r\n                    var snap = this.snapToGrid(diffX, diffY);\r\n\r\n                    // Now we check if the new height and width still valid (> 0)\r\n                    if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\r\n                        // ...if valid, we resize the this.el (which can include moving because the coord-system starts at the left-top and this edge is moving sometimes when resized)\r\n\r\n                        /*\r\n                         * but first check if the element is text box, so we can change the font size instead of\r\n                         * the width and height\r\n                         */\r\n\r\n                        if (this.parameters.type === \"text\") {\r\n                            this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\r\n                            this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\r\n                            return;\r\n                        }\r\n\r\n                        snap = this.checkAspectRatio(snap);\r\n\r\n                        this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y + snap[1]).size(this.parameters.box.width - snap[0], this.parameters.box.height - snap[1]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Right-Top\r\n            case 'rt':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n                    var snap = this.snapToGrid(diffX, diffY, 1 << 1);\r\n                    if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\r\n                        if (this.parameters.type === \"text\") {\r\n                            this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\r\n                            this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\r\n                            return;\r\n                        }\r\n\r\n                        snap = this.checkAspectRatio(snap, true);\r\n\r\n                        this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).size(this.parameters.box.width + snap[0], this.parameters.box.height - snap[1]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Right-Bottom\r\n            case 'rb':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n                    var snap = this.snapToGrid(diffX, diffY, 0);\r\n                    if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\r\n                        if (this.parameters.type === \"text\") {\r\n                            this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\r\n                            this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\r\n                            return;\r\n                        }\r\n\r\n                        snap = this.checkAspectRatio(snap);\r\n\r\n                        this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + snap[0], this.parameters.box.height + snap[1]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Left-Bottom\r\n            case 'lb':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n                    var snap = this.snapToGrid(diffX, diffY, 1);\r\n                    if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\r\n                        if (this.parameters.type === \"text\") {\r\n                            this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\r\n                            this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\r\n                            return;\r\n                        }\r\n\r\n                        snap = this.checkAspectRatio(snap, true);\r\n\r\n                        this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).size(this.parameters.box.width - snap[0], this.parameters.box.height + snap[1]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Top\r\n            case 't':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n                    var snap = this.snapToGrid(diffX, diffY, 1 << 1);\r\n                    if (this.parameters.box.height - snap[1] > 0) {\r\n                        // Disable the font-resizing if it is not from the corner of bounding-box\r\n                        if (this.parameters.type === \"text\") {\r\n                            return;\r\n                        }\r\n\r\n                        this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).height(this.parameters.box.height - snap[1]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Right\r\n            case 'r':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n                    var snap = this.snapToGrid(diffX, diffY, 0);\r\n                    if (this.parameters.box.width + snap[0] > 0) {\r\n                        if (this.parameters.type === \"text\") {\r\n                            return;\r\n                        }\r\n\r\n                        this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + snap[0]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Bottom\r\n            case 'b':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n                    var snap = this.snapToGrid(diffX, diffY, 0);\r\n                    if (this.parameters.box.height + snap[1] > 0) {\r\n                        if (this.parameters.type === \"text\") {\r\n                            return;\r\n                        }\r\n\r\n                        this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + snap[1]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Left\r\n            case 'l':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n                    var snap = this.snapToGrid(diffX, diffY, 1);\r\n                    if (this.parameters.box.width - snap[0] > 0) {\r\n                        if (this.parameters.type === \"text\") {\r\n                            return;\r\n                        }\r\n\r\n                        this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).width(this.parameters.box.width - snap[0]);\r\n                    }\r\n                };\r\n                break;\r\n\r\n            // Rotation\r\n            case 'rot':\r\n                // s.a.\r\n                this.calc = function (diffX, diffY) {\r\n\r\n                    // yes this is kinda stupid but we need the mouse coords back...\r\n                    var current = {x: diffX + this.parameters.p.x, y: diffY + this.parameters.p.y};\r\n\r\n                    // start minus middle\r\n                    var sAngle = Math.atan2((this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2), (this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2));\r\n\r\n                    // end minus middle\r\n                    var pAngle = Math.atan2((current.y - this.parameters.box.y - this.parameters.box.height / 2), (current.x - this.parameters.box.x - this.parameters.box.width / 2));\r\n\r\n                    var angle = this.parameters.rotation + (pAngle - sAngle) * 180 / Math.PI + this.options.snapToAngle / 2;\r\n\r\n                    // We have to move the element to the center of the box first and change the rotation afterwards\r\n                    // because rotation always works around a rotation-center, which is changed when moving the element\r\n                    // We also set the new rotation center to the center of the box.\r\n                    this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(angle - (angle % this.options.snapToAngle), this.parameters.box.cx, this.parameters.box.cy);\r\n                };\r\n                break;\r\n\r\n            // Moving one single Point (needed when an element is deepSelected which means you can move every single point of the object)\r\n            case 'point':\r\n                this.calc = function (diffX, diffY) {\r\n\r\n                    // Snapping the point to the grid\r\n                    var snap = this.snapToGrid(diffX, diffY, this.parameters.pointCoords[0], this.parameters.pointCoords[1]);\r\n\r\n                    // Get the point array\r\n                    var array = this.el.array().valueOf();\r\n\r\n                    // Changing the moved point in the array\r\n                    array[this.parameters.i][0] = this.parameters.pointCoords[0] + snap[0];\r\n                    array[this.parameters.i][1] = this.parameters.pointCoords[1] + snap[1];\r\n\r\n                    // And plot the new this.el\r\n                    this.el.plot(array);\r\n                };\r\n        }\r\n\r\n        this.el.fire('resizestart', {dx: this.parameters.x, dy: this.parameters.y, event: event});\r\n        // When resizing started, we have to register events for...\r\n        // Touches.\r\n        SVG.on(window, 'touchmove.resize', function(e) {\r\n            _this.update(e || window.event);\r\n        });\r\n        SVG.on(window, 'touchend.resize', function() {\r\n            _this.done();\r\n        });\r\n        // Mouse.\r\n        SVG.on(window, 'mousemove.resize', function (e) {\r\n            _this.update(e || window.event);\r\n        });\r\n        SVG.on(window, 'mouseup.resize', function () {\r\n            _this.done();\r\n        });\r\n\r\n    };\r\n\r\n    // The update-function redraws the element every time the mouse is moving\r\n    ResizeHandler.prototype.update = function (event) {\r\n\r\n        if (!event) {\r\n            if (this.lastUpdateCall) {\r\n                this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Calculate the difference between the mouseposition at start and now\r\n        var txPt = this._extractPosition(event);\r\n        var p = this.transformPoint(txPt.x, txPt.y);\r\n\r\n        var diffX = p.x - this.parameters.p.x,\r\n            diffY = p.y - this.parameters.p.y;\r\n\r\n        this.lastUpdateCall = [diffX, diffY];\r\n\r\n        // Calculate the new position and height / width of the element\r\n        this.calc(diffX, diffY);\r\n\r\n       // Emit an event to say we have changed.\r\n        this.el.fire('resizing', {dx: diffX, dy: diffY, event: event});\r\n    };\r\n\r\n    // Is called on mouseup.\r\n    // Removes the update-function from the mousemove event\r\n    ResizeHandler.prototype.done = function () {\r\n        this.lastUpdateCall = null;\r\n        SVG.off(window, 'mousemove.resize');\r\n        SVG.off(window, 'mouseup.resize');\r\n        SVG.off(window, 'touchmove.resize');\r\n        SVG.off(window, 'touchend.resize');\r\n        this.el.fire('resizedone');\r\n    };\r\n\r\n    // The flag is used to determine whether the resizing is used with a left-Point (first bit) and top-point (second bit)\r\n    // In this cases the temp-values are calculated differently\r\n    ResizeHandler.prototype.snapToGrid = function (diffX, diffY, flag, pointCoordsY) {\r\n\r\n        var temp;\r\n\r\n        // If `pointCoordsY` is given, a single Point has to be snapped (deepSelect). That's why we need a different temp-value\r\n        if (typeof pointCoordsY !== 'undefined') {\r\n            // Note that flag = pointCoordsX in this case\r\n            temp = [(flag + diffX) % this.options.snapToGrid, (pointCoordsY + diffY) % this.options.snapToGrid];\r\n        } else {\r\n            // We check if the flag is set and if not we set a default-value (both bits set - which means upper-left-edge)\r\n            flag = flag == null ? 1 | 1 << 1 : flag;\r\n            temp = [(this.parameters.box.x + diffX + (flag & 1 ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + diffY + (flag & (1 << 1) ? 0 : this.parameters.box.height)) % this.options.snapToGrid];\r\n        }\r\n\r\n        if(diffX < 0) {\r\n            temp[0] -= this.options.snapToGrid;\r\n        }\r\n        if(diffY < 0) {\r\n            temp[1] -= this.options.snapToGrid;\r\n        }\r\n\r\n        diffX -= (Math.abs(temp[0]) < this.options.snapToGrid / 2 ?\r\n                  temp[0] :\r\n                  temp[0] - (diffX < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\r\n        diffY -= (Math.abs(temp[1]) < this.options.snapToGrid / 2 ?\r\n                  temp[1] :\r\n                  temp[1] - (diffY < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\r\n\r\n        return this.constraintToBox(diffX, diffY, flag, pointCoordsY);\r\n\r\n    };\r\n\r\n    // keep element within constrained box\r\n    ResizeHandler.prototype.constraintToBox = function (diffX, diffY, flag, pointCoordsY) {\r\n        //return [diffX, diffY]\r\n        var c = this.options.constraint || {};\r\n        var orgX, orgY;\r\n\r\n        if (typeof pointCoordsY !== 'undefined') {\r\n          orgX = flag;\r\n          orgY = pointCoordsY;\r\n        } else {\r\n          orgX = this.parameters.box.x + (flag & 1 ? 0 : this.parameters.box.width);\r\n          orgY = this.parameters.box.y + (flag & (1<<1) ? 0 : this.parameters.box.height);\r\n        }\r\n\r\n        if (typeof c.minX !== 'undefined' && orgX + diffX < c.minX) {\r\n          diffX = c.minX - orgX;\r\n        }\r\n\r\n        if (typeof c.maxX !== 'undefined' && orgX + diffX > c.maxX) {\r\n          diffX = c.maxX - orgX;\r\n        }\r\n\r\n        if (typeof c.minY !== 'undefined' && orgY + diffY < c.minY) {\r\n          diffY = c.minY - orgY;\r\n        }\r\n\r\n        if (typeof c.maxY !== 'undefined' && orgY + diffY > c.maxY) {\r\n          diffY = c.maxY - orgY;\r\n        }\r\n\r\n        return [diffX, diffY];\r\n    };\r\n\r\n    ResizeHandler.prototype.checkAspectRatio = function (snap, isReverse) {\r\n        if (!this.options.saveAspectRatio) {\r\n            return snap;\r\n        }\r\n\r\n        var updatedSnap = snap.slice();\r\n        var aspectRatio = this.parameters.box.width / this.parameters.box.height;\r\n        var newW = this.parameters.box.width + snap[0];\r\n        var newH = this.parameters.box.height - snap[1];\r\n        var newAspectRatio = newW / newH;\r\n\r\n        if (newAspectRatio < aspectRatio) {\r\n            // Height is too big. Adapt it\r\n            updatedSnap[1] = newW / aspectRatio - this.parameters.box.height;\r\n            isReverse && (updatedSnap[1] = -updatedSnap[1]);\r\n        } else if (newAspectRatio > aspectRatio) {\r\n            // Width is too big. Adapt it\r\n            updatedSnap[0] = this.parameters.box.width - newH * aspectRatio;\r\n            isReverse && (updatedSnap[0] = -updatedSnap[0]);\r\n        }\r\n\r\n        return updatedSnap;\r\n    };\r\n\r\n    SVG.extend(SVG.Element, {\r\n        // Resize element with mouse\r\n        resize: function (options) {\r\n\r\n            (this.remember('_resizeHandler') || new ResizeHandler(this)).init(options || {});\r\n\r\n            return this;\r\n\r\n        }\r\n\r\n    });\r\n\r\n    SVG.Element.prototype.resize.defaults = {\r\n        snapToAngle: 0.1,       // Specifies the speed the rotation is happening when moving the mouse\r\n        snapToGrid: 1,          // Snaps to a grid of `snapToGrid` Pixels\r\n        constraint: {},         // keep element within constrained box\r\n        saveAspectRatio: false  // Save aspect ratio when resizing using lt, rt, rb or lb points\r\n    };\r\n\r\n}).call(this);\n}());\n","/*!\n* svg.select.js - An extension of svg.js which allows to select elements with mouse\n* @version 3.0.1\n* https://github.com/svgdotjs/svg.select.js\n*\n* @copyright Ulrich-Matthias Schäfer\n* @license MIT\n*/;\n;(function() {\n\"use strict\";\n\nfunction SelectHandler(el) {\r\n\r\n    this.el = el;\r\n    el.remember('_selectHandler', this);\r\n    this.pointSelection = {isSelected: false};\r\n    this.rectSelection = {isSelected: false};\r\n\r\n    // helper list with position settings of each type of point\r\n    this.pointsList = {\r\n      lt: [ 0, 0 ],\r\n      rt: [ 'width', 0 ],\r\n      rb: [ 'width', 'height' ],\r\n      lb: [ 0, 'height' ],\r\n      t: [ 'width', 0 ],\r\n      r: [ 'width', 'height' ],\r\n      b: [ 'width', 'height' ],\r\n      l: [ 0, 'height' ]\r\n    };\r\n\r\n    // helper function to get point coordinates based on settings above and an object (bbox in our case)\r\n    this.pointCoord = function (setting, object, isPointCentered) {\r\n      var coord = typeof setting !== 'string' ? setting : object[setting];\r\n      // Top, bottom, right and left points are placed in the center of element width/height\r\n      return isPointCentered ? coord / 2 : coord\r\n    }\r\n\r\n    this.pointCoords = function (point, object) {\r\n      var settings = this.pointsList[point];\r\n\r\n      return {\r\n        x: this.pointCoord(settings[0], object, (point === 't' || point === 'b')),\r\n        y: this.pointCoord(settings[1], object, (point === 'r' || point === 'l'))\r\n      }\r\n    }\r\n}\r\n\r\nSelectHandler.prototype.init = function (value, options) {\r\n\r\n    var bbox = this.el.bbox();\r\n    this.options = {};\r\n\r\n    // store defaults list of points in order to verify users config\r\n    var points = this.el.selectize.defaults.points;\r\n\r\n    // Merging the defaults and the options-object together\r\n    for (var i in this.el.selectize.defaults) {\r\n        this.options[i] = this.el.selectize.defaults[i];\r\n        if (options[i] !== undefined) {\r\n            this.options[i] = options[i];\r\n        }\r\n    }\r\n\r\n    // prepare & validate list of points to be added (or excluded)\r\n    var pointsLists = ['points', 'pointsExclude'];\r\n\r\n    for (var i in pointsLists) {\r\n      var option = this.options[pointsLists[i]];\r\n\r\n      if (typeof option === 'string') {\r\n        if (option.length > 0) {\r\n          // if set as comma separated string list => convert it into an array\r\n          option = option.split(/\\s*,\\s*/i);\r\n        } else {\r\n          option = [];\r\n        }\r\n      } else if (typeof option === 'boolean' && pointsLists[i] === 'points') {\r\n        // this is not needed, but let's have it for legacy support\r\n        option = option ? points : [];\r\n      }\r\n\r\n      this.options[pointsLists[i]] = option;\r\n    }\r\n\r\n    // intersect correct all points options with users config (exclude unwanted points)\r\n    // ES5 -> NO arrow functions nor Array.includes()\r\n    this.options.points = [ points, this.options.points ].reduce(\r\n      function (a, b) {\r\n        return a.filter(\r\n          function (c) {\r\n            return b.indexOf(c) > -1;\r\n          }\r\n        )\r\n      }\r\n    );\r\n\r\n    // exclude pointsExclude, if wanted\r\n    this.options.points = [ this.options.points, this.options.pointsExclude ].reduce(\r\n      function (a, b) {\r\n        return a.filter(\r\n          function (c) {\r\n            return b.indexOf(c) < 0;\r\n          }\r\n        )\r\n      }\r\n    );\r\n\r\n    this.parent = this.el.parent();\r\n    this.nested = (this.nested || this.parent.group());\r\n    this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\r\n\r\n    // When deepSelect is enabled and the element is a line/polyline/polygon, draw only points for moving\r\n    if (this.options.deepSelect && ['line', 'polyline', 'polygon'].indexOf(this.el.type) !== -1) {\r\n        this.selectPoints(value);\r\n    } else {\r\n        this.selectRect(value);\r\n    }\r\n\r\n    this.observe();\r\n    this.cleanup();\r\n\r\n};\r\n\r\nSelectHandler.prototype.selectPoints = function (value) {\r\n\r\n    this.pointSelection.isSelected = value;\r\n\r\n    // When set is already there we dont have to create one\r\n    if (this.pointSelection.set) {\r\n        return this;\r\n    }\r\n\r\n    // Create our set of elements\r\n    this.pointSelection.set = this.parent.set();\r\n    // draw the points and mark the element as selected\r\n    this.drawPoints();\r\n\r\n    return this;\r\n\r\n};\r\n\r\n// create the point-array which contains the 2 points of a line or simply the points-array of polyline/polygon\r\nSelectHandler.prototype.getPointArray = function () {\r\n    var bbox = this.el.bbox();\r\n\r\n    return this.el.array().valueOf().map(function (el) {\r\n        return [el[0] - bbox.x, el[1] - bbox.y];\r\n    });\r\n};\r\n\r\n// Draws a points\r\nSelectHandler.prototype.drawPoints = function () {\r\n\r\n    var _this = this, array = this.getPointArray();\r\n\r\n    // go through the array of points\r\n    for (var i = 0, len = array.length; i < len; ++i) {\r\n\r\n        var curriedEvent = (function (k) {\r\n            return function (ev) {\r\n                ev = ev || window.event;\r\n                ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\r\n                ev.stopPropagation();\r\n\r\n                var x = ev.pageX || ev.touches[0].pageX;\r\n                var y = ev.pageY || ev.touches[0].pageY;\r\n                _this.el.fire('point', {x: x, y: y, i: k, event: ev});\r\n            };\r\n        })(i);\r\n\r\n        // add every point to the set\r\n        // add css-classes and a touchstart-event which fires our event for moving points\r\n        var point = this.drawPoint(array[i][0], array[i][1])\r\n                        .addClass(this.options.classPoints)\r\n                        .addClass(this.options.classPoints + '_point')\r\n                        .on('touchstart', curriedEvent)\r\n                        .on('mousedown', curriedEvent)\r\n        this.pointSelection.set.add(point);\r\n    }\r\n};\r\n\r\n// The function to draw single point\r\nSelectHandler.prototype.drawPoint = function (cx, cy) {\r\n    var pointType = this.options.pointType;\r\n\r\n    switch (pointType) {\r\n        case 'circle':\r\n            return this.drawCircle(cx, cy);\r\n        case 'rect':\r\n            return this.drawRect(cx, cy);\r\n        default:\r\n            if (typeof pointType === 'function') {\r\n                return pointType.call(this, cx, cy);\r\n            }\r\n\r\n            throw new Error('Unknown ' + pointType + ' point type!');\r\n    }\r\n};\r\n\r\n// The function to draw the circle point\r\nSelectHandler.prototype.drawCircle = function (cx, cy) {\r\n    return this.nested.circle(this.options.pointSize)\r\n                      .center(cx, cy);\r\n};\r\n\r\n// The function to draw the rect point\r\nSelectHandler.prototype.drawRect = function (cx, cy) {\r\n    return this.nested.rect(this.options.pointSize, this.options.pointSize)\r\n                      .center(cx, cy);\r\n};\r\n\r\n// every time a point is moved, we have to update the positions of our point\r\nSelectHandler.prototype.updatePointSelection = function () {\r\n    var array = this.getPointArray();\r\n\r\n    this.pointSelection.set.each(function (i) {\r\n        if (this.cx() === array[i][0] && this.cy() === array[i][1]) {\r\n            return;\r\n        }\r\n        this.center(array[i][0], array[i][1]);\r\n    });\r\n};\r\n\r\nSelectHandler.prototype.updateRectSelection = function () {\r\n    var _this = this, bbox = this.el.bbox();\r\n\r\n    this.rectSelection.set.get(0).attr({\r\n        width: bbox.width,\r\n        height: bbox.height\r\n    });\r\n\r\n    // set.get(1) is always in the upper left corner. no need to move it\r\n    if (this.options.points.length) {\r\n      this.options.points.map(function (point, index) {\r\n        var coords = _this.pointCoords(point, bbox);\r\n\r\n        _this.rectSelection.set.get(index + 1).center(coords.x, coords.y);\r\n      });\r\n    }\r\n\r\n    if (this.options.rotationPoint) {\r\n        var length = this.rectSelection.set.length();\r\n\r\n        this.rectSelection.set.get(length - 1).center(bbox.width / 2, 20);\r\n    }\r\n};\r\n\r\nSelectHandler.prototype.selectRect = function (value) {\r\n\r\n    var _this = this, bbox = this.el.bbox();\r\n\r\n    this.rectSelection.isSelected = value;\r\n\r\n    // when set is already p\r\n    this.rectSelection.set = this.rectSelection.set || this.parent.set();\r\n\r\n    // helperFunction to create a mouse-down function which triggers the event specified in `eventName`\r\n    function getMoseDownFunc(eventName) {\r\n        return function (ev) {\r\n            ev = ev || window.event;\r\n            ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\r\n            ev.stopPropagation();\r\n\r\n            var x = ev.pageX || ev.touches[0].pageX;\r\n            var y = ev.pageY || ev.touches[0].pageY;\r\n            _this.el.fire(eventName, {x: x, y: y, event: ev});\r\n        };\r\n    }\r\n\r\n    // create the selection-rectangle and add the css-class\r\n    if (!this.rectSelection.set.get(0)) {\r\n        this.rectSelection.set.add(this.nested.rect(bbox.width, bbox.height).addClass(this.options.classRect));\r\n    }\r\n\r\n    // Draw Points at the edges, if enabled\r\n    if (this.options.points.length && this.rectSelection.set.length() < 2) {\r\n        var ename =\"touchstart\", mname = \"mousedown\";\r\n\r\n        this.options.points.map(function (point, index) {\r\n            var coords = _this.pointCoords(point, bbox);\r\n\r\n            var pointElement = _this.drawPoint(coords.x, coords.y)\r\n                                    .attr('class', _this.options.classPoints + '_' + point)\r\n                                    .on(mname, getMoseDownFunc(point))\r\n                                    .on(ename, getMoseDownFunc(point));\r\n            _this.rectSelection.set.add(pointElement);\r\n        });\r\n\r\n        this.rectSelection.set.each(function () {\r\n            this.addClass(_this.options.classPoints);\r\n        });\r\n    }\r\n\r\n    // draw rotationPint, if enabled\r\n    if (this.options.rotationPoint && ((this.options.points && !this.rectSelection.set.get(9)) || (!this.options.points && !this.rectSelection.set.get(1)))) {\r\n\r\n        var curriedEvent = function (ev) {\r\n            ev = ev || window.event;\r\n            ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\r\n            ev.stopPropagation();\r\n\r\n            var x = ev.pageX || ev.touches[0].pageX;\r\n            var y = ev.pageY || ev.touches[0].pageY;\r\n            _this.el.fire('rot', {x: x, y: y, event: ev});\r\n        };\r\n\r\n        var pointElement = this.drawPoint(bbox.width / 2, 20)\r\n                              .attr('class', this.options.classPoints + '_rot')\r\n                              .on(\"touchstart\", curriedEvent)\r\n                              .on(\"mousedown\", curriedEvent);\r\n        this.rectSelection.set.add(pointElement);\r\n    }\r\n\r\n};\r\n\r\nSelectHandler.prototype.handler = function () {\r\n\r\n    var bbox = this.el.bbox();\r\n    this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\r\n\r\n    if (this.rectSelection.isSelected) {\r\n        this.updateRectSelection();\r\n    }\r\n\r\n    if (this.pointSelection.isSelected) {\r\n        this.updatePointSelection();\r\n    }\r\n\r\n};\r\n\r\nSelectHandler.prototype.observe = function () {\r\n    var _this = this;\r\n\r\n    if (MutationObserver) {\r\n        if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\r\n            this.observerInst = this.observerInst || new MutationObserver(function () {\r\n                _this.handler();\r\n            });\r\n            this.observerInst.observe(this.el.node, {attributes: true});\r\n        } else {\r\n            try {\r\n                this.observerInst.disconnect();\r\n                delete this.observerInst;\r\n            } catch (e) {\r\n            }\r\n        }\r\n    } else {\r\n        this.el.off('DOMAttrModified.select');\r\n\r\n        if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\r\n            this.el.on('DOMAttrModified.select', function () {\r\n                _this.handler();\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nSelectHandler.prototype.cleanup = function () {\r\n\r\n    //var _this = this;\r\n\r\n    if (!this.rectSelection.isSelected && this.rectSelection.set) {\r\n        // stop watching the element, remove the selection\r\n        this.rectSelection.set.each(function () {\r\n            this.remove();\r\n        });\r\n\r\n        this.rectSelection.set.clear();\r\n        delete this.rectSelection.set;\r\n    }\r\n\r\n    if (!this.pointSelection.isSelected && this.pointSelection.set) {\r\n        // Remove all points, clear the set, stop watching the element\r\n        this.pointSelection.set.each(function () {\r\n            this.remove();\r\n        });\r\n\r\n        this.pointSelection.set.clear();\r\n        delete this.pointSelection.set;\r\n    }\r\n\r\n    if (!this.pointSelection.isSelected && !this.rectSelection.isSelected) {\r\n        this.nested.remove();\r\n        delete this.nested;\r\n\r\n    }\r\n};\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n    // Select element with mouse\r\n    selectize: function (value, options) {\r\n\r\n        // Check the parameters and reassign if needed\r\n        if (typeof value === 'object') {\r\n            options = value;\r\n            value = true;\r\n        }\r\n\r\n        var selectHandler = this.remember('_selectHandler') || new SelectHandler(this);\r\n\r\n        selectHandler.init(value === undefined ? true : value, options || {});\r\n\r\n        return this;\r\n\r\n    }\r\n});\r\n\r\nSVG.Element.prototype.selectize.defaults = {\r\n    points: ['lt', 'rt', 'rb', 'lb', 't', 'r', 'b', 'l'],    // which points to draw, default all\r\n    pointsExclude: [],                       // easier option if to exclude few than rewrite all\r\n    classRect: 'svg_select_boundingRect',    // Css-class added to the rect\r\n    classPoints: 'svg_select_points',        // Css-class added to the points\r\n    pointSize: 7,                            // size of point\r\n    rotationPoint: true,                     // If true, rotation point is drawn. Needed for rotation!\r\n    deepSelect: false,                       // If true, moving of single points is possible (only line, polyline, polyon)\r\n    pointType: 'circle'                      // Point type: circle or rect, default circle\r\n};\n}());\n","/**\n * Detect Element Resize\n *\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * version: 0.5.3\n **/\n\n;(function() {\n  function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n      expand = triggers.firstElementChild,\n      contract = triggers.lastElementChild,\n      expandChild = expand ? expand.firstElementChild : null\n    if (contract) {\n      contract.scrollLeft = contract.scrollWidth\n      contract.scrollTop = contract.scrollHeight\n    }\n    if (expandChild) {\n      expandChild.style.width = expand.offsetWidth + 1 + 'px'\n      expandChild.style.height = expand.offsetHeight + 1 + 'px'\n    }\n    if (expand) {\n      expand.scrollLeft = expand.scrollWidth\n      expand.scrollTop = expand.scrollHeight\n    }\n  }\n\n  function checkTriggers(element) {\n    return (\n      element.offsetWidth != element.__resizeLast__.width ||\n      element.offsetHeight != element.__resizeLast__.height\n    )\n  }\n\n  function scrollListener(e) {\n    var element = this\n    resetTriggers(this)\n    if (this.__resizeRAF__) cancelFrame(this.__resizeRAF__)\n    this.__resizeRAF__ = requestFrame(function() {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth\n        element.__resizeLast__.height = element.offsetHeight\n        element.__resizeListeners__.forEach(function(fn) {\n          fn.call(e)\n        })\n      }\n    })\n  }\n\n  var requestFrame = (function() {\n    var raf =\n      window.requestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      function(fn) {\n        return window.setTimeout(fn, 20)\n      }\n    return function(fn) {\n      return raf(fn)\n    }\n  })()\n\n  var cancelFrame = (function() {\n    var cancel =\n      window.cancelAnimationFrame ||\n      window.mozCancelAnimationFrame ||\n      window.webkitCancelAnimationFrame ||\n      window.clearTimeout\n    return function(id) {\n      return cancel(id)\n    }\n  })()\n\n  /* Detect CSS Animations support to detect element display/re-attach */\n  var animation = false,\n    animationstartevent = 'animationstart',\n    domPrefixes = 'Webkit Moz O ms'.split(' '),\n    startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(\n      ' '\n    )\n  {\n    var elm = document.createElement('fakeelement')\n    if (elm.style.animationName !== undefined) {\n      animation = true\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          animationstartevent = startEvents[i]\n          break\n        }\n      }\n    }\n  }\n\n  var animationName = 'resizeanim'\n\n  window.addResizeListener = function(element, fn) {\n    if (!element.__resizeTriggers__) {\n      if (getComputedStyle(element).position == 'static')\n        element.style.position = 'relative'\n\n      element.__resizeLast__ = {}\n      element.__resizeListeners__ = []\n      ;(element.__resizeTriggers__ = document.createElement('div')).className =\n        'resize-triggers'\n      element.__resizeTriggers__.innerHTML =\n        '<div class=\"expand-trigger\"><div></div></div>' +\n        '<div class=\"contract-trigger\"></div>'\n      element.appendChild(element.__resizeTriggers__)\n      resetTriggers(element)\n      element.addEventListener('scroll', scrollListener, true)\n\n      /* Listen for a css animation to detect element display/re-attach */\n      animationstartevent &&\n        element.__resizeTriggers__.addEventListener(\n          animationstartevent,\n          function(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element)\n            }\n          }\n        )\n    }\n    element.__resizeListeners__.push(fn)\n  }\n\n  window.removeResizeListener = function(element, fn) {\n    if (element) {\n      element.__resizeListeners__.splice(\n        element.__resizeListeners__.indexOf(fn),\n        1\n      )\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener)\n        if (element.__resizeTriggers__.parentNode) {\n          element.__resizeTriggers__ = !element.removeChild(\n            element.__resizeTriggers__\n          )\n        }\n      }\n    }\n  }\n})()\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"@namespace svg url(http://www.w3.org/2000/svg);\\n/* Necessary to select only SVG <a> elements, and not also HTML’s.\\n   See warning below */\\n\\nsvg|a:link, svg|a:visited {\\n  cursor: pointer;\\n}\\n\\nsvg|a text,\\ntext svg|a {\\n  fill: blue; /* Even for text, SVG uses fill over color */\\n  text-decoration: underline;\\n}\\n\\nsvg|a:hover, svg|a:active {\\n  outline: dotted 1px blue;\\n}\\n\\n.apexcharts-canvas {\\n  position: relative;\\n  user-select: none;\\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\\n}\\n\\n\\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\\n.apexcharts-canvas ::-webkit-scrollbar {\\n  -webkit-appearance: none;\\n  width: 6px;\\n}\\n\\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\\n  border-radius: 4px;\\n  background-color: rgba(0, 0, 0, .5);\\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n}\\n\\n\\n.apexcharts-inner {\\n  position: relative;\\n}\\n\\n.apexcharts-text tspan {\\n  font-family: inherit;\\n}\\n\\n.legend-mouseover-inactive {\\n  transition: 0.15s ease all;\\n  opacity: 0.20;\\n}\\n\\n.apexcharts-series-collapsed {\\n  opacity: 0;\\n}\\n\\n.apexcharts-tooltip {\\n  border-radius: 5px;\\n  box-shadow: 2px 2px 6px -4px #999;\\n  cursor: default;\\n  font-size: 14px;\\n  left: 62px;\\n  opacity: 0;\\n  pointer-events: none;\\n  position: absolute;\\n  top: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  z-index: 12;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light {\\n  border: 1px solid #e3e3e3;\\n  background: rgba(255, 255, 255, 0.96);\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark {\\n  color: #fff;\\n  background: rgba(30, 30, 30, 0.8);\\n}\\n\\n.apexcharts-tooltip * {\\n  font-family: inherit;\\n}\\n\\n\\n.apexcharts-tooltip-title {\\n  padding: 6px;\\n  font-size: 15px;\\n  margin-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\\n  background: #ECEFF1;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\\n  background: rgba(0, 0, 0, 0.7);\\n  border-bottom: 1px solid #333;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  display: inline-block;\\n  font-weight: 600;\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-tooltip-text-y-label:empty,\\n.apexcharts-tooltip-text-y-value:empty,\\n.apexcharts-tooltip-text-goals-label:empty,\\n.apexcharts-tooltip-text-goals-value:empty,\\n.apexcharts-tooltip-text-z-value:empty {\\n  display: none;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  font-weight: 600;\\n}\\n\\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-goals-group, \\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  display: flex;\\n}\\n.apexcharts-tooltip-text-goals-label:not(:empty),\\n.apexcharts-tooltip-text-goals-value:not(:empty) {\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-tooltip-marker {\\n  width: 12px;\\n  height: 12px;\\n  position: relative;\\n  top: 0px;\\n  margin-right: 10px;\\n  border-radius: 50%;\\n}\\n\\n.apexcharts-tooltip-series-group {\\n  padding: 0 10px;\\n  display: none;\\n  text-align: left;\\n  justify-content: left;\\n  align-items: center;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\\n  opacity: 1;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active,\\n.apexcharts-tooltip-series-group:last-child {\\n  padding-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip-series-group-hidden {\\n  opacity: 0;\\n  height: 0;\\n  line-height: 0;\\n  padding: 0 !important;\\n}\\n\\n.apexcharts-tooltip-y-group {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\\n  padding: 4px 8px;\\n}\\n\\n.apexcharts-tooltip-boxPlot {\\n  display: flex;\\n  flex-direction: column-reverse;\\n}\\n\\n.apexcharts-tooltip-box>div {\\n  margin: 4px 0;\\n}\\n\\n.apexcharts-tooltip-box span.value {\\n  font-weight: bold;\\n}\\n\\n.apexcharts-tooltip-rangebar {\\n  padding: 5px 8px;\\n}\\n\\n.apexcharts-tooltip-rangebar .category {\\n  font-weight: 600;\\n  color: #777;\\n}\\n\\n.apexcharts-tooltip-rangebar .series-name {\\n  font-weight: bold;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.apexcharts-xaxistooltip {\\n  opacity: 0;\\n  padding: 9px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-xaxistooltip:after,\\n.apexcharts-xaxistooltip:before {\\n  left: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-xaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-left: -6px;\\n}\\n\\n.apexcharts-xaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-left: -7px;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after,\\n.apexcharts-xaxistooltip-bottom:before {\\n  bottom: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-top:after,\\n.apexcharts-xaxistooltip-top:before {\\n  top: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after {\\n  border-bottom-color: #ECEFF1;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:before {\\n  border-bottom-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top:after {\\n  border-top-color: #ECEFF1\\n}\\n\\n.apexcharts-xaxistooltip-top:before {\\n  border-top-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-yaxistooltip {\\n  opacity: 0;\\n  padding: 4px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-yaxistooltip:after,\\n.apexcharts-yaxistooltip:before {\\n  top: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-yaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-yaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-top: -7px;\\n}\\n\\n.apexcharts-yaxistooltip-left:after,\\n.apexcharts-yaxistooltip-left:before {\\n  left: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-right:after,\\n.apexcharts-yaxistooltip-right:before {\\n  right: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-left:after {\\n  border-left-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-left:before {\\n  border-left-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right:after {\\n  border-right-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-right:before {\\n  border-right-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-active {\\n  opacity: 1;\\n}\\n\\n.apexcharts-yaxistooltip-hidden {\\n  display: none;\\n}\\n\\n.apexcharts-xcrosshairs,\\n.apexcharts-ycrosshairs {\\n  pointer-events: none;\\n  opacity: 0;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xcrosshairs.apexcharts-active,\\n.apexcharts-ycrosshairs.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-ycrosshairs-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-selection-rect {\\n  cursor: move;\\n}\\n\\n.svg_select_boundingRect, .svg_select_points_rot {\\n  pointer-events: none;\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n.apexcharts-selection-rect + g .svg_select_boundingRect,\\n.apexcharts-selection-rect + g .svg_select_points_rot {\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n\\n.apexcharts-selection-rect + g .svg_select_points_l,\\n.apexcharts-selection-rect + g .svg_select_points_r {\\n  cursor: ew-resize;\\n  opacity: 1;\\n  visibility: visible;\\n}\\n\\n.svg_select_points {\\n  fill: #efefef;\\n  stroke: #333;\\n  rx: 2;\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\\n  cursor: crosshair\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\\n  cursor: move\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-pan-icon,\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon,\\n.apexcharts-toolbar-custom-icon {\\n  cursor: pointer;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 24px;\\n  color: #6E8192;\\n  text-align: center;\\n}\\n\\n.apexcharts-zoom-icon svg,\\n.apexcharts-zoomin-icon svg,\\n.apexcharts-zoomout-icon svg,\\n.apexcharts-reset-icon svg,\\n.apexcharts-menu-icon svg {\\n  fill: #6E8192;\\n}\\n\\n.apexcharts-selection-icon svg {\\n  fill: #444;\\n  transform: scale(0.76)\\n}\\n\\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\\n  fill: #f3f4f5;\\n}\\n\\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\\n  fill: #008FFB;\\n}\\n\\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\\n  fill: #333;\\n}\\n\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon {\\n  position: relative;\\n}\\n\\n.apexcharts-reset-icon {\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-menu-icon {\\n  transform: scale(0.85);\\n}\\n\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon {\\n  transform: scale(0.7)\\n}\\n\\n.apexcharts-zoomout-icon {\\n  margin-right: 3px;\\n}\\n\\n.apexcharts-pan-icon {\\n  transform: scale(0.62);\\n  position: relative;\\n  left: 1px;\\n  top: 0px;\\n}\\n\\n.apexcharts-pan-icon svg {\\n  fill: #fff;\\n  stroke: #6E8192;\\n  stroke-width: 2;\\n}\\n\\n.apexcharts-pan-icon.apexcharts-selected svg {\\n  stroke: #008FFB;\\n}\\n\\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\\n  stroke: #333;\\n}\\n\\n.apexcharts-toolbar {\\n  position: absolute;\\n  z-index: 11;\\n  max-width: 176px;\\n  text-align: right;\\n  border-radius: 3px;\\n  padding: 0px 6px 2px 6px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.apexcharts-menu {\\n  background: #fff;\\n  position: absolute;\\n  top: 100%;\\n  border: 1px solid #ddd;\\n  border-radius: 3px;\\n  padding: 3px;\\n  right: 10px;\\n  opacity: 0;\\n  min-width: 110px;\\n  transition: 0.15s ease all;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-menu.apexcharts-menu-open {\\n  opacity: 1;\\n  pointer-events: all;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-menu-item {\\n  padding: 6px 7px;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.apexcharts-theme-light .apexcharts-menu-item:hover {\\n  background: #eee;\\n}\\n\\n.apexcharts-theme-dark .apexcharts-menu {\\n  background: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n}\\n\\n@media screen and (min-width: 768px) {\\n  .apexcharts-canvas:hover .apexcharts-toolbar {\\n    opacity: 1;\\n  }\\n}\\n\\n.apexcharts-datalabel.apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-pie-label,\\n.apexcharts-datalabels,\\n.apexcharts-datalabel,\\n.apexcharts-datalabel-label,\\n.apexcharts-datalabel-value {\\n  cursor: default;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-pie-label-delay {\\n  opacity: 0;\\n  animation-name: opaque;\\n  animation-duration: 0.3s;\\n  animation-fill-mode: forwards;\\n  animation-timing-function: ease;\\n}\\n\\n.apexcharts-canvas .apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-hide .apexcharts-series-points {\\n  opacity: 0;\\n}\\n\\n.apexcharts-gridline,\\n.apexcharts-annotation-rect,\\n.apexcharts-tooltip .apexcharts-marker,\\n.apexcharts-area-series .apexcharts-area,\\n.apexcharts-line,\\n.apexcharts-zoom-rect,\\n.apexcharts-toolbar svg,\\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-radar-series path,\\n.apexcharts-radar-series polygon {\\n  pointer-events: none;\\n}\\n\\n\\n/* markers */\\n\\n.apexcharts-marker {\\n  transition: 0.15s ease all;\\n}\\n\\n@keyframes opaque {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n\\n/* Resize generated styles */\\n\\n@keyframes resizeanim {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.resize-triggers {\\n  animation: 1ms resizeanim;\\n  visibility: hidden;\\n  opacity: 0;\\n}\\n\\n.resize-triggers,\\n.resize-triggers>div,\\n.contract-trigger:before {\\n  content: \\\" \\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n\\n.resize-triggers>div {\\n  background: #eee;\\n  overflow: auto;\\n}\\n\\n.contract-trigger:before {\\n  width: 200%;\\n  height: 200%;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = {};\n\nfunction modulesToDom(moduleId, list, options) {\n  for (var i = 0; i < list.length; i++) {\n    var part = {\n      css: list[i][1],\n      media: list[i][2],\n      sourceMap: list[i][3]\n    };\n\n    if (stylesInDom[moduleId][i]) {\n      stylesInDom[moduleId][i](part);\n    } else {\n      stylesInDom[moduleId].push(addStyle(part, options));\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (moduleId, list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  moduleId = options.base ? moduleId + options.base : moduleId;\n  list = list || [];\n\n  if (!stylesInDom[moduleId]) {\n    stylesInDom[moduleId] = [];\n  }\n\n  modulesToDom(moduleId, list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    if (!stylesInDom[moduleId]) {\n      stylesInDom[moduleId] = [];\n    }\n\n    modulesToDom(moduleId, newList, options);\n\n    for (var j = newList.length; j < stylesInDom[moduleId].length; j++) {\n      stylesInDom[moduleId][j]();\n    }\n\n    stylesInDom[moduleId].length = newList.length;\n\n    if (stylesInDom[moduleId].length === 0) {\n      delete stylesInDom[moduleId];\n    }\n  };\n};","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./apexcharts.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \"<svg fill=\\\"#000000\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\"></path><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\"></path><path d=\\\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"></path><path d=\\\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" fill=\\\"#000000\\\" viewBox=\\\"0 0 24 24\\\"><defs><path d=\\\"M0 0h24v24H0z\\\" id=\\\"a\\\"></path></defs><clipPath id=\\\"b\\\"><use overflow=\\\"visible\\\" xlink:href=\\\"#a\\\"></use></clipPath><path clip-path=\\\"url(#b)\\\" d=\\\"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"></path><path d=\\\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"></path></svg>\"","module.exports = \"<svg fill=\\\"#6E8192\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"></path><path d=\\\"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\\\"></path><path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"></path><path d=\\\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\\\"></path></svg>\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(772);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}